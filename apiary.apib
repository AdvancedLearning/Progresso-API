FORMAT: 1A


# Progresso API
Provides the ability to manage school information.

**Please Note**

There are various sections in this documentation which are marked as **Proposed**.
These are areas which are or will be under development in the near future. Once areas/methods are complete they will be marked as Available.

If you have any comments or suggestions please contact:
            **sally.robinson@advancedcomputersoftware.com**


# Group Authorisation
Method for security and access.

The UserId and Password will be issued to the Partner by the educational establishment and are establishment specific.

**Passwords which contain special characters will need to be encoded prior to use

## Access Tokens [/Token]
The Access Token used is an OAuth token and has an automatic expiry.

Required parameters are:

- Username
- Password
  - NB: Passwords which contain special characters MUST be encoded

### Request token [POST]

+ Request

    + Headers
    
            Content-Type: application/x-www-form-urlencoded
            
    + Body
    
            grant_type=password&username=[USERNAME]&password=[URI_ENCODED_PASSWORD]

+ Response 200 (application/json)

    + Body
    
            {
                "access_token": "63AUHWsGVEDIEl8",
                "token_type": "bearer",
                "expires_in": 86399,
                ".issued": "Wed, 30 Dec 2015 11:22:48 GMT",
                ".expires": "Thu, 31 Dec 2015 11:22:48 GMT"
            }

# Group Employees Collection
Methods for all employee-related resources

## Employee Record [/employees/{id}]
View a single employee record

Required parameters are:

- Employee Id
+ Parameters
    + id (required, int, `54321`) ... The unique identifier of the employee

### View an employee record [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    

+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":           12345,
                "staffCode":            "sc123",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968 00:00:00",
                "Gender":               "1",
                "startDate":            "28-02-2014 00:00:00",
                "leftDate":             "31-08-2015 00:00:00"
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "type":     "H",                                        "phoneId":  1
                                            "number":   "015555555",
                                            "smsFlag":  false,
                                            "phoneId":  1234567
                                            
                                        },{
                                            "type":     "M",                                        "phoneId":  1
                                            "number":   "075555555",
                                            "smsFlag":  ftrue,
                                            "phoneId":  1234568
                                        }],
                "addressDetails":       [{
                                            "country":  "GBR",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId": 123456
                                        }],
                "status":               "active",
                "niNumber":             "NI1234HJGJ34",
                "qtStatus":               "True",
                "qtsRoute":               "OTTP",
                "dateOfQTS":              "",
                "HTLA":                   "False",
                "dateOfHTLAStatus":       "",
                "languageDetails":        [{
                                            "Code":     "CHI",
                                            "Type":     "SH",
                                            "Level":    "5",
                                            "LanguageUsageId": 434000
                                        }],
                "qualificationDetails":   [{
                                            "qualificationCode":  "BEDO",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "3",
                                            "verified":           "False"
                                            "EmployeeQualificationId": 24534
                                        }],
                "nationality":            "",
                "ethnicity":              "WBRI",
                "religion":               "",
                "laStartDate":            "",
                "disability":             "NO"
            }


## Employee Basic Records [/employees{?status}{?since}]
Returns all employees basic records for a school

Optional parameters:

- Status = "active", "left" or "draft"

- Since = use date format mm-dd-yyyy

### Retrieve one to many basic employee records [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters
    + status (optional, string, `active`) ... Optional filter by status, valid values [ active | left | draft].
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to retrieve all changes since the date time specified. Only employee records that have changed will be returned.

+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":           12345,
                "staffCode":             "JBl",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968 00:00:00",
                "Gender":               "1",
                "startDate":            "28-02-2014 00:00:00",
                "leftDate":             "31-12-2015 00:00:00",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            
                                            "type":     "H",
                                            "number":   "015555555",
                                            "smsFlag":  false,
                                            "phoneId":  12334
                                        },{
                                            "type":     "M",
                                            "number":   "075555555",
                                            "smsFlag":  true,
                                            "phoneid":  212121
                                        }],
                "addressDetails":       [{
                                            "country":  "GBR",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD",
                                            "AddressId":345345
                                        }],
                "status":               "active",
                "niNumber":             "NI1234HJGJ34",
                "qtStatus":               "False",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "False",
                "DateOfHTLAStatus":       "",
                "LanguageDetails":        [{
                                            "Code":     "ENG",
                                            "Type":     "H",
                                            "Level":    "4",
                                            "LanguageUsageId": 434000
                                            }],
                "QualificationDetails":   null
                "nationality":            "GBR",
                "ethnicity":              "WBRI",
                "religion":               "MU",
                "laStartDate":            "",
                "disability":             "No"
            },
            {
                "employeeId":           54321,
                "staffCode":             "JDo",
                "title":                "Mrs",
                "surname":              "Doe",
                "forname":              "Jane",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Doe",
                "legalForename":        "Jane",
                "formerSurname":        "Smith",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "F",
                "startDate":            "28-02-2014",
                "leftDate":             ""
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "type":     "H",
                                            "number":   "015556655",
                                            "smsFlag":  false,
                                            "phoneId":  3425245
                                        },{
                                            "type":     "M",
                                            "number":   "075556655",
                                            "smsFlag":  true,
                                            "phoneid":  546456456
                                        }],
                "addressDetails":       [{
                                            "country":  "GBR",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire",
                                            "postCode": "DD55 36DD",
                                            "AddressId":6456747
                                        }],
                "status":               "active",
                "niNumber":             "NI123JHJGJ34",
                "qtStatus":               "false",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "false",
                "DateOfHTLAStatus":       "",
                "LanguageDetails":        null,
                "QualificationDetails":   null,
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             "No"
            }


## Create/Update Employee Records [/employees]
Create one to many basic employee records

Required parameters are:
- Staff Code    
- Forname         
- Surname      

    
### Create Basic Employees [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body

            {
                "staffCode":            "sc123",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "M",
                "startDate":            "28-02-2014",
                "leftDate":             "21-06-2014",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "smsFlag":  false
                                        },
                                        {
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire",
                                            "postCode": "DD55 36DD"
                                        }],
                "status":               "active",
                "NINumber":             "NI1234HJGJ34",
                "qtStatus":               "",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "",
                "dateOfHTLAStatus":       "",
                "languageDetails":        [{}],
                "qualificationDetails":   [{
                                            "qualificationCode":  "",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "",
                                            "verified":           ""
                                        }],
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             ""
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "EmployeeId":           1,
                "staffCode":            "sc123",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00001"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00002"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00001"
                                        }]
            }

### Update Employee Records [PUT]
Update one to many employee records

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body

            {
                "employeeId":           000001,
                "staffCode":            "sc123",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "M",
                "startDate":            "28-02-2014",
                "leftDate":             "21-06-2014",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire",
                                            "postCode": "DD55 36DD"
                                        }],
                "status":               "active",
                "NINumber":             "NI1234HJGJ34",
                "qtStatus":             "",
                "qtsRoute":             "",
                "dateOfQTS":              "",
                "HTLA":                   "",
                "dateOfHTLAStatus":       "",
                "languageDetails":        [{}],
                "qualificationDetails":   [{
                                            "qualificationCode":  "",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "",
                                            "verified":           ""
                                        }],
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             ""
            }

+ Response 200
    + Body
    
            [{
                "EmployeeId":           12345,
                "staffCode":            "sc123",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00001"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00002"
                                        }],
                "UKaddressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire",
                                            "postCode": "DD55 36DD",
                                            "addressId":  "00001"
                                        }]
            }]


## Employees Contacts [/employeeContacts{?status}]
Collection of all employees contacts for a school

### Retrieve collection of employees contacts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters
    + status (optional, string, `active`) ... Optional filter by status, valid values [ active | left ].


+ Response 200
    + Body
    
            [{
                "EmployeeId":           12345,
                "staffCode":             "sc123",
                "contacts": 
                            [{
                                        "contactId":    00001,
                                        "forename":     "",
                                        "surname":      "",
                                        "relationship": "Partner",
                                        "priority":     1,
                                        "emergency":    "primary",
                                    `   "nextOfKin":    true
                            },
                            {  
                                        "contactId":    00002,
                                        "forename":     "",
                                        "surname":      "",
                                        "relationship": "Other",
                                        "priority":     2,
                                        "emergency":    "",
                                    `   "nextOfKin":    false
                            }]
            }]
    

## Create/Update Employee Contact Association [/employeeContacts]
### Create Employee Contact Association [POST]
Associate Employee to one/multiple contacts

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            [{
                "EmployeeId":           12345,
                "contacts": 
                            [{
                                        "contactId":    00001,
                                        "relationship": "Partner",
                                        "priority":     1,
                                        "emergency":    "primary"
                                    `   "nextOfKin":    true
                            },
                            {  
                                        "contactId":    00002,
                                        "relationship": "Other",
                                        "priority":     2,
                                        "emergency":    ""
                                    `   "nextOfKin":    false
                            }]
            }]

+ Response 200
    + Body
    
            {
                "EmployeeId":           12345,
                "status":               true,
                "details":              "Update Successful",
                "contacts": 
                            [{
                              
                                "contactId":            00001,
                                "status":              true
                                "details":              "Update Successful"
                            },
                            {  
                                
                                "contactId":            00001,
                                 "status":              true
                                "details":              "Update Successful"
                            }]
            }
                            

## Employees Checks [/employeeChecks{?status}{?employee}]
Collection of all employee checks for employees within a school

### Retrieve collection of employee checks [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters
    + status (optional, boolean, `true`)... Option filter for active Employees
    + employee (optional, int, `0001``) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":           0001,
                "staffCode":            "sc123",     
                "ADD":                  [{
                                            "checkId":              1,
                                            "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedById":          123456
                                            "checkedByCode":        "JD",
                                            "checkedByName":        "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }],
                "AGN":                  [{ 
                                            "checkId":              2,
                                            "agencyName":           "",
                                            "paperworkDate":       "12-09-2013"
                                        }],
                "DBS":                  [{
                                            "checkId":              3,
                                            "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedById":          123456
                                            "checkedByCode":        "JD",
                                            "checkedByName":        "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                            "clearenceLevel":       "Enhanced check",
                                            "result":               "Pass",
                                            "requestDate":          "12-09-2013",
                                            "reviewDate":           "12-09-2013",
                                            "disclousureReference": "T000135"
                                        }],
                "GTC":                  [{ 
                                            "checkId":              4,
                                            "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedByCode":            "JD",
                                            "checkedByName":            "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }],
                "ID":                   [{ 
                                            "checkId":              5,
                                            "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedByCode":            "JD",
                                            "checkedByName":            "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }],
                "List99":               [{ 
                                            "checkId":              6,
                                            "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "list99Clearence":      "Pass",
                                            "checkedByCode":            "JD",
                                            "checkedByName":            "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }],
                "MED":                  [{ 
                                            "checkId":              7,
                                            "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedByCode":            "JD",
                                            "checkedByName":            "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }],
                "Qual":                 [{
                                            "checkId":              8,
                                             "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedByCode":            "JD",
                                            "checkedByName":            "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }],
                "RED":                  [{ 
                                            "checkId":              9,
                                             "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedByCode":            "JD",
                                            "checkedByName":            "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }],
                "RTW":                  [{ 
                                            "checkId":              10,
                                             "verificationDate":     "12-09-2013",
                                            "expiryDate":           "12-09-2014",
                                            "checkedByCode":            "JD",
                                            "checkedByName":            "John Doe",
                                            "position":             "Headteacher",
                                            "evidence":             "Certificate Provided"
                                        }]
            }


## Create/Update Employee Checks [/employeeChecks]
### Create Employee Checks [POST]
Create Employee checks for one to multiple employees

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            [{
                
                "employeeId":       0001,
  
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              0,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedById:"          123456
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                  
                                
            }]

+ Response 200 (application/json)

    + Body
    
            {
            
                "status":       true,
                "details":      "Create Succesful",
                "employeeId":       0001,
          
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              00001,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedById":          123456,
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                    

            }

### Update Employee Checks [PUT]
Update Employee checks for one to multiple contacts


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            [{
                "employeeId":       0001,
               
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              00001,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedById"           12345,
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                               
            }]

+ Response 200 (application/json)

    + Body
    
            {
            
                "status":       true,
                "details":      "Create Succesful",
                "employeeId":       0001,
                "checks":       [{
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              00001,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedById":          123456
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                                }]

            }



## Employees Contracts [/employeeContracts{?employee}]
Collection of all employee checks for employees within a school

### Retrieve collection of employee contracts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters

    + employee (optional, int, `12345`) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       00001,
                "staffCode":        "sc123",
                "contracts":        [{
                                        contractId":       0001    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "AHT",
                                        "postName":     "Assistant Head",
                                        "dailyRate":    true
                                         "origin":       "Other",
                                        "destination":  ""                           
                                        "roles":    [{
                                                        "roleId":           0001,
                                                        role":             "Teaching Assistant",
                                                        "hoursPerWeek":     32.50,
                                                        "FTEHours":         32.50,
                                                        "weeksPerYear":     52.14,
                                                        "payrollNumber":    "123456",
                                                        "NIRate":           "Contracted In",
                                                        "superannuation":   "Teachers Superannuation",
                                                        "costCentre":       "TEACH (Teaching Staff)",
                                                        "ledgerCode":       "A040 (Teachers Salaries"
                                                        "salaries":         [{
                                                                                "salaryId":             00001,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                "effectiveTo":          "31-08-2015",         "",
                                                                                "payScaleCode":             "",
                                                                                "payScaleName":             "",
                                                                                "regionalSpine":        "",
                                                                                "point":                "",
                                                                                "safeguardedSalary":    true,
                                                                                "includeInPensionCalc": false,
                                                                                "includeInNICalc":      true,
                                                                                "basePay":              ""
                                                                            }],
                                                        "allowance":        [{
                                                                                "allowanceId":          1,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                "effectiveTo":          "31-08-2015",
                                                                                "category":             "",
                                                                                "amount":               ""
                                                                            }],
                                                        
                                                    }],
                                    }]
            },
            {
                "employeeId":       00002,
                "staffCode":        "ad456",
                "contracts":        [{
                                        contractId":    0002    
                                        "type":         "FXT",
                                        "name":         "Sum Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2014",
                                        "postCode":     "SUP",
                                        "postName":     "Support Staff",
                                        "dailyRate":    true,
                                        "origin":       "Other",
                                        "destination":  "",
                                        "roles":    [{
                                                        "roleId":           0002,
                                                        "role":             "Teaching Assistant",
                                                        "hoursPerWeek":     32.50,
                                                        "FTEHours":         32.50,
                                                        "weeksPerYear":     52.14,
                                                        "payrollNumber":    "123456",
                                                        "NIRate":           "Contracted In",
                                                        "superannuation":   "Teachers Superannuation",
                                                        "costCentre":       "TEACH (Teaching Staff)",
                                                        "ledgerCode":       "A040 (Teachers Salaries)"
                                                        "salaries":         [{
                                                                                "salaryId":             00002,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                "effectiveTo":          "31-08-2015",
                                                                                "payScaleCode":             "",
                                                                                "payScaleName":             "",
                                                                                "regionalSpine":        "",
                                                                                "point":                "",
                                                                                "safeguardedSalary":    true,
                                                                                "includeInPensionCalc": false,
                                                                                "includeInNICalc":      true,
                                                                                "basePay":              ""
                                                                            }]
                                                    }]
                                    },
                                    {
                                        "contractId":    0003    
                                        "type":         "FXT",
                                        "name":         "Sum Contract",
                                        "startDate":    "01-09-2014",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "SUP",
                                        "postName":     "Support Staff",
                                        "dailyRate":    true,
                                        "origin":       "Other",
                                        "destination":  ""
                                        "roles":    [{
                                                        "roleId":           0003,
                                                        role":             "Teaching Assistant",
                                                        "hoursPerWeek":     32.50,
                                                        "FTEHours":         32.50,
                                                        "weeksPerYear":     52.14,
                                                        "payrollNumber":    "123456",
                                                        "NIRate":           "Contracted In",
                                                        "superannuation":   "Teachers Superannuation",
                                                        "costCentre":       "TEACH (Teaching Staff)",
                                                        "ledgerCode":       "A040 (Teachers Salaries)"
                                                        "salaries":         [{
                                                                                "salaryId":             00003,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                 "effectiveTo":          "31-08-2015",
                                                                                "payScaleCode":             "",
                                                                                "payScaleName":             "",
                                                                                "regionalSpine":        "",
                                                                                "point":                "",
                                                                                "safeguardedSalary":    true,
                                                                                "includeInPensionCalc": false,
                                                                                "includeInNICalc":      true,
                                                                                "basePay":              ""
                                                                            }],
                                                    }],                                        
                                    }]
            }

## Create/Update Employee Contracts [/employeeContracts]
### Create Contract [POST]
Create one to many contract records  


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "employeeId":       00001,
                "contracts":        [{
                                        contractId":       0,    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "AHT",
                                        "dailyRate":    true
                                         "origin":       "Other",
                                        "destination":  ""                           
                                    }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "status":           true,
                "details":          "saved successfully",
                "employeeId":       00001,
                "contracts":        [{
                                        "status":           true,
                                        "details":          "",
                                        contractId":     1    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                       
                                    }]
            }
            
            
### Update Contract [PUT]
Update one to many contract records  


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "employeeId":       00001,
                "contracts":        [{
                                        contractId":       1,    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "AHT",
                                        "dailyRate":    true
                                        "Base Pay":     36588.00
                                         "origin":       "Other",
                                        "destination":  ""                           
                                    }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "status":           true,
                "details":          "saved successfully"
                "employeeId":       00001,
                "contracts":        [{
                                        contractId":     1    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                        
                                    }]
            }

## Create/Update Employees Contract Roles [/employeeContractRoles]
Collection of all employee roles for employee contracts within a school

### Create Roles for employee contracts [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "employeeId":       00001,
                "contractId":       00001,
                "roles":    [{
                                "roleId":           0
                                role":             "Teaching Assistant",
                                "hoursPerWeek":     32.50,
                                "FTEHours":         32.50,
                                "weeksPerYear":     52.14,
                                "payrollNumber":    "123456",
                                "NIRate":           "Contracted In",
                                "superannuation":   "Teachers Superannuation",
                                "costCentre":       "TEACH",
                                "ledgerCode":       "A040"
                            }]
            },
            {
                "employeeId":       00002,
                "contractId":       00002,
                "roles":    [{
                                "roleId":           0,
                                "role":             "Teaching Assistant",
                                "hoursPerWeek":     32.50,
                                "FTEHours":         32.50,
                                "weeksPerYear":     52.14,
                                "payrollNumber":    "123456",
                                "NIRate":           "Contracted In",
                                "superannuation":   "Teachers Superannuation",
                                "costCentre":       "TEACH",
                                "ledgerCode":       "A040"
                            }]
            
            }

+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       00001,
                "contractId":       00001,
                "roles":    [{
                                "status":           true,
                                "details":          "Saved Succesfully",
                                "roleId":           0001,
                                "role":             "Teaching Assistant",

                            }]
            },
            {
                "employeeId":       00002,
                "contractId":       00002,
                "roles":    [{
                                "status":           true,
                                "details":          "Saved Succesfully",
                                "roleId":           0002,
                                "role":             "Teaching Assistant",

                            }]
            }


## Create/Update Employees Salary [/employeeRoleSalary]
Collection of all employee roles for employee contracts within a school

### Create Salaries for Roles for employees [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "salaryId":             0,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScaleCode":             "",
                                        "payScaleName":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "salaryId":             0,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScale":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                                    }]
            
            }
            
            
+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Saved Succesfully",
                                        "salaryId":         1,
                                        "roleSalaryId":     1
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Saved Succesfully",
                                        "salaryId":         2,
                                        "roleSalaryId":     2
                                    }]
            
            }


### Update Salaries for Roles for employees  [PUT]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "salaryId":             1,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScaleCode":             "",
                                        "payScaleName":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "salaryId":             2,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScale":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                                    }]
            
            }
            
            
+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Updated Succesfully",
                                        "salaryId":         1,
                                        "roleSalaryId":     1
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Updated Succesfully",
                                        "salaryId":         2,
                                        "roleSalaryId":     2
                                    }]
            
            }
            
## Employees Qualifications [/employeeQualifications{?employeeId}]
### Retrive a list of employees and their qualifications [GET]

+ Parameters
    + employeeId (optional, int, `1`) ... Contacts with the id

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
           
              {
                    "employeeId":       00001,
                    "staffCode":        "sc123",
                    "qualifications":   [{
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        },
                                        {
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "DMU: Doctor of Music",
                                            "subject1":             "P300: Media studies",
                                            "subject2":             "W300: Music",
                                            "classOfDegree":        "1: First Class honours",
                                            "verified":             true                                        
                                        }]
            
              },
             {
                    "employeeId":       00002,
                    "staffCode":        "ad456",
                    "qualifications":   [{
                                            "qualificationId":      3,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }                
             
             
             
             }



## Create/Update Employees Qualifications [/employeeQualifications]
### Create employee qualifications [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
           
            {
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "qualificationId":      0,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "qualificationId":      0,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }            
            }

+ Response 200 (application/json)

    + Body
    
            {
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",

                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",

                                        }]            
            }
            

### Update employee qualifications [PUT]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
           
              [{
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }            
            }]

+ Response 200 (application/json)

    + Body
    
            {
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",

                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",

                                        }]            
            }

    
# Group Contacts
Group of all contact-related resources

## Contacts Collection [/contacts/{id}]
Get all or a single contact

Optional Parameter
- Id - Contact Id

+ Parameters
    + id (optional, int, `12345`) ... Contact with the id

    
### Retrieve a collection of contacts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
                "ContactId":            1,
                "ContactCode":          ""'
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "GBR",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "smsFlag":  false,
                                            "PhoneId":  1
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  true,
                                            "PhoneId":  2
                                        }],
                "addressDetails":       [{
                                            "country":  "GBR",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire",
                                            "postCode": "DD55 36DD",
                                            "AddressId":1
                                        }]
            },
            {
                "ContactId":            2,
                "title":                "Mr",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "fire.princess@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "smsFlag":  false,
                                            "Phoneid":  3
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "smsFlag":  true,
                                            "PhoneId":  3
                                        }],
                "addressDetails":       [{
                                            "country":  "UGBR",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":2
                                        }]
            }
            
            
## Create/Update Contact Records [/contacts]

### Create Contact [POST]

Create one to many contact records  

Minimum Parameters
- Surname
- Forename
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "ContactCode":          "3447", ...this is user field to match what is returned
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            },
            {
                "ContactCode":          "3448",
                "title":                "Mr",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "fire.princess@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            }
    


+ Response 200
    + Body
    
            [{
                "contactCode":          "3447",
                "contactId":            000001,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "phoneId":  00004
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "phoneId":  00005
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00003
                                        }]
            },
            {
                "contactCode":          "3448",
                "contactId":            000002,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "phoneId":  00006
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "phoneId":  00007
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00004
                                        }]
            }]


### Update Contact [PUT]
Update one to many contact records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "contactId":            000001,
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "phoneId":  "00004",
                                            "type":     "Home",
                                            "number":   "0133321111111",
                                            "smsFlag":  false
                                        },{
                                             "phoneId":  00005,
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  false
                                        }],
                "addressDetails":       [{
                                            "AddressId":  "",
                                            "country":  "United Kingdom",
                                            "type":     "Work",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            
                                        }]
            },
            {
                "title":                "Ms",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "updated@emailaddress.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{}],
                "addressDetails":       [{}]
            }
    


+ Response 200
    + Body
    
            [{
                "contactId":            000001,
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00007
                                        }]
                "contactId":            000002
            },
            ]


            

# Group Learners

## Learners Collection [/Learners{?status}{?since}]

Collection of all learner-related resources

### Retrieve a collection of learners [GET]

+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`)
    
+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            [{
                "LearnerId":       12345,
                "LearnerCode":     "2013-00132",
                "UPN":             "U1234567890A",
                "ULN":             "1425863727",
                "Surname":         "Doe",
                "Forename":        "Jonny",
                "LegalSurname":    "Doe",
                "LegalForename":   "John",
                "DateOfBirth":     "20-04-2002 00:00:00",
                "Year":            "7",
                "Course":          "KS3",
                "DateOfEntry":     "03-09-2013 00:00:00",
                "Gender":          "M",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Pr",
                "EnrolementStatus":"C",
                "NCYear":          "7",
                "Status":          "Active",
                "PhoneDetails":    [{
                                        "Type":     "H",
                                        "Number":   "015556655",
                                        "SMSFlag":  false,
                                        "PhoneId":  123456
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "AddressDetails":   [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire",
                                            "PostCode": "DD55 36DD",
                                            "AddressId":1234569
                                    }]
            },
            ]

## Learner Record [/learners/{id}]


### Retrieve a learner [GET]

+ Parameters
    + id (required, int, `12345`) ... The unique identifier of the learner

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "learnerId":       12345,
                "learnerCode":     "2013-00132",
                "UPN":             "G999900210101",
                "ULN":             "1234567890",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "Male",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active"
                
            }


## Create/Update Learner Records [/learners]
### Create Learner [POST]
Create one to many learner records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "SourceId":        "001230",   **Proposed** 
                "learnerCode":     "2013-00132",
                "UPN":             "G999900210101",
                "ULN":             "1234567890",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "M",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00004,
                                        "relationship":             "Father",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
                                        
                                        
                
            },
            {
                "learnerCode":     "2013-00133",
                "UPN":             "A12331AA13",
                "ULN":             "9876543210",
                "Forename":        "Milli",
                "Surname":         "Doe",
                "LegalForename":   "Jane",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "30-06-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "11111111",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "071111111",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00001,
                                        "relationship":             "Step Father",
                                        "writtenCommunication":     "",
                                        "priority":                 2,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Secondary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   false,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  false
                                    },
                                    {
                                        "contactId":                00002,
                                        "relationship":             "Mother",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
            }

+ Response 200

    + Body
    
            {
                "status":               true,
                "details":              "saved successfully", 
                "learnerCode":          "JBl",
                "learnerId":            "000001",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "11111111",
                                            "phoneId":  "000051"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "071111111",
                                            "phoneId":  "00006"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00003"
                                        }],
                "contacts":             [{
                                            "contactId":            000001,
                                            "learnerContactRelId":  000001
                                        }]
            },
            {
                "LearnerCode":             "JDo",
                "LearnerId":           "000002",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00007"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00008"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  "00004"
                                        }],
                "contacts":             [{
                                            "contactId":            "000001",
                                            "learnerContactRelId":  "000002"
                                        },
                                        {
                                            "contactId":            "000002",
                                            "learnerContactRelId":  "000003"
                                        }]
            }

### Update Learner [PUT]
Update one to many learner records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "learnerCode":     "2013-00132",
                "UPN":             "G999900210101",
                "ULN":             "1234567890",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "M",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "phoneId":  "000051",
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00001,
                                        "relationship":             "Father",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
                                        
                                        
                
            },
            {
                "learnerCode":     "2013-00133",
                "UPN":             "A12331AA13",
                "ULN":             "9876543210",
                "Forename":        "Milli",
                "Surname":         "Doe",
                "LegalForename":   "Jane",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "30-06-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "11111111",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "071111111",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00001,
                                        "relationship":             "Step Father",
                                        "writtenCommunication":     "",
                                        "priority":                 2,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Secondary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   false,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  false
                                    },
                                    {
                                        "contactId":                00002,
                                        "relationship":             "Mother",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
                },
                {
                "learnerCode":     "2013-00134",
                "UPN":             "",
                "ULN":             "",
                "Forename":        "In",
                "Surname":         "Valid",
                "LegalForename":   "In",
                "LegalSurname":    "Valid",
                "DateOfBirth":     "",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{}],
                "addressDetails":   [{}],
                "status":           "",
                "contacts":         [{}]
                }]
            }
                
+ Response 200
    + Body
    
            [{
                "Status":               true,
                "learnerCode":           "2013-00132",
                "learnerId":            "000001",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "11111111",
                                            "phoneId":  "000051"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "071111111",
                                            "phoneId":  "00006"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00003"
                                        }],
                "contacts":             [{
                                            "contactId":            000001,
                                            "learnerContactRelId":  000001
                                        }]
            },
            {
                "Status":               true,
                "LearnerCode":           "2013-00133",
                "LearnerId":           "000002",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00007"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00008"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00004"
                                        }],
                "contacts":             [{
                                            "contactId":            000001,
                                            "learnerContactRelId":  000012
                                        },
                                        {
                                            "contactId":            000002,
                                            "learnerContactRelId":  000013
                                        }]
            },
            {
                "status":           false,
                "details":           "Invalid Date of Birth,Invalid status",
                "learnerCode":     "2013-00134",
                "UPN":             "",
                "ULN":             "",
                "Forename":        "In",
                "Surname":         "Valid",
                "LegalForename":   "In",
                "LegalSurname":    "Valid",
                "DateOfBirth":     "",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{}],
                "addressDetails":   [{}],
                "status":           "",
                "contacts":         [{}]
                

            }]


## Learner Contacts [/learnerContacts{?since}{?status}{?responsibility}{?priority}]
### Retrieve a Contacts associated to a learner [GET]
+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed
    + responsibility (optional, boolean, `true`) ... Filter Contacts returned to contacts with Parental Responsibilty
    + priority (optional, int, `1`) ... Filter Contacts returned to contacts with priority of that passed


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body

            [{
                
                "learnerCode":     "2013-00132",
                "learnerId":       0001,
                "UPN":             "G999900210101",
                "contacts":         [{
                                        "learnerContactRelId":      000003
                                        "contactId":                00001,
                                        "forename":                 "",
                                        "surename":                 "",
                                        "relationship":             "Father",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    },
                                    {
                                        "learnerContactRelId":      000004
                                        "contactId":                00006,
                                        "forename":                 "",
                                        "surename":                 "",
                                        "relationship":             "Mother",
                                        "writtenCommunication":     "",
                                        "priority":                 2,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
            }]


            
## Learner Health Details [/learnerHealth{?since}]
### Retrieve a learner Health Details [GET]
+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body 
            
            {
                "learnerCode":          "2013-00132",
                "learnerId":             000001,
                "allergies":              [{
                                                "Egg"},
                                            { "Shellfish"
                                          }],
                "foodPreference":        [{
                                                "DairyFree"

                                        }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "NoDisability"
                
                                          }],
                "disabilityNotes":      "",
                "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack"
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs"

                                        }]
                    
            
            },
            {
               "learnerCode":          "2013-00133",
                "learnerId":             000002,
                "allergies":              [{
                                                "Wheat"
                
                                          }],
                "foodPreference":        [{ }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "Not Collected"
                                          }],
                "disabilityNotes":      "",
                "medicalConditions":    [{ }],
                "medicalEvents":        [{}]
            
            }
            
## Create/Update Learner Health Details [/learnerHealth]
### Create Learner Health [POST]
Create one to many learner health records
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
           
            {
               "learnerCode":          "2013-00133",
                "learnerId":             000002,
                "allergies":              [{
                                                "Wheat"
                
                                          }],
                "foodPreference":        [{ }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "Not Collected"
                                          }],
                "disabilityNotes":      "",
                 "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Added"
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs"

                                        }]
            
            }

+ Response 200

    + Body
    
            {
                "status":               true,
                "learnerCode":           "2013-00132",
                "learnerId":            "000001",
                "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Added",
                                                "conditionId":  000001
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs",
                                                "MedicalEventId":        000001
                                        }]
            }

### Update Learner Health [PUT]
Update one to many learner heatlh records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
           
            [{
               "learnerCode":          "2013-00133",
                "learnerId":             000002,
                "allergies":              [{
                                                "Wheat"
                
                                          }],
                "foodPreference":        [{ }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "Not Collected"
                                          }],
                "disabilityNotes":      "",
                 "medicalConditions":    [{
                                                "conditionId":  000001,
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Updated"
                
                                        }],
                "medicalEvents":        [{
                                                "MedicalEventId":          000001,
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs"

                                        }]
            
            }]

+ Response 200
    + Body
    
            [{
                "status":               true,
                "learnerCode":           "2013-00132",
                "learnerId":            "000001",
                "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Updated",
                                                "conditionId":  000001
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs",
                                                "conditionId":          000002
                                        }]
            }]

## Create/Update Learner Attendance [/learnerRollCallAttendance]
### Create Learner Roll Call Attendance [POST]
Create Attendance for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
           
            [{
                "learnerCode":          "2013-00001",
                "attendanceStartDate":  "16-06-2014",
                "rollCallSessionStart": "AM",
                "AttendanceString":     "/\/\/\/\/\##IIII/\/\/\"
            },
            {
                "learnerCode":          "2013-00002",
                "attendanceStartDate":  "16-06-2014",
                "rollCallSessionStart": "AM",
                "AttendanceString":     "BBBB/\/\/\##/\/\/\/\/\"
                
            }
            
            }]

+ Response 200

    + Body
    
            {
                 "learnerCode":          "2013-00001",
                 "status":             "success"
            },
            {
                "learnerCode":          "2013-00002",
                 "status":             "success"
                
            }


## Create/Update Learner Attendance [/learnerLessonAttendanceByPeriod]

### Create Learner Lesson Attendance By Period [POST]
Create Lesson Attendance for one to many learners using Timetable Period

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
           
            [{
                "learnerCode":          "2013-00001",
                "iteration":            1,
                "periodId":             1,
                "attendanceCode":       "/"
            },
            {
                "learnerCode":          "2013-00002",
                "iteration":            1,
                "periodId":             1,
                "attendanceCode":       "N"
            }
            
            }]

+ Response 200

    + Body
    
            {
                 "learnerCode":          "2013-00001",
                 "status":             "success"
            },
            {
                "learnerCode":          "2013-00002",
                 "status":             "success"
                
            }


## Create/Update Learner Attendance [/learnerLessonAttendanceByLessonTime]

### Create Learner Lesson Attendance by Time [POST]

Create Attendance for one to many learners using date and time of lesson

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
           
            [{
                "learnerCode":          "2013-00001",
                "date":                 "16-06-2014",
                "startTime":            "09:00",
                "finishTime":           "10:00",
                "attendanceCode":       "/"            

            },
            {

                "learnerCode":          "2013-00002",
                "date":                 "16-06-2014",
                "startTime":            "09:00",
                "finishTime":           "10:00",
                "attendanceCode":       "N"
            }]

+ Response 200
    + Body
    
            [{
                 "learnerCode":          "2013-00001",
                 "status":             "success"
            },
            {
                "learnerCode":          "2013-00002",
                 "status":             "success"
                
            }]


## Learner Exclusions [/learnerExclusions{?startDate}{?endDate}]
### Retrieve a learner Exclusion Details [GET]
+ Parameters
    + startDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    + endDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body 
            
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                        "exclusionId":  0001,
                                        "category":     "FIXD",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    }]
            }
                
## Create/Update Learner Exclusions [/learnerExclusions]
### Create Learner Exclusions [POST]
Create Exclusions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },
                                    {
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                        "category":     "FIXD",
                                        "reason":       "DB",
                                        "startDate":    "2015-11-25",
                                        "endDate":      "2015-11-27",
                                        "startSession": "AM",
                                        "endSession":   "PM",
                                        "notes":        "Consistently failing to produce work in lessons",
                                        "totalDays":    3,
                                        "totalSessions":6,
                                        "LAC":          false,
                                        "headNotified": null,
                                        "govMeeting":   null,
                                        "provisionStartDate":   null,
                                        "provisionDetails":     null"",
                                        "appeal":           false,
                                        "appealDate":       null,
                                        "appealCutOff":     null,
                                        "exclusionHearing": null,
                                        "outcome":          null,
                                        "reintregationMeetingDate": null,
                                        "reintregationNotes":      null,
                                        "reinstatementDate":        null,
                                        "reinstatementNotes":       null
                                    }
            
            }]

+ Response 200
    + Body
    
            [{
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "Saved successfully",
                                     "exclusionId":  1
                                    },
                                    {
                                    "status":   true,
                                    "details":  "Saved successfully",
                                     "exclusionId":  2
                                    }]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "Saved successfully",
                                     "exclusionId":  3
                                    }]
            }]

### Update Learner Exclusions [PUT]
Update Exclusions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                        "exclusionId":  1
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },
                                    {
                                        "exclusionId":  2,
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                        "exclusionId":  3
                                        "category":     "PRM",
                                        "reason":       "DB",
                                        "startDate":    "2015-12-10",
                                        "endDate":      "",
                                        "startSession": "AM",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    null,
                                        "totalSessions":null,
                                        "LAC":          false,
                                        "headNotified": null,
                                        "govMeeting":   null,
                                        "provisionStartDate":   null,
                                        "provisionDetails":     null,
                                        "appeal":           true,
                                        "appealDate":       null,
                                        "appealCutOff":     null,
                                        "exclusionHearing": null,
                                        "outcome":          null,
                                        "reintregationMeetingDate": null,
                                        "reintregationNotes":      null,
                                        "reinstatementDate":        null,
                                        "reinstatementNotes":       null
                                    }]
            }]

+ Response 200

    + Body
    
            {
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  1
                                    },
                                    {
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  2
                                    }]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  3
                                    }]
            }


## Learner SEN Provisions [/learnerSENProvisions{?status}]

### Retrieve a learner SEN Provision Details [GET]
+ Parameters
    + status (optional, string, `Active`) ... The staus of Learner e.g. Active, Draft, Left

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionId":          00001
                                    "provisionTypeCode":    "E",
                                    "provisionTypeName":    "Education, Health and Care Plan",
                                    "startDate":            "19/09/2014",
                                    "reviewDate":           "20/09/2014",
                                    "endDate":              "20/09/2014"
                                },
                                {
                                    "provisionId":          00002
                                    "provisionTypeCode":    "P",
                                    "provisionTypeName":    "School Action Plus",
                                    "startDate":            "21/09/2014",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
                },
                {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "provisions":   [{
                                    "provisionId":          00003
                                    "provisionTypeCode":    "P",
                                    "provisionTypeName":    "School Action Plus",
                                    "startDate":            "21/09/2014",
                                    "reviewDate":           "01/01/2015",
                                    "endDate":              "30/08/2015"
                                }]
                }
                ]
                
                
## Create/Update Learner SEN Provisions [/learnerSENProvisions]

### Create Learner SEN Provisions [POST]

Create SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionTypeCode":    "A",
                                    "provisionTypeName":    "School Action",
                                    "startDate":            "2015-11-25",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }
              
+ Response 200

    + Body
    
            {
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "status":           true,
                "details":          "Saved successfully",
                "provisions":   [{
                                    "status":               true,
                                    "details":              "Saved successfully",
                                    "provisionId":          00001
                                }]
            }

### Update Learner SEN Provisions [PUT]

Update SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionId":          0001
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }]
              
+ Response 200

    + Body
    
            {
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "status":           true,
                "details":          "",
                "provisions":   [{
                                    "status":               true,
                                    "details":              ""
                                    "provisionId":          00001
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }


## Learner SEN Major Needs [/learnerSENMajorNeeds{?status}]

### Retrieve a learner SEN Major Need Details [GET]

+ Parameters
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "leanerMajorNeedId":          00001
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            1
                                }]
            }


## Create/Update Learner SEN Major Needs [/learnerSENMajorNeeds]

### Create Learner SEN Major Needs [POST]

Create SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "majorNeedCode":        "SPLD",
                                    "majorNeedDescription": "Specific Learning Difficulty ",
                                    "ranking":              1
                                },{
                                    "MajorNeedCode":        "SEMH",
                                    "MajorNeedDescription": "Social, Emotional and Mental Health",
                                    "Ranking":              2
                                }
            }]


+ Response 200 (application/json)

    + Body 
            
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "leanerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            1
                                }]
            }
            

### Update Learner SEN Major Needs [PUT]

Create SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "learnerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            2
                                }]
            
            
            
            }]

+ Response 200 (application/json)

    + Body 
            
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "learnerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            2
                                }]
            }


## Learner Siblings [/learnerSiblings{?learnerId}]

+ Parameters
    + learnerId (optional, int, `00001`) ... Return siblings of a learner

### Return a list of siblings associated to one of more learners [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerCode":      "2013-00002",
                                    "learnerId":        0002
                                },
                                {
                                    "learnerCode":      "2013-00003",
                                    "learnerId":        0003
                                
                                }]
            }]
            
## Create/Update Learner Sibling Association [/learnerSiblings]
### Create Learner Sibling Association [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                
                                }]
            
            }]
            
            

+ Response 200 (application/json)

    + Body 
            
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                
                                }]
            
            }]


### Update Learner Sibling Association [PUT]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                
                                }]
            
            }]
            
            

+ Response 200 (application/json)

    + Body 
            
            {
                "learnerId":        0001,
                "siblings":   [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                
                                }]
            
            }




# Group Groups
Group of all Group-related resources

## Groups Collection [/groups{?groupStartDate}{?groupEndDate}{?type}{?since}]

+ Parameters
    + groupStartDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a start date on or after date
    + groupEndDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a end date on or before date
    + type (optional, string, `TeachingGroup`) ... Type of Group to Return
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Groups modified since date provided

    
### Retrieve a collection of Groups [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "groupCode":    "9A",
                "course":       "Key Stage 4",
                "dateFrom":     "01-09-2015 00:00:00",
                "dateTo":       "30-08-2016 00:00:00",
                "employeeId":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "groupId":      000001,
                "Groupname":         "9A",
                "size":         30,
                "subjectCode":  "",
                "subjectName":  "",
                "Type":         "RegistrationGroup",
                "Year":         "10"
            },
            {
                "groupCode":    "10AR/1",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employeeId":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"
                                },
                                {
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00002"
                                }],
                "groupId":      000002,
                "Groupname":         "10Art 1",
                "size":         29,
                "subjectCode":  "AR",
                "subjectName":  "Art",
                "type":         "TeachingGroup",
                "Year":         "10"
            }

            
## Create/Update Group [/groups]


### Create Group [POST]
Create one or many groups
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
             [{
                "groupCode":    "9A",
                "course":       "KS4",
                "dateFrom":     "01-09-2015 00:00:00",
                "dateTo":       "30-08-2016 00:00:00",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "Name":         "9A",
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "10"
            },
            {
                "groupCode":    "10SC/1",
                "course":       "Key Stage 4",
                "dateFrom":     "01-09-2015 00:00:00",
                "dateTo":       "30-08-2016 00:00:00",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "Name":         "10 Science 1",
                "subjectCode":  "SC",
                "subjectName":  "Science",
                "type":         "TeachingGroup",
                "Year":         "10"
            }]


+ Response 200
    + Body
    
            {
                "Details":      "Saved successfully",
                "Status":       "True",
                "groupId":      000001,
                "groupCode":    "9B"
             },
            {
                "Details":      "Saved successfully",
                "Status":       "True",
                "groupId":      000002,
                "groupCode":    "10SC/1"
            }


### Update Group [PUT]
Update one or many groups
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
             [{
                "groupId":      000001,
                "groupCode":    "9B",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   00001},
                                {
                                    "employeeId":           54321,
                                    "staffCode":             "JDo"
                                }],
                "name":         "9A",
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "9"
            }]


+ Response 200
    + Body
    
            {
                "status":       true,
                "details":      "Saved Successfully"
                "groupId":      000001,
                "groupCode":    "9B"
             }


## Group Association [/groupAssociation/{?groupId}{?since}{?groupStartDate}{?groupEndDate}]

+ Parameters
    + groupId (optional, number, `12345`) ... The unique identifier of a Learner Group
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to retrieve all changes since the date time specified.
    + groupStartDate (optional, dateTime, `01-04-2014`) ... Optional filter to retrieve all groups with a start date after specified date
    + groupEndDate (optional, dateTime, `01-04-2014`) ... Optional filter to retrieve all groups with an end date before specified date.

### Retrieve Learner Group Association [GET]


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]


+ Response 200 (application/json)
    + Body
    
            {
                    "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    2,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            },
            {
                    "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            }
            
## Create/Update Group Association [/groupAssociation]


### Create Group Association [POST]
Create Group Association for one to many Learners and Groups

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{
                    "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            },
            {
                   "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]

            }]


+ Response 200 (application/json)

    + Body
    
            {
                   "GroupId":       1,
                    "status":       true,
                    "details":      "Saved successfully",
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1

                                },
                                {
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    2


                                }]
            },
            {
                    "groupId":      2,
                    "status":       true,
                    "details":      "Saved successfully",                  
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3

                                },
                                {
                                        "status":       true,
                                        "details":      "Saved successfully",                                
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4

                                }]            
        
             }

### Update Group Association [PUT]
Update Group Association for one to many Learners and Groups
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
            
    + Body

            [{
                   "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1,
                                        "startDate":                "10-09-2014",
                                        "endDate":                  "30-08-2015"
                                }]
            },
            {
                   "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]

            }]


+ Response 200 (application/json)

    + Body
    
            {
                    "groupId":      1,
                    "status":       true,
                    "details":      "Saved successfully",
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1

                                }]
            },
            {
                    "groupId":      2,
                    "status":       "success",
                    "details":      "Action Successful",see                   
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3

                                },
                                {
                                        "status":       true,
                                        "details":      "Saved successfully",                                
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4

                                }]            
        
             }

# Group Academic Data
Group of all Academic Resources

## AcademicYear [/academicYear/{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Year

### Retrieve AcadmicYear [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "AcademicYearId":   1
                "Name":             "Academic Year 2014/2015",
                "StartDate":        "01-09-2014",
                "EndDate":          "31-08-2015"
                
             },
            {
                "AcademicYearId":   2
                "Name":             "Academic Year 2013/2014",
                "StartDate":        "01/09/2013",
                "EndDate":          "31/08/2014"
                
            }


## Create/Update Academic Years [/academicYear]

### Create Academic Year [POST]
Create one to many academic years

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{
                "name":             "Academic Year 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015"
                
             },
            {
                "name":             "Academic Year 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "name":             "Academic Year 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015",
                "Status":           "Saved successfully"
                
             },
            {
                "academicYearId":   2
                "name":             "Academic Year 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                "Status":           "Saved successfully"
                
            }


### Update Academic Year [PUT]

Update one to many academic years

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            [{
                "academicYearId":   1
                "name":             "AC 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015"
                
             },
            {
                "academicYearId":   32132
                "name":             "AC 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "status":           true
                "details":          "Saved successfully"
                
             },
            {
                "academicYearId":   32132
                "status":           true
                "details":          "Saved successfully"
                
            }


## Academic Terms [/academicTerms/{?id}{?AcYearId}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Term
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve AcadmicTerms [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }

## Create/Update Academic Terms [/academicTerms]

### Create Academic Term [POST]

Create one to many academic terms

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "academicYearId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
               "academicYearId":   1
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "academicYearId":   1,
                "academicTermId":   1,
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }


### Update Academic Term [PUT]

Update one to many academic terms

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            [{
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "05/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
               "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }
            

## Term Breaks [/termBreaks/{?AcYearId}{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Term Break
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Term Breaks [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "TermBreakId":      1
                "name":             "Spring Half Term",
                "startDate":        "2014-04-25",
                "endDate":          "2014-06-01"
                
             },
            {
                "academicYearId":   1
                "TermBreakId":      2
                "name":             "Autumn Half Term",
                "startDate":        "2013-10-26",
                "endDate":          "2013-11-01"
                
            }]


## Create/Update Term Breaks [/termBreaks]


### Create Term Breaks [POST]


Create one to many terms breaks

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "AcademicYearId":   1
                "Name":            "Spring Half Term",
                "startDate":        "2014-05-25",
                "endDate":          "2014-06-01"
                
             },
            {
                "AcademicYearId":   1
                "name":             "Autumn Half Term",
                "startDate":        "2013-10-26",
                "endDate":          "2013-11-02"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      1
                "name":             "Spring Half Term",
                "startDate":        "25/05/2014",
                "endDate":          "01/06/2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      2
                "name":             "Autumn Half Term",
                "startDate":        "26/10/2013",
                "endDate":          "02/11/2013"
                
            }


### Update Term Breaks [PUT]

Update one to many terms breaks

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "AcademicYearId":   1
                "TermBreakId":      1
                "Name":             "Spring Half Term",
                "StartDate":        "2014-05-25",
                "EndDate":          "2014-06-01"
                
             },
            {
               "TermBreakId":   2
                 "name":             "Autumn Half Term",
                "startDate":        "2013-10-26",
                "endDate":          "2013-11-02"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      1
                "name":             "Spring Half Term",
                "startDate":        "25-05-2014",
                "endDate":          "01-06-2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      2
                 "name":             "Autumn Half Term",
                "startDate":        "26-10-2013",
                "endDate":          "02-11-2013"
                
            }

## Week Structure [/weekStructure/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve WeekStructure [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "NWD"
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "FWD"
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    " Half Working Day - AM"
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - PM"
                
            }

## ** Proposed ** Update Week Structure [/weekStructure]

### Set Week Structure [PUT]
Set one to many days of a Week Structure

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "Non-Working Day"
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "Full Working Day"
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    "Full Working Day"
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - AM"
                
            }]
            
+ Response 200 (application/json)
    + Body
        
            [{
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "Non-Working Day",
                "status":               true
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "Full Working Day",
                "status":               true
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    "Full Working Day",
                "status":               true
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - AM",
                "status":               true
            }]

## Academic Calendar Events [/academicCalendarEvents/{?AcYearId}{?id}]

Optional parameters are:

- AcYearId - Academic Year Id
- Id - Calendar Event Id

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Calendar Event
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Calendar Events [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
            
            {
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "IN",
                "startDate":            "2014-09-02",
                "endDate":              "2014-09-02",
                "fullHalfDay":          "FD"
                "calendarEventId":      0001
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "#",
                "startDate":            "2014-09-03",
                "endDate":              "2014-09-03",
                "fullHalfDay":          "HDA"
                "calendarEventId":      0002
            }


## Create/Update Academic Calendar Events [/academicCalendarEvents]


### Create Academic Calendar Events [POST]
Create one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            

    + Body
    
            {
                "AcYearId":             1,
                "Name":                 "Half day pm",
                "Category":             "IN",
                "StartDate":            "2016-10-03",
                "EndDate":              "2016-10-03",
                "FullHalfDay":          "HDP"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "O~",
                "StartDate":            "2016-09-05",
                "EndDate":              "2016-09-05",
                "FullHalfDay":          "FD"
            }
            
    
+ Response 200 (application/json)
    
    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "name":                 "Inset Day",
                "startDate":            "02-09-2014",
                "endDate":              "02-09-2014",
                "calendarEventId":      0003
            },
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "name":                 "Inset Day",
                "startDate":            "20-09-2014",
                "endDate":              "20-09-2014",
                "calendarEventId":      0004
            }

### Update Academic Calendar Events [PUT]
Update one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            [{
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "fullHalfDay":          "Full Day"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "Only staff should attend",
                "startDate":            03-09-2014,
                "endDate":              03-09-2014,
                "fullHalfDay":          "Half Day AM"
            }]
            
    
+ Response 200 (application/json)
    
    + Body
        
            [{
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            },
            {
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            }]

## Courses [/courses/{?AcYearId}]

Optional Parameters
- AcYearId - Academic Year Id

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Courses  [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
               "acYearId":          1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001
            },
            {
                "acYearId":         1,
                "courseCode":       "KS4",
                "courseName":       "Key Stage 4",
                "courseId":         0002

            }


## CourseYears [/courseYear/{?AcYearId}]

Optional Parameters
- AcYearId - Academic Year Id
    
+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve CourseYears Association [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
               "acYearId":          1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001,
                "yearCode":         "Y7",
                "yearName":         "Year 7",
                "yearId":           0001,
                "couseYearId":      0001
            },
            {
                "acYearId":         1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001,
                "yearCode":         "Y8",
                "yearName":         "Year 8",
                "yearId":           0002,
                "couseYearId":      0002
            },
            {
                "acYearId":         1,
                "courseCode":       "KS4",
                "courseName":       "Key Stage 4",
                "courseId":         0002,
                "yearCode":         "Y10",
                "yearName":         "Year 10",
                "yearId":           0004,
                "couseYearId":      0003
            }


## Create/Update CourseYears [/courseYear]

### Create CourseYears [POST]

Create association of one to many Course to Years

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "AcademicYearId":   1,
                "CourseId":         0001,
                "YearTypeId":       0001
            },
            {
                "AcademicYearId":   1,
                "CourseId":         0002,
                "YearTypeId":       0004
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1,
                "CourseId":         0001,
                "YearTypeId":       0001,
                "CourseYearId":     0001
            },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1,
                "CourseId":         0002,
                "YearTypeId":       0004,
                "CourseYearId":     0003
            }
            

# Group Timtetable
Group of all Timetable Resources

## Timetable Sources [/TTSources?]



### Retrieve Timetable Sources Association [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)
    + Body
    
            [{
                "timetableSourceId":        0001
                "code":                     "2014/2015",
                "name":                     "TT 2014/2015",
                "startDate":                "2015/09/01",
                "endDate":                  "2016/08/30",
                "timetableIterations":      52,
                "splitCoverEvents" :        false,
                "splitMultiplePeriods":     false,

            }]

## Create/Update Timetable Sources [/TTSources/]
### Create Timetable Sources [POST]
Create one to many Timetable Sources

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{
                "code":                     "2015/2016",
                "name":                     "TT 2015/2016",
                "startDate":                "2015/09/01",
                "endDate":                  "2016/08/31",
                "timetableIterations":      52,
                "splitCoverEvents" :        false,
                "splitMultiplePeriods":     false,
            }]


+ Response 200 (application/json)
    + Body
    
            [{
                "Status":                   true,
                "Details":                  "Saved successfully",
                "TimetableSourceId":        1,
                "Code":                     "2015/2016"
            }]


### Update Timetable Sources [PUT]
Update one to many Timetable Sources

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{
                "timetableSourceId":        1,
                "code":                     "2015/2016",
                "name":                     "Updated",
                "startDate":                "2015/09/01",
                "endDate":                  "2016/08/31",
                "timetableIterations":      52,
                "splitCoverEvents" :        false,
                "splitMultiplePeriods":     false,
            }]

+ Response 200 (application/json)
    + Body
    
            [{
                "Status":                   true
                "Details":                  "Saved successfully"
                "TimetableSourceId":        1
                "code":                     "2015/2016"
            }]



## Day Compositions  [/dayCompositions/{?TimetableSourceId}]

+ Parameters

    + TimetableSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Day Compositions [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)
    + Body
    
            [{
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                    "Day Comp 2014/2015"
             },
            {
                "timetableSourceId":        1,
                "dayCompositionId":         2,
                "Name":                    "Day Comp 2014/2015 For KS5"
             }]


## Create/Update Day Compositions [/dayCompositions/TimetableSourceId]

+ Parameters
    
    + TimetableSourceId (required, number, `12345`) ... The unique identifier of a Timetable Source


### Create Day Compositions [POST]
Create one to many Day Compositions

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{           
                "timetableSourceId":        1,
                "Name":                    "DC 2014/2015"
            }]


+ Response 200 (application/json)
    + Body
    
            [{
                "status":                   true,
                "details":                  "Saved successfully",  
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                     "DC 2014/2015"
            }]

### Update Day Compositions [PUT]
Update one to many Day Compositions

+ Parameters
    
    + TimetableSourceId (required, number, `12345`) ... The unique identifier of a Timetable Source

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{           
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                    "DC 2014/2015 Updated"
            }]


+ Response 200 (application/json)
    + Body
    
            [{
                "status":                   true,
                "details":                  "Saved successfully",  
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                     "DC 2014/2015 Updated"
            }]


## Day Compositions Periods [/dayCompositionsPeriods/{?TimetableSourceId}]

+ Parameters

    + TimetableSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Day Composition Periods [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)
    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Monday",
                "periodId":                 1,
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Monday",
                "periodId":                 2,
            `   "periodCode":               "P2",
                "periodName":               "Period 2",
                "startTime:"                "09:50",
                "endTime":                  "10:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Monday",
                "periodId":                 3,
            `   "periodCode":               "P3",
                "periodName":               "Period 3",
                "startTime:"                "11:10",
                "endTime":                  "12:10"
            }]

##Create/Update Day Compositions Periods [/dayCompositionsPeriods/]
### Create Day Compositions Periods [POST]
Create on to many Day Compositions Periods

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Request (application/json)
    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Monday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Tuesday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            }]



+ Response 200 (application/json)
    + Body
    
            [{
                "status":                    true,
                "details":                  "Saved successfully",  
                "dayCompositionId":         1,
                "periodId":                 1,
                "weekDay":                  "Monday",
            `   "periodCode":               "P1"
            },
            {
                "status":                    true,
                "details":                  "Saved successfully",  
                "dayCompositionId":         1,
                "periodId":                 2,
                "weekDay":                  "Tuesday",
            `   "periodCode":               "P1",
            }]


### Update Day Compositions Periods [PUT]

Update on to many Day Compositions Periods

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Request (application/json)

    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 1,
                "weekDay":                  "Monday",
                "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime":                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 2,
                "weekDay":                  "Tuesday",
                "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime":                "08:30",
                "endTime":                  "09:50"
            }


+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 1,
                "WeekDay":                  "Monday",
                "PeriodCode":               "P1"
            },
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 2,
                "WeekDay":                  "Tuesday",
                "PeriodCode":               "P1"
            }



## Timetable Events  [/ttEvents/{TimetableSourceId}{startDate}{endDate}{?dayCompositionId}]

+ Parameters

    + TimetableSourceId (required, number, `12345`) ... The unique identifier of a timetable source
    + startDate (required, date, `2015-09-09`) ...    Filter date for timetable events
    + endDate (required, date, `2015-09-09`) ...    Filter date for timetable events
    + dayCompositionId (optional, number, `12345`) ...    Filter for events from a single day composition


### Retrieve Timetable Events [GET]

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
            
            {
                "EventId":          1,
                "Day"  :            "Monday",
                "StartTime":        "08:50",
                "FinishTime":       "09:00",
                "Employees":        [{  
                                        "EmployeeId":   123456,
                                        "EmployeeCode": "ABC"
                                    }],
                "Groups":           [{  
                                        "GroupId":      123456,
                                        "GroupCode":    "Aba"
                                    }],
                "Subjects/NCAType": [{
                                        "Subject/NCAType":  "Tutor Time"
                                    }],
                "Rooms":            [{  
                                        "Room":         "A1"
                                    }],
                "Duration":         10,
                "EventType":        "Timetable",
                "NonContactType":   ""
            },
            {
                "EventId":          2,
                "Day":              "Monday",
                "StartTime":        "09:00",
                "FinishTime":       "10:00",
                "Employees":        [{  
                                        "EmployeeId":   465789,
                                        "EmployeeCode": "DEF"
                                    }],
                "Groups":           [{  
                                        "GroupId":      45601,
                                        "GroupCode":    "7-Mat"
                                    }],
                "Subjects": [{
                                        "Subject/NCAType":  "Mathematics"
                                    }],
                "Rooms":            [{  
                                        "Room":         "B2"
                                    }],
                "Duration":         60,
                "EventType":        "Timetable",
                "NonContactType":   ""
            }

+ Response 204


# Group Physical

Collection of all Physical Resources

## Rooms  [/rooms/{?roomId}]

+ Parameters

    + roomId (optional, number, `12345`) ... The unique identifier of a room

### Retrieve Rooms [GET]

Retrieve one to many rooms

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "RoomId":               1,
                "RoomCode":             "A1",
                "RoomName":             "A1",
                "Site":                 "Main",
                "RoomCategory":         "DTN",
                "RoomType":             "Detention",
                "Capacity":             30
                "AssociatedEquipment":  [{
                                                "EquipmentCode":  "OHP",
                                                "EquipmentName":  "Over Head Projector"
                                        }]
            },
            {
                "RoomId":               2,
                "RoomCode":             "A2",
                "RoomName":             "A2",
                "Site":                 "Main",
                "RoomCategory":         "",
                "RoomType":             "",
                "AssociatedEquipment":  [{}],
                "Capacity":             30
            }

+ Response 204 (applicatin/json)


### Create Rooms [POST]

Create one to many Rooms

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Request (application/json)

    + Body

            {
                "RoomCode":             "A3",
                "RoomName":             "A3",
                "Site":                 "Main",
                "RoomCategory":         "DTN",
                "RoomType":             "Detention"
                "associatedEquipment":  [{
                                                "EquipmentCode":  "OHP",
                                                "EquipmentName":  "Over Head Projector"
                                        }],
                "Capacity":             30
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved Successfully", 
                "RoomId":               1,
                "RoomCode":             "A3"
            }


### Update Rooms [PUT]

Update one to many Rooms

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Request (application/json)

    + Body

            {
                "RoomId":               1,
                "RoomCode":             "A3",
                "RoomName":             "A3-0",
                "Site":                 "Main",
                "RoomCategory":         "DTN",
                "RoomType":             "Detention"
                "AssociatedEquipment":  [{
                                                "EquipmentCode":  "OHP",
                                                "EquipmentName":  "Over Head Projector"
                                        }],
                "Capacity":             30                                        
            }


+ Response 200 (application/json)

    + Body
    
            [
                "Status":               true,
                "Details":              "Saved successfully", 
                "RoomId":               1
            }


## Sites  [/site/{?siteId}]

+ Parameters

    + siteId (optional, number, `12345`) ... The unique identifier of a site

### Retrieve Site [GET]

Retrieve one or more Sites

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {          
                "SiteId":       1,
                "SiteCode":     "Main site",
                "SiteName":     "The Main Site of School"
            }
            
+ Response 204 (application/json)
            

### Create Site [POST]

Create one to many Sites

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Request (application/json)

    + Body

            {
                "SiteCode":     "Main site",
                "SiteName":     "The Main Site of School"           
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "SiteId":               1
            }

            
### Update Site [PUT]

Update one to many Sites

+ Request (applcation/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            {
                "SiteId":       1,
                "SiteCode":     "Main site 1",
                "SiteName":     "The Main Site of School"           
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "SiteId":               1
            }

            
# Group **PROPOSED Methods** 

# Group Learners Collection v2

##Learners [/Learners{learnerId}{learnerCode}{status}{DateModified}]
After feedback from Partners and changes of internal requirements more fields are to be added to the existing GET Learners method.
This section is work in progress and subject to change.

+ Parameters

    + learnerId     (optional, int, `00001`) ... the unique identifier of the learner
    + learnerCode   (optional, string, `2015-00001`) ... the unique code of the learner 
    + DateModified  (optional, dateTime, `01-04-2014T18:00:00`) ... learner records modified since
    + status        (optional, string, `Active`) ... Status of the learner - Active, Left, Draft

### Retrieve a collection of Learner Details [GET]

**Proposed Changes PROAPI-25**

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
            
+ Response 200 (application/json)

    + Body
    
            {
            "LearnerId":          443756,   
            "LearnerCode":        "2010-0001",
            "Surname":            "Sterling",
            "Forename":           "Geoffrey",
            "Status":             "Active",
            "RegGroup":           "KP",
            "AcademicHouse":      "Hulland",
            "DateOfBirth":        "04-08-1998 00:00:00",
            "LegalSurname":       "Sterling",
            "LegalForename":      "Geoffrey",
            "MiddleName":         "James",
            "FormerSurname":      "Silver",
            "EmailAddress":       "a.b@c.co.uk",
            "Gender":             "M",
            "Notes":              "Lorem Ipsum",
            "HomeSalutation":     "Mrs C Sterling",
            "DateOfEntry":        "01-09-2010 00:00:00",
            "Year":               "13",
            "Course":             "KS5",
            "NCYear":             "13",
            "Boarder":            "Not a boarder"
            "AddressDetails":   [{
                                    "Country":      "GBR",
                                    "Type":         "H",
                                    "Flat":         "",
                                    "Number":       "23",
                                    "Street":       "Orchard Gardens",
                                    "Locality":     "Derby",
                                    "Town":         "",
                                    "County":       "",
                                    "PostCode":     "DE21 4FL",
                                    "AddressId":    1322228
                                }],
            "PhoneDetails":     [{
                                    "Type":         "H",
                                    "Number":       "01111567891",
                                    "SMSFlag":      false,
                                    "PhoneId":      2165078
                                }],
            "Contacts":         [{
                                    "ContactId":    0001,
                                    "Title":        "Mr",
                                    "Forename":     "Zaphod",
                                    "Surname":      "Beelebrox",
                                    "Relationship": "Father",
                                    "WrittenCommunication":     "",
                                    "Priority":                 1,
                                    "ContactPrioritySource":    "",
                                    "EmergencyContactLevel":    "Primary",
                                    "NextOfKin":                false,
                                    "AddressDisclosure":        false,
                                    "AddressTransferred":       false,
                                    "ParentalResponsibility":   true,
                                    "FeePayer":                 false,
                                    "ParentalPortal":           true,
                                    "HomeAddressLink":          true,
                                    "OtherHomeAddressLink":     false,
                                    "SendSMS":                  true
                                }],
            "Siblings":         [{
                                    "LearnerCode":  "2014-0002",
                                    "LearnerId":    0002
                                },{
                                    "LearnerCode":  "2015-0005",  
                                    "LearnerId":    0003
                                }],
            "PartTime":           "N",
            "EnrolementStatus":   "C",
            "UPN":                "H502400200007",
            "FormerUPN":          "F502400200003",
            "ULN":                "P400200003",
            "UCI":                "3452165403",
            "G&T":                "Y",
            "MedicalFlag":        "Y",
            "YSSAIndicator":      "Y",
            "Nationality":        "GBR",
            "Ethnicity":          "WBRI",
            "EthnicitySource":    "P",
            "ServiceChild":       "N",
            "ServiceChildSource": "P",
            "TopUpFunding":       "Y",
            "FundedHours":        "0.0",
            "HoursAtSetting":     "0.0",
            "UnitContactTime":    "5",
            "SchoolLunchTaken":   "Y",
            "MealType":           "Cold School Meal",
            "AsylumSeeker":       "Y",
            "Religion":           "Hindi",
            "Disabilities":     [{
                                    "Disability":  "CON"
                                },{
                                    "Disability":  "DDA"
                                }],
            "Language":         [{
                                    "TypeCode":         "F",
                                    "TypeDescription":  "First Language",
                                    "LangCode":         "ENG",
                                    "LangDescription":  "English"
                                },{
                                    "TypeCode":         "M",
                                    "TypeDescription":  "Multiple First Language",
                                    "LangCode":         "AYB",
                                    "LangDescription":  "Anyi-Baule"
                                }],
            "SENProvision":     [{
                                    "ProvisionId":          00001,
                                    "ProvisionTypeCode":    "E",
                                    "ProvisionTypeName":    "Education, Health and Care Plan",
                                    "StartDate":            "19/09/2014",
                                    "ReviewDate":           "20/09/2014",
                                    "EndDate":              "20/09/2014" 
                                }],
            "SENMajorNeeds":    [{
                                    "LeanerMajorNeedId":    00001,
                                    "MajorNeedCode":        "SLD",
                                    "MajorNeedDescription": "Severe Learning Difficulty ",
                                    "Ranking":              1
                                }]
            }

+ Response 204 (application/json)


### Create a collection of Learner Details [POST]

**Proposed Changes PROAPI-32**

Create one or more Learner detail records

Mandatory fields:

- Surname, Forename, Learner Code, Date of Birth are mandatory fields
    
- Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory
    
- Phone is not mandatory but if included: Type and Number are mandatory
    
- Contacts are not mandatory but if included: Title, Forename, Surname, Relationship and Gender are mandatory
    
- Language is not mandatory but if included: TypeCode and LangCode are mandatory
    
- SENProvision is not mandatory but if included: ProvisionTypeCode and StartDate are mandatory
    
- SENMajorNeeds is not mandatory but if included: MajorNeedCode and Ranking are mandatory


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
            "SourceId":           "Abc123",  
            "LearnerCode":        "2010-0001",
            "Surname":            "Sterling",
            "Forename":           "Geoffrey",
            "Status":             "Active",
            "RegGroup":           "KP",
            "AcademicHouse":      "Hulland",
            "DateOfBirth":        "04-08-1998 00:00:00",
            "LegalSurname":       "Sterling",
            "LegalForename":      "Geoffrey",
            "MiddleName":         "James",
            "FormerSurname":      "Silver",
            "EmailAddress":       "a.b@c.co.uk",
            "Gender":             "M",
            "Notes":              "Lorem Ipsum",
            "HomeSalutation":     "Mrs C Sterling",
            "DateOfEntry":        "01-09-2010 00:00:00",
            "Year":               "13",
            "Course":             "KS5",
            "NCYear":             "13",
            "Boarder":            "Not a boarder"
            "AddressDetails":   [{
                                    "Country":      "GBR",
                                    "Type":         "H",
                                    "Flat":         "",
                                    "Number":       "23",
                                    "Street":       "Orchard Gardens",
                                    "Locality":     "Derby",
                                    "Town":         "",
                                    "County":       "",
                                    "PostCode":     "DE21 4FL"
                                }],
            "PhoneDetails":     [{
                                    "Type":         "H",
                                    "Number":       "01111567891",
                                    "SMSFlag":      false
                                }],
            "Contacts":         [{
                                    "Title":        "Mrs",
                                    "Forename":     "Trillian",
                                    "Surname":      "Beelebrox",
                                    "Relationship": "Mother",
                                    "Gender":       "F",
                                    "WrittenCommunication":     "",
                                    "Priority":                 1,
                                    "ContactPrioritySource":    "",
                                    "EmergencyContactLevel":    "Primary",
                                    "NextOfKin":                false,
                                    "AddressDisclosure":        false,
                                    "AddressTransferred":       false,
                                    "ParentalResponsibility":   true,
                                    "FeePayer":                 false,
                                    "ParentalPortal":           true,
                                    "HomeAddressLink":          true,
                                    "OtherHomeAddressLink":     false,
                                    "SendSMS":                  true
                                }],
            "Siblings":         [{
                                    "LearnerCode":  "2014-0002"
                                }],
            "PartTime":           "N",
            "EnrolementStatus":   "C",
            "UPN":                "H502400200007",
            "FormerUPN":          "F502400200003",
            "ULN":                "P400200003",
            "UCI":                "3452165403",
            "G&T":                "Y",
            "MedicalFlag":        "Y",
            "YSSAIndicator":      "Y",
            "Nationality":        "GBR",
            "Ethnicity":          "WBRI",
            "EthnicitySource":    "P",
            "ServiceChild":       "N",
            "ServiceChildSource": "P",
            "TopUpFunding":       "Y",
            "FundedHours":        "",
            "HoursAtSetting":     "",
            "UnitContactTime":    "",
            "SchoolLunchTaken":   "Y",
            "MealType":           "Cold School Meal",
            "AsylumSeeker":       "",
            "Religion":           "Hindi"
            "Disabilities":     [{
                                    "Disability":  "CON"
                                }],
            "Language":         [{
                                    "TypeCode":             "F",
                                    "LangCode":             "ENG",
                                }],
            "SENProvision":     [{
                                    "ProvisionTypeCode":    "E",
                                    "StartDate":            "19/09/2014"
                                }],
            "SENMajorNeeds":    [{
                                    "MajorNeedCode":        "SLD",
                                    "Ranking":              1
                                }]
            }
            
            
+ Response 200 (application/json)
           
    + Body
    
            {
            "SourceId":           "Abc123",
            "LearnerId":          02134,
            "LearnerCode":        "2010-0001"
            "AddressDetails":   [{
                                    "AddressId":    0001,
                                    "Status":       true,
                                    "Details":      "Saved successfully"
                                }],
            "PhoneDetails":     [{
                                    "PhoneId":      0001,
                                    "Status":       true,
                                    "Details":      "Saved successfully"
                                }],
            "Contacts":         [{
                                    "ContactId":    0001,
                                    "Status":       true,
                                    "Details":      "Saved successfully" 
                                }],
            "Siblings":         [{
                                    "LearnerId2":   0002,
                                    "Status":       true,
                                    "Details":      "Saved successfully" 
                                }],
            "Disabilities":     [{
                                    "DisabilityTypeId": 0001,
                                    "Status":           true,
                                    "Details":          "Saved successfully" 
                                }],
            "Language":         [{
                                    "LanguageId":   0002,
                                    "Status":       true,
                                    "Details":      "Saved successfully"
                                }],
            "SENProvision":     [{
                                    "ProvisionId":  0003,
                                    "Status":       true,
                                    "Details":      "Saved successfully"
                                }],
            "SENMajorNeeds":    [{
                                    "MajorNeedId":  0001,
                                    "Status":       true,
                                    "Details":      "Saved successfully"
                                }]
            } 
            

##LearnerOtherDetails [/LearnerOtherDetails{learnerId}{learnerCode}{status}{DateModified}]

+ Parameters

    + learnerId     (optional, int, `00001`) ... the unique identifier of the learner
    + learnerCode   (optional, string, `2015-00001`) ... the unique code of the learner 
    + DateModified  (optional, dateTime, `01-04-2014T18:00:00`) ... learner records modified since
    + status        (optional, string, `Active`) ... Status of the learner - Active, Lft, Draft
    
           

### Retrieve a collection of Learner Other Details [GET]

**Proposed Changes PROAPI-26**

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
            
+ Response 200 (application/json)

            {
            "LearnerId":          443756,   
            "LearnerCode":        "2010-0001",
            "Surname":            "Sterling",
            "Forename":           "Geoffrey",
            "Status":             "Active",
            "Exclusions":   [{
                                "ExclusionId":      0001,
                                "Category":         "FIXD",
                                "Reason":           "PP",
                                "StartDate":        "2014-07-02",
                                "EndDate":          "2014-07-02",
                                "StartSession":     "AM",
                                "EndSession":       "PM",
                                "Notes":            "Act of agression towards another pupil",
                                "TotalDays":        1,
                                "TotalSessions":    2,
                                "LAC":              false,
                                "HeadNotified":     null,
                                "GovMeeting":       null,
                                "ProvisionStartDate":   null,
                                "ProvisionDetails":     null,
                                "Appeal":           false,
                                "AppealDate":       null,
                                "AppealCutOff":     null,
                                "ExclusionHearing": null,
                                "Outcome":          "E",
                                "ReintregationMeetingDate": null,
                                "ReintregationNotes":       null,
                                "ReinstatementDate":        null,
                                "ReinstatementNotes":       ""
                            }],
            "FSM":          [{
                                "FSMId":        0001,
                                "StartDate":    "2014-02-12",
                                "ReviewDate":   "",
                                "EndDate":      "2015-02-12",
                                "CoutnryOfUk":  "ENG"
                            },
                            {
                                "FSMId":        0002,
                                "StartDate":    "2015-02-12",
                                "ReviewDate":   "2015-12-08",
                                "EndDate":      "2016-02-12",
                                "CoutnryOfUk":  "ENG"
                            }],
            "PPI1314":      [{
                                "PPIId":        0001,
                                "PPIndicator":  "DPP",
                                "FTE":          "1.00",
                                "FYStartDate":  "2013-12-20",
                                "FYEndDate":    "2014-12-14"
                            }],
            "PupilPremiums":{
                                "CurrentDeprivationEver6":  true,
                                "CurrentServiceChild":      false,
                                "CurrentAdoptedfromCare":   false,
                                "CurrentLookedAfter":       false,
                                "CurrentPupilPremium":      true
                            [{
                                "Deprivation":      true,
                                "AdoptedFromCare":  false,
                                "ServiceChild":     false,
                                "LookedAfter":      false,
                                "CashAmount":       "935.00",
                                "FTE":              "1.0",
                                "FYStartDate":      "2014-04-01",
                                "FYEndDate":        "2015-03-31",
                                "Notes":            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                            }]
                            },
            "G&T":          [{
                                "G&TStatus":    "G",
                                "StartDate":    "2015-02-23",
                                "EndDate":      null,
                                "Subject":      "EN",
                                "Notes":        ""
                            }],
            "Confidential": [{
                                "LAC":          true,
                                "LACCurSch":    true,
                                "LACLA":        "370",
                                "HomeLA":       "871",
                                "CPR":          false,
                                "CPRLA":        null,
                                "PEP":          false,
                                "PPI":          false,
                                "AdoptedFromCare":      "N",
                                "Notes":                "Lorem ipsum",
                                "SchoolAwarenessList":  true   
                            }],
            "SchoolHistory":[{
                                "ClusterName":  "Advanced MAT",
                                "EstabNumber":  "6213",
                                "SchoolName":   "Advanced Learninig Academy",                                
                                "EntryDate":    "2009-09-04",
                                "LeavingDate":  "2010-01-08",
                                "LeavingReason":"PM"
                            },{
                                "ClusterName":  "Advanced MAT",
                                "EstabNumber":  "61234",
                                "SchoolName":   "Queens College Academy",                                
                                "EntryDate":    "2010-09-01",
                                "LeavingDate":  "2016-02-05",
                                "LeavingReason":"OT"
                            }]
            }
            
+ Response 204 (application/json)


# Group Behaviour
The whole **Behaviour** section is under development and unavailable at present. 
This documentation is subject to change and fields included are not final.

## Behaviour Collection [/behaviour]

This will data for Bahviour Events

## Behaviour Structure Collection [/bmstructure/]

### Get behaviour structure [GET]
**PROPOSED GET METHOD - PROAPI-24**

Retrieves the current behaviour structure. 

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
            "Categories":   [{
                                "CategoryId":     00001,
                                "Code":           "CAT1",
                                "Description":    "Category 1"
                            },{
                                "CategoryId":     00002,
                                "Code":           "CAT2",
                                "Description":    "Category 2"
                            },{
                                "CategoryId":     00003,
                                "Code":           "CAT3",
                                "Description":    "Category 3"
                            },{
                                "CategoryId":     00004,
                                "Code":           "CAT4",
                                "Description":    "Category 4"
                            }],
            "Types":        [{
                                "TypeId":          0001,
                                "Code":            "01Conf",
                                "Description":     "Confrontational",
                                "Points":          "2",
                                "Behaviour":       "Negative",
                                "Category":        "CAT1",
                                "Severity":        "High"
                            },{
                                "TypeId":          0002,
                                "Code":            "02CLWK",
                                "Description":     "Classwork",
                                "Points":          "3",
                                "Behaviour":       "Positive",
                                "Category":        "CAT1",
                                "Severity":        "Low"
                            }],
            "Severities":   [{
                                "SeverityId":       0001
                                "Code":             "S1",
                                "Description":      "Low"
                            },{
                                "SeverityId":       0002,
                                "Code":             "S2",
                                "Description":      "Medium"
                            },{
                                "SeverityId":       0003,
                                "Code":             "S3",
                                "Description":      "High"        
                            }]
            "Actions":      [{
                                "ActionId":         0001,
                                "Code":             "01DET",
                                "Description":      "Think Tank",
                                "Behaviour":        "Negative",
                                "BehaviourType":     "Confrontational"
                            },{
                                "ActionId":         0002,
                                "Code":             "02REW",
                                "Description":      "Reward Point",
                                "Behaviour":        "Positive",
                                "BehaviourType":     "Classwork"
                            }]
            "Rules":        [{
                                "RuleId":           0001,
                                "RuleName":         "Reward",
                                "Status":           "Active",
                                "RuleCriteria":     "Behaviour",
                                "Behaviour":        "Positive",
                                "BehaviourType":    "Classwork",
                                "BehaviourCategory":"",
                                "BehaviourSeverity":"",
                                "Occurred":         "2",
                                "TimePeriod":       "Week",
                                "IsRecursive":      "",
                                "Consequences":     "Reward Point",
                                "Points":           "2",
                                "AddLearnerChar":   "Y"
                            [{
                                "CharacteristicId": 0001,
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 3",
                                "AndOr":            "Or"
                            },{
                                "CharacteristicId": 0002,
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 4",
                                "AndOr":            ""
                            }]
                            }],
            "DetentionType":[{
                                "DetentionTypeId":  0001,
                                "Code":             "TT",
                                "Description":      "Think Tank"
                            },{
                                "DetentionTypeId":  0002,
                                "Code":             "OOD",
                                "Description":      "One off Detention"
                            }],
            "Location":     [{
                                "LocationId":       0001,
                                "Code":             "CLS",
                                "Description":      "Classroom"
                            },{
                                "LocationId":       0002,
                                "Code":             "SBS",
                                "Description":      "School Bus"      
                            }]
            }


+ Response 204 (application/json)

### Create Behaviour Structure [POST]
**PROPOSED POST METHOD - PROAPI-15**

Creates a new Behaviour Management Structure

Mandatory Parameters:
        
- Types:

    - Code  (required, string, 'ABLAN') ... Unique code for the type of behaviour
    
    - Description (required, string, 'Abusive/Threating Language') ... Description of the type of behaviour
    
    - Points (required, int, '1') ... Number of points, defaults to zero

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
            "Categories":   [{
                                "Code":           "CAT1",
                                "Description":    "Category 1"
                            },{
                                "Code":           "CAT2",
                                "Description":    "Category 2"
                            },{
                                "Code":           "CAT3",
                                "Description":    "Category 3"
                            },{
                                "Code":           "CAT4",
                                "Description":    "Category 4"
                            }],
            "Types":        [{
                                "Code":            "01Conf,
                                "Description":     "Confrontational",
                                "Points":          "2",
                                "Behaviour":       "Negative",
                                "Category":        "CAT1",
                                "Severity":        "High"
                            },{
                                "Code":            "02CLWK,
                                "Description":     "Classwork",
                                "Points":          "3",
                                "Behaviour":       "Positive",
                                "Category":        "CAT1",
                                "Severity":        "Low"
                            }]
            "Severities":   [{
                                "Code":             "S1",
                                "Description":      "Low"
                            },{
                                "Code":             "S2",
                                "Description":      "Medium"
                            },{ 
                                "Code":             "S3",
                                "Description":      "High"        
                            }]
            "Actions":      [{
                                "Code":             "01DET",
                                "Description":      "Think Tank",
                                "Behaviour":        "Negative",
                                "BehaviourType":     "Confrontational"
                            },{
                                "Code":             "02REW",
                                "Description":      "Reward Point",
                                "Behaviour":        "Positive",
                                "BehaviourType":    "Classwork"
                            }]
            "Rules":        [{
                                "RuleName":         "Reward",
                                "Status":           "Active",
                                "RuleCriteria":     "Behaviour",
                                "Behaviour":        "Positive",
                                "BehaviourType":    "Classwork",
                                "BehaviourCategory":"",
                                "BehaviourSeverity":"",
                                "Occurred":         "2",
                                "TimePeriod":       "Week",
                                "IsRecursive":      "",
                                "Consequences":     "Reward Point",
                                "Points":           "2",
                                "AddLearnerChar":   "Y"
                            [{
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 3",
                                "AndOr":            "Or"
                            },{
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 4",
                                "AndOr":            ""
                            }]
                        }]
            "DetentionType":[{
                                "Code":             "TT",
                                "Description":      "Think Tank"
                            },{
                                "Code":             "OOD",
                                "Description":      "One off Detention"
                        }]
            "Location":     [{
                                "Code":             "CLS",
                                "Description":      "Classroom"
                            },{
                                "Code":             "SBS",
                                "Description":      "School Bus"      
                        }]
            }
      
+ Response 200 (application/json)

    + Body
    
            {
            "Categories":   [{
                            "CategoryId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "CategoryId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "CategoryId":     0003,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "CategoryId":     0004,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }],
            "Types":        [{
                            "TypeId":         0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "TypeId":         0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }]
            "Severities":   [{
                            "SeverityId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0003,
                            "Status":         true,
                            "Details":        "Saved Successfully"    
                        }]
            "Actions":      [{
                            "ActionId":       0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "ActionId":       0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }]
            "Rules":        [{
                            "RuleId":         0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                            [{
                                "CharacteristicId":         0001,
                                "Status":                   true,
                                "Details":                  "Saved Successfully"
                            },{
                                "CharacteristicId":         0002,
                                "Status":                   true,
                                "Details":                  "Saved Successfully"
                            }]
                        }]
            "DetentionType":[{
                                "DetentionTypeId":          0001,
                                "Status":                   true,
                                "Details":                  "Saved Successfully"
                            },{
                                "DetentionTypeId":          0002,
                                "Status":                   true,
                                "Details":                  "Saved Successfully"
                         }]
            "Location":     [{
                                "LocationId":               0001,
                                "Status":                   true,
                                "Details":                  "Saved Successfully"
                            },{
                                "LocationId":               0001,
                                "Status":                   true,
                                "Details":                  "Saved Successfully"   
                        }]
            }
            

### Update Behaviour Structure [PUT]
**PROPOSED POST METHOD - PROAPI-29**

Updates an Behaviour Management Structure

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
            "Categories":   [{
                            "CategoryId":       0001,
                            "Code":             "ABL",
                            "Description":      "Abusive Language"
                        },{
                            "CategoryId":       0002,
                            "Code":             "BUL",
                            "Description":      "Bullying"
                        }],
            "Types":        [{
                            "TypeId":           0001,  
                            "Code":             "Conf",
                            "Description":      "Confrontational",
                            "Points":           "2",
                            "Behaviour":        "Negative",
                            "Category":         "BUL",
                            "Severity":         "High"
                        }],
            "Severities":   [{
                            "SeverityId":       0001,
                            "Code":             "S1",
                            "Description":      "1"
                        },{
                            "SeverityId":       0002,
                            "Code":             "S2",
                            "Description":      "2"
                        },{
                            "SeverityId":       0003,
                            "Code":             "S3",
                            "Description":      "3"        
                        }],
            "Actions":      [{}],
            "Rules":        [{}],
            "DetentionType":[{}],
            "Location":     [{}]
            }

+ Response 200

    + Body
    
            {
            "Categories":   [{
                            "CategoryId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "CategoryId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }],
            "Types":        [{
                            "TypeId":         0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }]
            "Severities":   [{
                            "SeverityId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0003,
                            "Status":         true,
                            "Details":        "Saved Successfully"    
                        }],
            "Actions":      [{}],
            "Rules":        [{}],
            "DetentionType":[{}],
            "Location":     [{}]
            }