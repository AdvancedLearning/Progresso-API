FORMAT: 1A
HOST: http://muffin-api.progresso.net/v2

# Progresso API
Provides the ability to manage school information.

# Authorization
Methods for security and access

## Access Tokens [/Token]

### Request token [POST]

+ Request

    + Headers
    
            Content-Type: "application/x-www-form-urlencoded"
            
    + Body
    
            grant_type=password&username=[USERNAME]&password=[URI_ENCODED_PASSWORD]

+ Response 200 (application/json)

    + Body
    
            {
                "access_token":     "access_token_for_api_calls",
                "schoolId":         "schooId_token_valid_for",
                "companyId":        "current_company_id",
                "userId":           "progresso_user_id_for_token"
            }



# Group Employees
Group of all employee-related resources

## Employee Record [/employees/{id}]
+ Parameters
    + id (required, number, `12345`) ... The unique identifier of the employee

### Retrieve employee [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        
    

+ Response 200 (application/json)

    + Body
    
            {
                "staffCode":             "sc123",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "M",
                "startDate":            "28-02-2014",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "phoneId":  00001
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "smsFlag":  false
                                        },{
                                            "phoneId":  00002
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }],
                "status":               "active",
                "niNumber":             "NI1234HJGJ34",
                "qtStatus":               "",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "",
                "dateOfHTLAStatus":       "",
                "languageDetails":        [{
                                            "type":     "Home",
                                            "code":     "Swedish",
                                            "level":    "Advanced"
                                        }],
                "qualificationDetails":   [{
                                            "qualificationCode":  "",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "",
                                            "verified":           ""
                                        }],
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             ""
            }


## Employees Collection [/employees{?status}{?since}]
Collection of all employees for a school

### Retrieve collection of employees [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Parameters
    + status (optional, string, `active`) ... Optional filter by status, valid values [ active | left ].
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to retrieve all changes since the date time specified. Only employee records that have changed will be returned.

+ Response 200 (application/json)

    + Body
    
            [{
                "employeeId":           12345,
                "staffCode":             "JBl",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "M",
                "startDate":            "28-02-2014",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }],
                "status":               "active",
                "niNumber":             "NI1234HJGJ34",
                "qtStatus":               "",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "",
                "DateOfHTLAStatus":       "",
                "LanguageDetails":        [{}],
                "QualificationDetails":   [{
                                            "qualificationCode":  "",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "",
                                            "verified":           ""
                                        }],
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             ""
            },
            {
                "employeeId":           54321,
                "staffCode":             "JDo",
                "title":                "Mrs",
                "surname":              "Doe",
                "forname":              "Jane",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Doe",
                "legalForename":        "Jane",
                "formerSurname":        "Smith",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "F",
                "startDate":            "28-02-2014",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015556655",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075556655",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }],
                "status":               "active",
                "niNumber":             "NI123JHJGJ34",
                "qtStatus":               "",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "",
                "DateOfHTLAStatus":       "",
                "LanguageDetails":        [{}],
                "QualificationDetails":   [{
                                            "qualificationCode":  "",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "",
                                            "verified":           ""
                                        }],
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             ""
            }]

## Create/Update Employee Records [/employees]
### Create Employee [POST]
Create one to many employee records

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body

            [{
                "staffCode":             "sc123",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "M",
                "startDate":            "28-02-2014",
                "leftDate":              "21-06-2014",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }],
                "status":               "active",
                "NINumber":             "NI1234HJGJ34",
                "qtStatus":               "",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "",
                "dateOfHTLAStatus":       "",
                "languageDetails":        [{}],
                "qualificationDetails":   [{
                                            "qualificationCode":  "",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "",
                                            "verified":           ""
                                        }],
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             ""
            }]

+ Response 200
    + Body
    
            [{
                "staffCode":             "sc123",
                "EmployeeId":           "000001",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00001"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00002"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00001"
                                        }]
            }]

### Update Employee Records [PUT]
Update one to many employee records

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body

            [{
                "employeeId":           000001,
                "staffCode":             "sc123",
                "title":                "Mr",
                "surname":              "Bloggs",
                "forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "legalSurname":         "Bloggs",
                "legalForename":        "Joseph",
                "formerSurname":        "",
                "middleName":           "Bob",
                "dateOfBirth":          "31-12-1968",
                "Gender":               "M",
                "startDate":            "28-02-2014",
                "leftDate":              "21-06-2014",
                "teacherNumber":        "12456",
                "email":                "joe.bloggs@theschool.edu",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }],
                "status":               "active",
                "NINumber":             "NI1234HJGJ34",
                "qtStatus":               "",
                "qtsRoute":               "",
                "dateOfQTS":              "",
                "HTLA":                   "",
                "dateOfHTLAStatus":       "",
                "languageDetails":        [{}],
                "qualificationDetails":   [{
                                            "qualificationCode":  "",
                                            "subject1":           "",
                                            "subject2":           "",
                                            "classOfDegree":      "",
                                            "verified":           ""
                                        }],
                "nationality":            "",
                "ethnicity":              "",
                "religion":               "",
                "laStartDate":            "",
                "disability":             ""
            }]

+ Response 200
    + Body
    
            [{
                "EmployeeId":           "000001",
                "staffCode":             "sc123",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00001"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00002"
                                        }],
                "UKaddressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00001"
                                        }]
            }]


## Employees Contacts [/employeeContacts{?status}]
Collection of all employees contacts for a school

### Retrieve collection of employees contacts [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Parameters
    + status (optional, string, `active`) ... Optional filter by status, valid values [ active | left ].


+ Response 200
    + Body
    
            [{
                "EmployeeId":           "000001",
                "staffCode":             "sc123",
                "contacts": 
                            [{
                                        "contactId":    00001,
                                        "forename":     "",
                                        "surname":      "",
                                        "relationship": "Partner",
                                        "priority":     1,
                                        "emergency":    "primary"
                                    `   "nextOfKin":    true
                            },
                            {  
                                        "contactId":    00002,
                                        "forename":     "",
                                        "surname":      "",
                                        "relationship": "Other",
                                        "priority":     2,
                                        "emergency":    ""
                                    `   "nextOfKin":    false
                            }]
            }]
    

## Create/Update Employee Contact Association [/employeeContacts]
### Create Employee Contact Association [POST]
Associate Employee to one to multiple contacts

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                "EmployeeId":           "000001",
                "contacts": 
                            [{
                                        "contactId":    00001,
                                        "relationship": "Partner",
                                        "priority":     1,
                                        "emergency":    "primary"
                                    `   "nextOfKin":    true
                            },
                            {  
                                        "contactId":    00002,
                                        "relationship": "Other",
                                        "priority":     2,
                                        "emergency":    ""
                                    `   "nextOfKin":    false
                            }]
            }]

+ Response 200
    + Body
    
            [{
                "EmployeeId":           "000001",
                "status":              true
                 "details":              "Update Successful"
                "contacts": 
                            [{
                              
                                "contactId":            00001,
                                "status":              true
                                "details":              "Update Successful"
                            },
                            {  
                                
                                "contactId":            00001,
                                 "status":              true
                                "details":              "Update Successful"
                            }]
            }]
                            



## Employees Checks [/employeeChecks{?verficationStartDate}{?verficationEndDate}{?employee}]
Collection of all employee checks for employees within a school

### Retrieve collection of employee checks [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Parameters
    + verficationStartDate (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to Checks with a verification date after a date
    + verficationEndDate (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to Checks with a verification date before a date
    + employee (optional, int, `0001``) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            [{
                "employeeId":       0001,
                "staffCode":             "sc123",     

                                        "ADD":  [{
                                                    "checkId":              1,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                }],
                                        "AGN":  [{ 
                                                    "checkId":              2,
                                                    "agencyName":           "",
                                                    "paperworkDate":       "12-09-2013"
                                                }],
                                        "DBS":  [{
                                                    "checkId":              3,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    "clearenceLevel":       "Enhanced check",
                                                    "result":               "Pass",
                                                    "requestDate":          "12-09-2013",
                                                    "reviewDate":           "12-09-2013",
                                                    "disclousureReference": "T000135"
                                                
                                                
                                                }],
                                        "GTC":  [{ 
                                                    "checkId":              4,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                
                                                }],
                                        "ID":  [{ 
                                                    "checkId":              5,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                
                                                }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              6,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{ 
                                                    "checkId":              7,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                
                                                }],
                                        "Qual":  [{
                                                    "checkId":              8,
                                                     "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                        
                                                }],
                                        "RED":  [{ 
                                                    "checkId":              9,
                                                     "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                }],
                                        "RTW":  [{ 
                                                    "checkId":              10,
                                                     "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                
                                                }]

            
            
            
            }]


## Create/Update Employee Checks [/employeeChecks]
### Create Employee Checks [POST]
Create Employee checks for one to multiple contacts


+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                
                "employeeId":       0001,
  
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              0,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                  
                                
            }]

+ Response 200 (application/json)

    + Body
    
            [{
            
                "status":       true,
                "details":      "Create Succesful",
                "employeeId":       0001,
          
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              00001,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                    

            }]

### Update Employee Checks [PUT]
Update Employee checks for one to multiple contacts


+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                "employeeId":       0001,
               
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              00001,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                               
            }]

+ Response 200 (application/json)

    + Body
    
            [{
            
                "status":       true,
                "details":      "Create Succesful",
                "employeeId":       0001,
                "checks":       [{
                                        "ADD":  [{ }],
                                        "AGN":  [{ }],
                                        "DBS":  [{ }],
                                        "GTC":  [{ }],
                                        "ID":   [{ }],
                                        "List99":  [{ 
                                                    
                                                    "checkId":              00001,
                                                    "verificationDate":     "12-09-2013",
                                                    "expiryDate":           "12-09-2014",
                                                    "list99Clearence":      "Pass",
                                                    "checkedByCode":            "JD",
                                                    "checkedByName":            "John Doe",
                                                    "position":             "Headteacher",
                                                    "evidence":             "Certificate Provided"
                                                    
                                                    }],
                                        "MED":  [{  }],
                                        "Qual": [{ }],
                                        "RED":  [{ }],
                                        "RTW":  [{ }]
                                }]

            }]



## Employees Contracts [/employeeContracts{?employee}]
Collection of all employee checks for employees within a school

### Retrieve collection of employee contracts [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Parameters

    + employee (optional, int, `0001``) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            [{
                "employeeId":       00001,
                "staffCode":        "sc123",
                "contracts":        [{
                                        contractId":       0001    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "AHT",
                                        "postName":     "Assistant Head",
                                        "dailyRate":    true
                                         "origin":       "Other",
                                        "destination":  ""                           
                                        "roles":    [{
                                                        "roleId":           0001,
                                                        role":             "Teaching Assistant",
                                                        "hoursPerWeek":     32.50,
                                                        "FTEHours":         32.50,
                                                        "weeksPerYear":     52.14,
                                                        "payrollNumber":    123456,
                                                        "NIRate":           "Contracted In",
                                                        "superannuation":   "Teachers Superannuation",
                                                        "costCentre":       "TEACH (Teaching Staff)",
                                                        "ledgerCode":       "A040 (Teachers Salaries"
                                                        "salaries":         [{
                                                                                "salaryId":             00001,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                "effectiveTo":          "31-08-2015",         "",
                                                                                "payScale":             "",
                                                                                "regionalSpine":        "",
                                                                                "point":                "",
                                                                                "safeguardedSalary":    true,
                                                                                "includeInPensionCalc": false,
                                                                                "includeInNICalc":      true,
                                                                                "basePay":              ""
                                                                            }]
                                                        "allowance":        [{
                                                                                "allowanceId":          1,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                "effectiveTo":          "31-08-2015",
                                                                                "category":             "",
                                                                                "amount":               ""
                                                                            }]
                                                        
                                                    }]
                                    }]
            },
            {
                "employeeId":       00002,
                "staffCode":        "ad456",
                "contracts":        [{
                                        contractId":    0002    
                                        "type":         "FXT",
                                        "name":         "Sum Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2014",
                                        "postCode":     "SUP",
                                        "postName":     "Support Staff",
                                        "dailyRate":    true,
                                        "origin":       "Other",
                                        "destination":  "",
                                        "roles":    [{
                                                        "roleId":           0002,
                                                        "role":             "Teaching Assistant",
                                                        "hoursPerWeek":     32.50,
                                                        "FTEHours":         32.50,
                                                        "weeksPerYear":     52.14,
                                                        "payrollNumber":    123456,
                                                        "NIRate":           "Contracted In",
                                                        "superannuation":   "Teachers Superannuation",
                                                        "costCentre":       "TEACH (Teaching Staff)",
                                                        "ledgerCode":       "A040 (Teachers Salaries"
                                                        "salaries":         [{
                                                                                "salaryId":             00002,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                "effectiveTo":          "31-08-2015",
                                                                                "payScale":             "",
                                                                                "regionalSpine":        "",
                                                                                "point":                "",
                                                                                "safeguardedSalary":    true,
                                                                                "includeInPensionCalc": false,
                                                                                "includeInNICalc":      true,
                                                                                "basePay":              ""
                                                                            }]
                                                    }]
                                    },
                                    {
                                        "contractId":    0003    
                                        "type":         "FXT",
                                        "name":         "Sum Contract",
                                        "startDate":    "01-09-2014",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "SUP",
                                        "postName":     "Support Staff",
                                        "dailyRate":    true,
                                        "origin":       "Other",
                                        "destination":  ""
                                        "roles":    [{
                                                        "roleId":           0003,
                                                        role":             "Teaching Assistant",
                                                        "hoursPerWeek":     32.50,
                                                        "FTEHours":         32.50,
                                                        "weeksPerYear":     52.14,
                                                        "payrollNumber":    123456,
                                                        "NIRate":           "Contracted In",
                                                        "superannuation":   "Teachers Superannuation",
                                                        "costCentre":       "TEACH (Teaching Staff)",
                                                        "ledgerCode":       "A040 (Teachers Salaries)"
                                                        "salaries":         [{
                                                                                "salaryId":             00003,
                                                                                "effectiveFrom":        "01-09-2014",
                                                                                 "effectiveTo":          "31-08-2015",
                                                                                "payScale":             "",
                                                                                "regionalSpine":        "",
                                                                                "point":                "",
                                                                                "safeguardedSalary":    true,
                                                                                "includeInPensionCalc": false,
                                                                                "includeInNICalc":      true,
                                                                                "basePay":              ""
                                                                            }]
                                                    }]                                        
                                    
                                    }]
             }]  

## Create/Update Employee Contracts [/employeeContracts]
### Create Contract [POST]
Create one to many contract records  


+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                "employeeId":       00001,
                "contracts":        [{
                                        contractId":       0,    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "AHT",
                                        "dailyRate":    true
                                         "origin":       "Other",
                                        "destination":  ""                           
                                    }]
            }]

+ Response 200 (application/json)

    + Body
    
            [{
                "status":           true,
                "details":          "saved successfully",
                "employeeId":       00001,
                "contracts":        [{
                                        "status":           true,
                                        "details":          "",
                                        contractId":     1    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                       
                                    }]
            }]
            
            
### Update Contract [PUT]
Update one to many contract records  


+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                "employeeId":       00001,
                "contracts":        [{
                                        contractId":       1,    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                                        "postCode":     "AHT",
                                        "dailyRate":    true
                                        "Base Pay":     36588.00
                                         "origin":       "Other",
                                        "destination":  ""                           
                                    }]
            }]

+ Response 200 (application/json)

    + Body
    
            [{
                "status":           true,
                "details":          "saved successfully"
                "employeeId":       00001,
                "contracts":        [{
                                        contractId":     1    
                                        "type":         "PRM",
                                        "name":         "Main Contract",
                                        "startDate":    "01-09-2013",
                                        "endDate":      "31-08-2015",
                        
                                    }]
            }]

## Create/Update Employees Contract Roles [/employeeContractRoles]
Collection of all employee roles for employee contracts within a school

### Create Roles for employee contracts [POST]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body
    
            [{
                "employeeId":       00001,
                "contractId":       00001,
                "roles":    [{
                                "roleId":           0
                                role":             "Teaching Assistant",
                                "hoursPerWeek":     32.50,
                                "FTEHours":         32.50,
                                "weeksPerYear":     52.14,
                                "payrollNumber":    123456,
                                "NIRate":           "Contracted In",
                                "superannuation":   "Teachers Superannuation",
                                "costCentre":       "TEACH",
                                "ledgerCode":       "A040"
                            }]
            },
            {
                "employeeId":       00002,
                "contractId":       00002,
                "roles":    [{
                                "roleId":           0,
                                "role":             "Teaching Assistant",
                                "hoursPerWeek":     32.50,
                                "FTEHours":         32.50,
                                "weeksPerYear":     52.14,
                                "payrollNumber":    123456,
                                "NIRate":           "Contracted In",
                                "superannuation":   "Teachers Superannuation",
                                "costCentre":       "TEACH",
                                "ledgerCode":       "A040"
                            }]
            
            }]

+ Response 200 (application/json)

    + Body
    
            [{
                "employeeId":       00001,
                "contractId":       00001,
                "roles":    [{
                                "status":           true,
                                "details":          "Saved Succesfully",
                                "roleId":           0001,
                                "role":             "Teaching Assistant",
                                "contractRoleId":   0001
                            }]
            },
            {
                "employeeId":       00002,
                "contractId":       00002,
                "roles":    [{
                                "status":           true,
                                "details":          "Saved Succesfully",
                                "roleId":           0002,
                                "role":             "Teaching Assistant",
                                "contractRoleId":   0002
                            }]
            }]


## Create/Update Employees Contract Roles [/employeeRoleSalary]
Collection of all employee roles for employee contracts within a school

### Create Roles for employee contracts [POST]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body
    
            [{
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "salaryId":      0
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScale":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "salaryId":      0
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScale":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                                    }]
            
            }]
            
            
+ response 200 (application/json)

    + Body
    
            [{
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Saved Succesfully",
                                        "salaryId":         0001,
                                        "roleSalaryId":     0001
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Saved Succesfully",
                                        "salaryId":         0002,
                                        "roleSalaryId":     0002
                                    }]
            
            }]
            
            
## Employees Qualifications [/employeeQualifications{?employeeId}]
### Retrive a list of employee qualifications [GET]

+ Parameters
    + employeeId (optional, int, `1`) ... Contacts with the id

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Response 200 (application/json)

    + Body
           
              [{
                    "employeeId":       00001,
                    "staffCode":        "sc123",
                    "qualifications":   [{
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        },
                                        {
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "DMU: Doctor of Music",
                                            "subject1":             "P300: Media studies",
                                            "subject2":             "W300: Music",
                                            "classOfDegree":        "1: First Class honours",
                                            "verified":             true                                        
                                        }]
            
              },
             {
                    "employeeId":       00002,
                    "staffCode":        "ad456",
                    "qualifications":   [{
                                            "qualificationId":      3,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }                
             
             
             
             }]



## Employees Qualifications [/employeeQualifications]
### Create employee qualifications [POST]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body
           
              [{
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "qualificationId":      0,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "qualificationId":      0,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }            
            }]

+ Response 200 (application/json)

    + Body
    
            [{
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",

                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",

                                        }]            
            }]
            

### Create employee qualifications [PUT]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body
           
              [{
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }            
            }]

+ Response 200 (application/json)

    + Body
    
            [{
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",

                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",

                                        }]            
            }]

    
# Group Contacts
Group of all contact-related resources

## Contacts Collection [/contacts/{id}]
+ Parameters
    + id (optional, int, `1`) ... Contacts with the id

    
### Retrieve a collection of contacts [GET]

+ Request

    + Headers
        
            Authorisation: "Bearer [CURRENT_TOKEN]"

+ Response 200 (application/json)

    + Body
    
            [{
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            },
            {
                "title":                "Mr",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "fire.princess@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            }]
            
            
## Create/Update Contact Records [/contacts]
### Create Contact [POST]
Create one to many contact records            
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                "contactCode":          "3447", ...this is user field to match what is returned
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            },
            {
                "contactCode":          "3448",
                "title":                "Mr",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "fire.princess@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            }]
    


+ Response 200
    + Body
    
            [{
                "contactCode":          "3447",
                "contactId":            000001,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "phoneId":  00004
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "phoneId":  00005
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00003
                                        }]
            },
            {
                "contactCode":          "3448",
                "contactId":            000002,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "phoneId":  00006
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "phoneId":  00007
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00004
                                        }]
            }]


### Update Contact [PUT]
Update one to many contact records            
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                "contactId":            000001,
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "phoneId":  "00004",
                                            "type":     "Home",
                                            "number":   "0133321111111",
                                            "smsFlag":  false
                                        },{
                                             "phoneId":  00005,
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  false
                                        }],
                "addressDetails":       [{
                                            "AddressId":  "",
                                            "country":  "United Kingdom",
                                            "type":     "Work",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            
                                        }]
            },
            {
                "title":                "Ms",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "updated@emailaddress.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{}],
                "addressDetails":       [{}]
            }]
    


+ Response 200
    + Body
    
            [{
                "contactId":            000001,
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00007
                                        }]
            },
            {
                "contactId":            000002
                
            }]


            

# Group Learners
Group of all learner-related resources

## Learners Collection [/learners{?status}{?since}]
+ Parameters
    + status (optional, string, `active`) ... Learners within a registration group
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Learners within a year
    
    
### Retrieve a collection of learners [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
            
+ Response 200 (application/json)

    + Body
    
            [{
                "learnerId":       12345,
                "learnerCode":     "2013-00132",
                "UPN":             "U1234567890A",
                "ULN":             "",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "Male",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active"
                
            }]

## Learner Record [/learners/{id}]
+ Parameters
    + id (required, int, `12345`) ... The unique identifier of the learner
    
### Retrieve a learner [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
            
+ Response 200 (application/json)

    + Body
    
            [{
                "learnerId":       12345,
                "learnerCode":     "2013-00132",
                "UPN":             "G999900210101",
                "ULN":             "1234567890",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "Male",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active"
                
            }]


## Create/Update Learner Records [/learners]
### Create Learner [POST]
Create one to many learner records            
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
             [{
                "learnerCode":     "2013-00132",
                "UPN":             "G999900210101",
                "ULN":             "1234567890",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "M",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00004,
                                        "relationship":             "Father",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
                                        
                                        
                
            },
            {
                "learnerCode":     "2013-00133",
                "UPN":             "A12331AA13",
                "ULN":             "9876543210",
                "Forename":        "Milli",
                "Surname":         "Doe",
                "LegalForename":   "Jane",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "30-06-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "11111111",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "071111111",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00001,
                                        "relationship":             "Step Father",
                                        "writtenCommunication":     "",
                                        "priority":                 2,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Secondary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   false,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  false
                                    },
                                    {
                                        "contactId":                00002,
                                        "relationship":             "Mother",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
                }]

+ Response 200
    + Body
    
            [{
                "status":               true,
                "details":              "saved successfully", 
                "learnerCode":             "JBl",
                "learnerId":           "000001",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "11111111",
                                            "phoneId":  "000051"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "071111111",
                                            "phoneId":  "00006"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00003"
                                        }],
                "contacts":             [{
                                            "contactId":            000001,
                                            "learnerContactRelId":  000001
                                        }]
            },
            {
                "LearnerCode":             "JDo",
                "LearnerId":           "000002",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00007"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00008"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  "00004"
                                        }],
                "contacts":             [{
                                            "contactId":            "000001",
                                            "learnerContactRelId":  "000002"
                                        },
                                        {
                                            "contactId":            "000002",
                                            "learnerContactRelId":  "000003"
                                        }]
            }]

### Update Learner [PUT]
Update one to many learner records            
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
            [{
                "learnerCode":     "2013-00132",
                "UPN":             "G999900210101",
                "ULN":             "1234567890",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "M",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "phoneId":  "000051",
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00001,
                                        "relationship":             "Father",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
                                        
                                        
                
            },
            {
                "learnerCode":     "2013-00133",
                "UPN":             "A12331AA13",
                "ULN":             "9876543210",
                "Forename":        "Milli",
                "Surname":         "Doe",
                "LegalForename":   "Jane",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "30-06-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "11111111",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "071111111",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active",
                "contacts":         [{
                                        "contactId":                00001,
                                        "relationship":             "Step Father",
                                        "writtenCommunication":     "",
                                        "priority":                 2,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Secondary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   false,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  false
                                    },
                                    {
                                        "contactId":                00002,
                                        "relationship":             "Mother",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
                },
                {
                "learnerCode":     "2013-00134",
                "UPN":             "",
                "ULN":             "",
                "Forename":        "In",
                "Surname":         "Valid",
                "LegalForename":   "In",
                "LegalSurname":    "Valid",
                "DateOfBirth":     "",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{}],
                "addressDetails":   [{}],
                "status":           "",
                "contacts":         [{}]
                }]
                
+ Response 200
    + Body
    
            [{
                "Status":               true,
                "learnerCode":           "2013-00132",
                "learnerId":            "000001",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "11111111",
                                            "phoneId":  "000051"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "071111111",
                                            "phoneId":  "00006"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00003"
                                        }],
                "contacts":             [{
                                            "contactId":            000001,
                                            "learnerContactRelId":  000001
                                        }]
            },
            {
                "Status":               true,
                "LearnerCode":           "2013-00133",
                "LearnerId":           "000002",
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "015555555",
                                            "phoneId":  "00007"
                                        },{
                                            "type":     "Mobile",
                                            "number":   "075555555",
                                            "phoneId":  "00008"
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "addressId":  "00004"
                                        }],
                "contacts":             [{
                                            "contactId":            000001,
                                            "learnerContactRelId":  000012
                                        },
                                        {
                                            "contactId":            000002,
                                            "learnerContactRelId":  000013
                                        }]
            },
            {
                "status":           false,
                "details":           "Invalid Date of Birth,Invalid status",
                "learnerCode":     "2013-00134",
                "UPN":             "",
                "ULN":             "",
                "Forename":        "In",
                "Surname":         "Valid",
                "LegalForename":   "In",
                "LegalSurname":    "Valid",
                "DateOfBirth":     "",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "F",
                "RegGroup":        "7L3",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Provided by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{}],
                "addressDetails":   [{}],
                "status":           "",
                "contacts":         [{}]
                

            }]


## Learner Contacts [/learnerContacts{?since}{?status}{?responsibility}{?priority}]
+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed
    + responsibility (optional, boolean, `true`) ... Filter Contacts returned to contacts with Parental Responsibilty
    + priority (optional, int, `1`) ... Filter Contacts returned to contacts with priority of that passed
    
### Retrieve a Contacts associated to a learner [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
            
+ Response 200 (application/json)

    + Body

            [{
                
                "learnerCode":     "2013-00132",
                "learnerId":       0001,
                "UPN":             "G999900210101",
                "contacts":         [{
                                        "learnerContactRelId":      000003
                                        "contactId":                00001,
                                        "forename":                 "",
                                        "surename":                 "",
                                        "relationship":             "Father",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    },
                                    {
                                        "learnerContactRelId":      000004
                                        "contactId":                00006,
                                        "forename":                 "",
                                        "surename":                 "",
                                        "relationship":             "Mother",
                                        "writtenCommunication":     "",
                                        "priority":                 2,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
            }]


            
## Learner Health Details [/learnerHealth{?since}]
+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    
### Retrieve a learner Health Details [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
            
+ Response 200 (application/json)

    + Body 
            
            [{
                "learnerCode":          "2013-00132",
                "learnerId":             000001,
                "allergies":              [{
                                                "Egg"},
                                            { "Shellfish"
                                          }],
                "foodPreference":        [{
                                                "DairyFree"

                                        }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "NoDisability"
                
                                          }],
                "disabilityNotes":      "",
                "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack"
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs"

                                        }]
                    
            
            },
            {
               "learnerCode":          "2013-00133",
                "learnerId":             000002,
                "allergies":              [{
                                                "Wheat"
                
                                          }],
                "foodPreference":        [{ }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "Not Collected"
                                          }],
                "disabilityNotes":      "",
                "medicalConditions":    [{ }],
                "medicalEvents":        [{}]
            
            }]
            
## Create/Update Learner Health Details [/learnerHealth]
### Create Learner Health [POST]
Create one to many learner health records
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
           
            {
               "learnerCode":          "2013-00133",
                "learnerId":             000002,
                "allergies":              [{
                                                "Wheat"
                
                                          }],
                "foodPreference":        [{ }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "Not Collected"
                                          }],
                "disabilityNotes":      "",
                 "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Added"
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs"

                                        }]
            
            }

+ Response 200
    + Body
    
            [{
                "status":               true,
                "learnerCode":           "2013-00132",
                "learnerId":            "000001",
                "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Added",
                                                "conditionId":  000001
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs",
                                                "MedicalEventId":        000001
                                        }]
            }]

### Update Learner Health [PUT]
Update one to many learner heatlh records            
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
           
            [{
               "learnerCode":          "2013-00133",
                "learnerId":             000002,
                "allergies":              [{
                                                "Wheat"
                
                                          }],
                "foodPreference":        [{ }],
                "dietaryNotes":         "",
                "disabilities":           [{
                                                "Not Collected"
                                          }],
                "disabilityNotes":      "",
                 "medicalConditions":    [{
                                                "conditionId":  000001,
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Updated"
                
                                        }],
                "medicalEvents":        [{
                                                "MedicalEventId":          000001,
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs"

                                        }]
            
            }]

+ Response 200
    + Body
    
            [{
                "status":               true,
                "learnerCode":           "2013-00132",
                "learnerId":            "000001",
                "medicalConditions":    [{
                                                "Condition":    "Asthma",
                                                "InfoDate":     "19-06-2014",
                                                "Notes":        "Asthma Attack - Updated",
                                                "conditionId":  000001
                
                                        }],
                "medicalEvents":        [{
                                                "events Type":          "Allergic Reaction",
                                                "from Date":            "19-06-2014",
                                                "to Date":              "19-06-2014",
                                                "incident Location":    "Office",
                                                "notes":                "Eggs",
                                                "conditionId":          000002
                                        }]
            }]

## Create/Update Learner Attendance [/learnerRollCallAttendance]
### Create Learner Roll Call Attendance [POST]
Create Attendance for one to many learners

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
           
            [{
                "learnerCode":          "2013-00001",
                "attendanceStartDate":  "16-06-2014",
                "rollCallSessionStart": "AM",
                "AttendanceString":     "/\/\/\/\/\##IIII/\/\/\"
            },
            {
                "learnerCode":          "2013-00002",
                "attendanceStartDate":  "16-06-2014",
                "rollCallSessionStart": "AM",
                "AttendanceString":     "BBBB/\/\/\##/\/\/\/\/\"
                
            }
            
            }]

+ Response 200
    + Body
    
            [{
                 "learnerCode":          "2013-00001",
                 "status":             "success"
            },
            {
                "learnerCode":          "2013-00002",
                 "status":             "success"
                
            }]


## Create/Update Learner Attendance [/learnerLessonAttendanceByPeriod]
### Create Learner Lesson Attendance By Period [POST]
Create Lesson Attendance for one to many learners using Timetable Period

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
           
            [{
                "learnerCode":          "2013-00001",
                "iteration":            1,
                "periodId":             1,
                "attendanceCode":       "/"
            },
            {
                "learnerCode":          "2013-00002",
                "iteration":            1,
                "periodId":             1,
                "attendanceCode":       "N"
            }
            
            }]

+ Response 200
    + Body
    
            [{
                 "learnerCode":          "2013-00001",
                 "status":             "success"
            },
            {
                "learnerCode":          "2013-00002",
                 "status":             "success"
                
            }]


## Create/Update Learner Attendance [/learnerLessonAttendanceByLessonTime]
### Create Learner Lesson Attendance by Time [POST]
Create Attendance for one to many learners using date and time of lesson

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
           
            [{
                "learnerCode":          "2013-00001",
                "date":                 "16-06-2014",
                "startTime":            "09:00",
                "finishTime":           "10:00",
                "attendanceCode":       "/"            

            },
            {

                "learnerCode":          "2013-00002",
                "date":                 "16-06-2014",
                "startTime":            "09:00",
                "finishTime":           "10:00",
                "attendanceCode":       "N"
            }
            
            }]

+ Response 200
    + Body
    
            [{
                 "learnerCode":          "2013-00001",
                 "status":             "success"
            },
            {
                "learnerCode":          "2013-00002",
                 "status":             "success"
                
            }]


## Learner Exclusions [/learnerExclusions{?startDate}{?endDate}]
+ Parameters
    + startDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    + endDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    
### Retrieve a learner Exclusion Details [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
            
+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                        "exclusionId":  0001,
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    }]
            ]}
                
## Create/Update Learner Exclusions [/learnerExclusions]
### Create Learner Exclusions [POST]
Create Exclusions for one to many learners

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                        "exclusionId":  0
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },
                                    {
                                        "exclusionId":  0,
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                        "exclusionId":  0
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    }
            
            }]

+ Response 200
    + Body
    
            [{
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  1
                                    },
                                    {
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  2
                                    }]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  3
                                    }]
            }]

### Update Learner Exclusions [PUT]
Update Exclusions for one to many learners

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                        "exclusionId":  1
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },
                                    {
                                        "exclusionId":  2,
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    },]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                        "exclusionId":  3
                                        "category":     "",
                                        "reason":       "",
                                        "startDate":    "",
                                        "endDate":      "",
                                        "startSession": "",
                                        "endSession":   "",
                                        "notes":        "",
                                        "totalDays":    5,
                                        "totalSessions":10,
                                        "LAC":          false,
                                        "headNotified": "",
                                        "govMeeting":   "",
                                        "provisionStartDate":   "",
                                        "provisionDetails":     "",
                                        "appeal":           true,
                                        "appealDate":       "",
                                        "appealCutOff":     "",
                                        "exclusionHearing": "",
                                        "outcome":          "",
                                        "reintregationMeetingDate": "",
                                        "reintregationNotes":      "",
                                        "reinstatementDate":        "",
                                        "reinstatementNotes":       ""
                                    }
            
            }]

+ Response 200
    + Body
    
            [{
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  1
                                    },
                                    {
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  2
                                    }]
            },
            {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "exclusions":       [{
                                    "status":   true,
                                    "details":  "",
                                     "exclusionId":  3
                                    }]
            }]


## Learner SEN Provisions [/learnerSENProvisions{?status}]
+ Parameters
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed
   
    
### Retrieve a learner SEN Provision Details [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionId":          00001
                                    "provisionTypeCode":    "E",
                                    "provisionTypeName":    "Education, Health and Care Plan",
                                    "startDate":            "19/09/2014",
                                    "reviewDate":           "20/09/2014",
                                    "endDate":              "20/09/2014"
                                },
                                {
                                    "provisionId":          00002
                                    "provisionTypeCode":    "P",
                                    "provisionTypeName":    "School Action Plus",
                                    "startDate":            "21/09/2014",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
                },
                {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "provisions":   [{
                                    "provisionId":          00003
                                    "provisionTypeCode":    "P",
                                    "provisionTypeName":    "School Action Plus",
                                    "startDate":            "21/09/2014",
                                    "reviewDate":           "01/01/2015",
                                    "endDate":              "30/08/2015"
                                }]
                }]
                
                
## Create/Update Learner SEN Provisions [/learnerSENProvision]
### Create Learner SEN Provisions [POST]
Create SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionId":          0
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }]
              
+ Response 200
    + Body
    
            [{
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "status":           true,
                "details":          "",
                "provisions":   [{
                                    "status":               true,
                                    "details":              ""
                                    "provisionId":          00001
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
             }]                  

### Update Learner SEN Provisions [PUT]
Update SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionId":          0001
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }]
              
+ Response 200
    + Body
    
            [{
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "status":           true,
                "details":          "",
                "provisions":   [{
                                    "status":               true,
                                    "details":              ""
                                    "provisionId":          00001
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
             }] 


## Learner SEN Major Needs [/learnerSENMajorNeeds{?status}]
+ Parameters
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed
    
### Retrieve a learner SEN Major Need Details [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "leanerMajorNeedId":          00001
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            1
                                }]
            }]


## Create/Update Learner SEN Major Needs [/learnerSENMajorNeeds]
### Create Learner SEN Major Needs [POST]
Create SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "majorNeedId":          0
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            1
                                }]
            
            
            
            }]

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "leanerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            1
                                }]
            }]
            

### Update Learner SEN Major Needs [PUT]
Create SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "learnerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            2
                                }]
            
            
            
            }]

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "learnerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            2
                                }]
            }]


## Learner Siblings [/learnerSiblings{?learnerId}]

+ Parameters
    + learnerId (optional, int, `00001`) ... Return siblings of a learner

### Return a list of siblings associated to one of more learners [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerCode":      "2013-00002",
                                    "learnerId":        0002
                                },
                                {
                                    "learnerCode":      "2013-00003",
                                    "learnerId":        0003
                                
                                }]
            }]
            
## Create/Update Learner Sibling Association [/learnerSiblings]
### Create Learner Sibling Association [POST]

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                
                                }]
            
            }]
            
            

+ Response 200 (application/json)

    + Body 
            
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                
                                }]
            
            }]


### Update Learner Sibling Association [PUT]

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
          
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                
                                }]
            
            }]
            
            

+ Response 200 (application/json)

    + Body 
            
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                
                                }]
            
            }]

# Group Groups
Group of all Group-related resources

## Groups Collection [/groups{?groupStartDate}{?groupEndDate}{?type}{?since}]

+ Parameters
    + groupStartDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a start date on or after date
    + groupEndDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a end date on or before date
    + type (optional, string, `teachingGroup`) ... Type of Group to Return
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Groups modified since date provided
    
### Retrieve a collection of Groups [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
            
+ Response 200 (application/json)

    + Body
    
            [{
                "groupCode":    "9A",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employeeId":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "groupId":      000001,
                "name":         "9A",
                "size":         30,
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "10"
            },
            {
                "groupCode":    "10AR/1",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employeeId":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"
                                },
                                {
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00002"
                                }],
                "groupId":      000002,
                "name":         "10Art 1",
                "size":         29,
                "subjectCode":  "AR",
                "subjectName":  "Art",
                "type":         "TeachingGroup",
                "Year":         "10"
            }]
            
## Create/Update Group [/groups]
### Create Group [POST]
Create one or many groups
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
             [{
                "groupCode":    "9A",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "name":         "9A",
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "10"
            },
            {
                "groupCode":    "10SC/1",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "name":         "10 Science 1",
                "subjectCode":  "SC",
                "subjectName":  "Science",
                "type":         "TeachingGroup",
                "Year":         "10"
            }]


+ Response 200
    + Body
    
            [{
                "groupId":      000001,
                "groupCode":    "9B"
             },
            {
                "groupId":      000002,
                "groupCode":    "10SC/1"
            }]


### Create Group [PUT]
Update one or many groups
            
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

    + Body
    
             [{
                "groupId":      000001,
                "groupCode":    "9B",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"},
                                {
                                    "employeeId":           54321,
                                    "staffCode":             "JDo"
                                }],
                "name":         "9A",
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "9"
            }]


+ Response 200
    + Body
    
            [{
                "status":       "success",
                "details":      "Update Successful"
                "groupId":      000001,
                "groupCode":    "9B"
             }]


## Group Association [/groupAssociation/{?groupId}{?since}{?groupStartDate}{?groupEndDate}]

+ Parameters
    + groupId (optional, number, `12345`) ... The unique identifier of a Learner Group
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to retrieve all changes since the date time specified.
    + groupStartDate (optional, dateTime, `01-04-2014`) ... Optional filter to retrieve all groups with a start date after specified date
    + groupEndDate (optional, dateTime, `01-04-2014`) ... Optional filter to retrieve all groups with an end date before specified date.

### Retrieve Learner Group Association [GET]


+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId


+ Response 200 (application/json)
    + Body
    
            [{
                   "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    2,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            },
            {
                   "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]


            }]
            
## Create/Update Group Association [/groupAssociation]
### Create Group Association [POST]
Create Group Association for one to many Learners and Groups
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body

            [{
                   "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    0,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    0,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            },
            {
                   "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    0,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    0,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]

            }]


+ Response 200 (application/json)
    + Body
    
            [{
                   "groupId":   1,
                    "status":       "success",
                    "details":      "Action Successful",
                    "learners":   [{
                                        "status":       "success",
                                        "details":      "Create Successful",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1

                                },
                                {
                                        "status":       "success",
                                        "details":      "Create Successful",
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    2


                                }]
            },
            {
                   "groupId":   2,
                    "status":       "success",
                    "details":      "Action Successful",see                   
                    "learners":   [{
                                        "status":       "success",
                                        "details":      "Create Successful",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3

                                },
                                {
                                        "status":       "success",
                                        "details":      "Create Successful",                                
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4

                                }]            
        
             }]

### Update Group Association [PUT]
Update Group Association for one to many Learners and Groups
+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body

            [{
                   "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1,
                                        "startDate":                "10-09-2014",
                                        "endDate":                  "30-08-2015"
                                }]
            },
            {
                   "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]

            }]


+ Response 200 (application/json)
    + Body
    
            [{
                   "groupId":   1,
                    "status":       "success",
                    "details":      "Action Successful",
                    "learners":   [{
                                        "status":       "success",
                                        "details":      "Update Successful",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1

                                }]
            },
            {
                   "groupId":   2,
                    "status":       "success",
                    "details":      "Action Successful",see                   
                    "learners":   [{
                                        "status":       "success",
                                        "details":      "Update Successful",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3

                                },
                                {
                                        "status":       "success",
                                        "details":      "Update Successful",                                
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4

                                }]            
        
             }]

# Group Academic Data
Group of all Academic Resources

## AcademicYear [/academicYear/{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Year

### Retrieve AcadmicYear [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "name":             "Academic Year 2014/2015",
                "startDate":        "01-09-2014",
                "endDate":          "31-08-2015"
                
             },
            {
                "academicYearId":   2
                "name":             "Academic Year 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]


## Create/Update Academic Years [/academicYear]
### Create Academic Year [POST]
Create one to many academic years

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "name":             "Academic Year 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015"
                
             },
            {
                "name":             "Academic Year 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]
            
+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "name":             "Academic Year 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015"
                
             },
            {
                "academicYearId":   2
                "name":             "Academic Year 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]


### Update Academic Year [PUT]
Update one to many academic years

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "academicYearId":   1
                "name":             "AC 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015"
                
             },
            {
                "academicYearId":   32132
                "name":             "AC 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]
            
+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "status":           true
                "details":          "Update Successful"
                
             },
            {
                "academicYearId":   32132
                "status":           false
                "details":          "Invalid academicYearId"
                
            }]


## Academic Terms [/academicTerms/{?id}{?AcYearId}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Term
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve AcadmicTerms [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]

## Create/Update Academic Terms [/academicTerms]
### Create Academic Term [POST]
Create one to many academic terms

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "academicYearId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
               "academicYearId":   1
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]
            
+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]


### Update Academic Term [PUT]
Update one to many academic terms

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "05/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
               "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]
            
+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]

## Terms Breaks [/termBreaks/{?AcYearId}{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Term Break
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve TermBreaks [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "TermBreakId":   1
                "name":             "Spring Half Term",
                "startDate":        "25/05/2014",
                "endDate":          "01/06/2014"
                
             },
            {
                "academicYearId":   1
                "TermBreakId":   2
                "name":             "Autumn Half Term",
                "startDate":        "26/10/2013",
                "endDate":          "02/11/2013"
                
            }]


## Create/Update Academic Terms [/termBreaks]
### Create Term Breaks [POST]
Create one to many terms breaks

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "academicYearId":   1
                 "name":             "Spring Half Term",
                "startDate":        "25/05/2014",
                "endDate":          "01/06/2014"
                
             },
            {
               "academicYearId":   1
                "name":             "Autumn Half Term",
                "startDate":        "26/10/2013",
                "endDate":          "02/11/2013"
                
            }]
            
+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "academicTermId":   1
                 "name":             "Spring Half Term",
                "startDate":        "25/05/2014",
                "endDate":          "01/06/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Autumn Half Term",
                "startDate":        "26/10/2013",
                "endDate":          "02/11/2013"
                
            }]


### Update Term Breaks [PUT]
Update one to many terms breaks

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "academicTermId":   1
                "name":             "Spring Half Term",
                "startDate":        "23/05/2014",
                "endDate":          "01/06/2014"
                
             },
            {
               "academicTermId":   2
                 "name":             "Autumn Half Term",
                "startDate":        "26/10/2013",
                "endDate":          "02/11/2013"
                
            }]
            
+ Response 200 (application/json)
    + Body
    
            [{
                "academicTermId":   1
                "name":             "Spring Half Term",
                "startDate":        "23/05/2014",
                "endDate":          "01/06/2014"
                
             },
            {
                "academicTermId":   2
                 "name":             "Autumn Half Term",
                "startDate":        "26/10/2013",
                "endDate":          "05/11/2013"
                
            }]


## Week Structure [/weekStructure/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve WeekStructure [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "Non-Working Day"
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "Full Working Day"
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    " Half Working Day - AM"
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - PM"
                
            }]

## Create/Update Week Structure [/weekStructure]
### Set Week Structure [PUT]
Set one to many days of a Week Structure

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "Non-Working Day"
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "Full Working Day"
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    "Full Working Day"
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - AM"
                
            }]
            
+ Response 200 (application/json)
    + Body
        
            [{
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "Non-Working Day",
                "status":               true
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "Full Working Day",
                "status":               true
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    "Full Working Day",
                "status":               true
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - AM",
                "status":               true
            }]

## Academic Calendar Events [/academicCalendarEvents/{?AcYearId}{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Calendar Event
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Calendar Events [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
            
            [{
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "fullHalfDay":          "Full Day"
                "calendarEventId":      0001
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "Only staff should attend",
                "startDate":            03-09-2014,
                "endDate":              03-09-2014,
                "fullHalfDay":          "Half Day AM"
                "calendarEventId":      0002
            }]


## Create/Update Academic Calendar Events [/academicCalendarEvents]
### Create Academic Calendar Events [POST]
Create one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "fullHalfDay":          "Full Day"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "Only staff should attend",
                "startDate":            03-09-2014,
                "endDate":              03-09-2014,
                "fullHalfDay":          "Half Day AM"
            }]
            
    
+ Response 200 (application/json)
    
    + Body
        
            [{
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            },
            {
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            }]

### Update Academic Calendar Events [PUT]
Update one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "fullHalfDay":          "Full Day"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "Only staff should attend",
                "startDate":            03-09-2014,
                "endDate":              03-09-2014,
                "fullHalfDay":          "Half Day AM"
            }]
            
    
+ Response 200 (application/json)
    
    + Body
        
            [{
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            },
            {
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            }]

## Courses [/courses/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Courses  [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
               "acYearId":          1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001
            },
            {
                "acYearId":         1,
                "courseCode":       "KS4",
                "courseName":       "Key Stage 4",
                "courseId":         0002

            }]


## CourseYears [/courseYear/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve CourseYears Association [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
               "acYearId":          1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001,
                "yearCode":         "Y7",
                "yearName":         "Year 7",
                "yearId":           0001,
                "couseYearId":      0001
            },
            {
                "acYearId":         1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001,
                "yearCode":         "Y8",
                "yearName":         "Year 8",
                "yearId":           0002,
                "couseYearId":      0002
            },
            {
                "acYearId":         1,
                "courseCode":       "KS4",
                "courseName":       "Key Stage 4",
                "courseId":         0002,
                "yearCode":         "Y10",
                "yearName":         "Year 10",
                "yearId":           0004,
                "couseYearId":      0003
            }]


## Create/Update CourseYears [/courseYear]
### Create CourseYears [POST]
Create association of one to many Course to Years

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        


    + Body

            [{
                "acYearId":         1,
                "courseId":         0001,
                "yearId":           0001
            },
            {
                "acYearId":         1,
                "courseId":         0002,
                "yearId":           0004
            }]
            
+ Response 200 (application/json)
    + Body
    
            [{
                "acYearId":         1,
                "courseId":         0001,
                "yearId":           0001,
                "courseYearId":     0001
            },
            {
                "acYearId":         1,
                "courseId":         0002,
                "yearId":           0004,
                "courseYearId":     0002

            }]
            

# Group Timtetable
Group of all Timetable Resources

## Timetable Sources [/TTSource/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Timetable Sources Association [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
                "timetableSourceId":        0001
                "code":                     "2014/2015",
                "name":                     "Timetable for 2014/2015",
                "startDate":                "01/09/2014",
                "endDate":                  "30/08/2015",
                "timetableIterations":      52,
                "splitCoverEvents" :        false,
                "splitMultiplePeriods":     false,
                "academicYear":             1
            }]

## Create/Update Timetable Sources [/TTSources]
### Create Timetable Sources [POST]
Create one to many Timetable Sources

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body

            [{
                "timetableSourceId":        0
                "code":                     "2014/2015",
                "name":                     "Timetable for 2014/2015",
                "startDate":                "01/09/2014",
                "endDate":                  "30/08/2015",
                "timetableIterations":      52,
                "splitCoverEvents" :        false,
                "splitMultiplePeriods":     false,
                "academicYear":             1
            },
            {
                "timetableSourceId":        0
                "code":                     "2015/2016",
                "name":                     "Timetable for 2015/2016",
                "startDate":                "01/09/2015",
                "endDate":                  "30/08/2016",
                "timetableIterations":      52,
                "splitCoverEvents" :        false,
                "splitMultiplePeriods":     false,
                "academicYear":             2

            }]


+ Response 200 (application/json)
    + Body
    
            [{
                "status":           true
                "details":          "Create Successful"
                "timetableSourceId":        1
                "code":                     "2014/2015"
            },
            {
                "status":           true
                "details":          "Create Successful"
                "timetableSourceId":        2
                "code":                     "2015/2016"
            }]


### Update Timetable Sources [PUT]
Update one to many Timetable Sources

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body

            [{
                "timetableSourceId":        1
                "code":                     "2014/2015",
                "name":                     "Updated Timetable for 2014/2015",
                "startDate":                "01/09/2014",
                "endDate":                  "30/08/2015",
                "timetableIterations":      52,
                "splitCoverEvents" :        false,
                "splitMultiplePeriods":     false,
                "academicYear":             1
            }]


+ Response 200 (application/json)
    + Body
    
            [{
                "status":                   true
                "details":                  "Update Successful"
                "timetableSourceId":        1
                "code":                     "2014/2015"
            }]



## Day Compositions  [/dayCompositions/{?AcYearId}{?TTSourceId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year
    + TTSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Timetable Sources Association [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                    "Day Comp 2014/2015"
             },
            {
                "timetableSourceId":        1,
                "dayCompositionId":         2,
                "Name":                    "Day Comp 2014/2015 For KS5"
             }]


## Create/Update Day Compositions [/dayCompositions]
### Create Day Compositions [POST]
Create one to many Day Compositions

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body

            [{           
                "timetableSourceId":        1,
                "dayCompositionId":         0,
                "Name":                    "Day Comp 2014/2015"
            }]


+ Response 200 (application/json)
    + Body
    
            [{
                "status":                    true,
                "details":                  "Create Successful",  
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                    "Day Comp 2014/2015"
            }]

### Update Day Compositions [PUT]
Update one to many Day Compositions

+ Request (application/json)

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId

    + Body

            [{           
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                    "Day Comp 2014/2015 Updated"
            }]


+ Response 200 (application/json)
    + Body
    
            [{
                "status":                    true,
                "details":                  "Create Successful",  
                "timetableSourceId":        1,
                "dayCompositionId":         1,
                "Name":                    "Day Comp 2014/2015 Updated"
            }]


## Day Compositions Periods [/dayCompositionsPeriods/{?AcYearId}{?TTSourceId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year
    + TTSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Timetable Sources Association [GET]

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Response 200 (application/json)
    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Monday",
                "periodId":                 1,
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Monday",
                "periodId":                 2,
            `   "periodCode":               "P2",
                "periodName":               "Period 2",
                "startTime:"                "09:50",
                "endTime":                  "10:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "weekDay":                  "Monday",
                "periodId":                 3,
            `   "periodCode":               "P3",
                "periodName":               "Period 3",
                "startTime:"                "11:10",
                "endTime":                  "12:10"
            }]

##Create/Update Day Compositions Periods [/dayCompositionsPeriods/]
### Create Day Compositions Periods [POST]
Create on to many Day Compositions Periods

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Request (application/json)
    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 0,
                "weekDay":                  "Monday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 0,
                "weekDay":                  "Tuesday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            }]



+ Response 200 (application/json)
    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 1,
                "weekDay":                  "Monday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 2,
                "weekDay":                  "Tuesday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            }]


### Create Day Compositions Periods [PUT]
Update on to many Day Compositions Periods

+ Request

    + Headers
        
            partnerToken: validPartnerToken
            schoolId: validSchoolId
        

+ Request (application/json)
    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 0,
                "weekDay":                  "Monday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 0,
                "weekDay":                  "Tuesday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            }]



+ Response 200 (application/json)
    + Body
    
            [{
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 1,
                "weekDay":                  "Monday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            },
            {
                "dayCompositionId":         1,
                "timetableSourceId":        1,
                "periodId":                 2,
                "weekDay":                  "Tuesday",
            `   "periodCode":               "P1",
                "periodName":               "Period 1",
                "startTime:"                "08:30",
                "endTime":                  "09:50"
            }]


# Group Physical
Group of all Timetable Resources












