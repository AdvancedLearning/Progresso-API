FORMAT: 1A


# Progresso API
Provides the ability to manage school information.

**Please Note**

There are various sections in this documentation which are marked as **Proposed**.
These are areas which are or will be under development in the near future. Once areas/methods are complete they will be marked as Available.

If you have any comments or suggestions please contact:
            **sally.robinson@advancedcomputersoftware.com**


# Group Authorisation
Method for security and access.

The UserId and Password will be issued to the Partner by the educational establishment and are establishment specific.

**Passwords which contain special characters will need to be encoded prior to use

## Access Tokens [/Token]
The Access Token used is an OAuth token and has an automatic expiry.

Required parameters are:

- Username
- Password
  - NB: Passwords which contain special characters MUST be encoded

### Request token [POST]

+ Request

    + Headers
    
            Content-Type: application/x-www-form-urlencoded
            
    + Body
    
            grant_type=password&username=[USERNAME]&password=[URI_ENCODED_PASSWORD]

+ Response 200 (application/json)

    + Body
    
            {
                "access_token": "63AUHWsGVEDIEl8",
                "token_type": "bearer",
                "expires_in": 86399,
                ".issued": "Wed, 30 Dec 2015 11:22:48 GMT",
                ".expires": "Thu, 31 Dec 2015 11:22:48 GMT"
            }

# Group Employees Collection
Methods for all employee-related resources

## Employee Record [/Employees/{Id}]

View a single employee record

Required parameters are:

- Employee Id

+ Parameters
    + Id (required, int, `54321`) ... The unique identifier of the employee

### View an employee record [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    

+ Response 200 (application/json)

    + Body
    
            {
                "EmployeeId":           12345,
                "StaffCode":            "sc123",
                "Title":                "Mr",
                "Surname":              "Bloggs",
                "Forname":              "Joe",
                "Department":           "Math",
                "Position":             "HDPT",
                "LegalSurname":         "Bloggs",
                "LegalForename":        "Joseph",
                "FormerSurname":        "",
                "MiddleName":           "Bob",
                "DateOfBirth":          "31-12-1968 00:00:00",
                "Gender":               "1",
                "StartDate":            "28-02-2014 00:00:00",
                "LeftDate":             "31-08-2015 00:00:00",
                "TeacherNumber":        "12456",
                "Email":                "joe.bloggs@theschool.edu",
                "PhoneDetails":         [{
                                            "Type":     "H",   
                                            "Number":   "015555555",
                                            "SmsFlag":  false,
                                            "PhoneId":  1234567
                                            
                                        },{
                                            "Type":     "M",  
                                            "Number":   "075555555",
                                            "SmsFlag":  ftrue,
                                            "PhoneId":  1234568
                                        }],
                "AddressDetails":       [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire",
                                            "PostCode": "DD55 36DD",
                                            "AddressId": 123456
                                        }],
                "Status":               "Active",
                "NiNumber":             "NI1234HJGJ34",
                "QtStatus":             true,
                "QtsRoute":             "OTTP",
                "DateOfQTS":            "",
                "HTLA":                 false,
                "DateOfHTLAStatus":       "",
                "LanguageDetails":        [{
                                            "Code":     "CHI",
                                            "Type":     "SH",
                                            "Level":    "5",
                                            "LanguageUsageId": 434000
                                        }],
                "QualificationDetails":   [{
                                            "QualificationCode":  "BEDO",
                                            "Subject1":           "",
                                            "Subject2":           "",
                                            "ClassOfDegree":      "3",
                                            "Verified":           False,
                                            "EmployeeQualificationId": 24534
                                        }],
                "Nationality":            "",
                "Ethnicity":              "WBRI",
                "Religion":               "",
                "LAStartDate":            "",
                "Disability":             "NO"
            }


## Employee Basic Records [/Employees{?Status}{?Since}]
Returns all employees basic records for a school

Optional parameters:

- Status = "Active", "Left" or "Draft"

- Since = use date format mm-dd-yyyy

### Retrieve one to many basic employee records [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters
    + Status (optional, string, `active`) ... Optional filter by status, valid values [ active | left | draft].
    + Since (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to retrieve all changes since the date time specified. Only employee records that have changed will be returned.

+ Response 200 (application/json)

    + Body
    
            {
                "EmployeeId":           12345,
                "StaffCode":            "JBl",
                "Title":                "Mr",
                "Surname":              "Bloggs",
                "Forname":              "Joe",
                "Department":           "Math",
                "Position":             "Teacher",
                "LegalSurname":         "Bloggs",
                "LegalForename":        "Joseph",
                "FormerSurname":        "",
                "MiddleName":           "Bob",
                "DateOfBirth":          "31-12-1968 00:00:00",
                "Gender":               "1",
                "StartDate":            "28-02-2014 00:00:00",
                "LeftDate":             "31-12-2015 00:00:00",
                "TeacherNumber":        "12456",
                "Email":                "joe.bloggs@theschool.edu",
                "PhoneDetails":         [{
                                            
                                            "Type":     "H",
                                            "Number":   "015555555",
                                            "SmsFlag":  false,
                                            "PhoneId":  12334
                                        },{
                                            "Type":     "M",
                                            "Number":   "075555555",
                                            "SmsFlag":  true,
                                            "Phoneid":  212121
                                        }],
                "AddressDetails":       [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire"
                                            "PostCode": "DD55 36DD",
                                            "AddressId":345345
                                        }],
                "Status":               "active",
                "NiNumber":             "NI1234HJGJ34",
                "QtStatus":             False,
                "QtsRoute":             "",
                "DateOfQTS":            "",
                "HTLA":                 False,
                "DateOfHTLAStatus":     "",
                "LanguageDetails":      [{
                                            "Code":     "ENG",
                                            "Type":     "H",
                                            "Level":    "4",
                                            "LanguageUsageId": 434000
                                        }],
                "QualificationDetails": null
                "Nationality":          "GBR",
                "Ethnicity":            "WBRI",
                "Religion":             "MU",
                "StartDate":            "",
                "Disability":           "No"
            }


## Create/Update Employee Records [/employees]
Create one to many basic employee records

Required parameters are:

- Staff Code    
- Forname         
- Surname 
- Middlename

    
### Create Basic Employees [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body

            {
                "StaffCode":            "JBl",
                "Title":                "Mr",
                "Surname":              "Bloggs",
                "Forname":              "Joe",
                "Department":           "Math",
                "Position":             "TCH",
                "LegalSurname":         "Bloggs",
                "LegalForename":        "Joseph",
                "FormerSurname":        "",
                "MiddleName":           "Bob",
                "DateOfBirth":          "31-12-1968 00:00:00",
                "Gender":               "1",
                "StartDate":            "28-02-2014 00:00:00",
                "LeftDate":             "",
                "TeacherNumber":        "12456",
                "Email":                "joe.bloggs@theschool.edu",
                "PhoneDetails":         [{
                                            
                                            "Type":     "H",
                                            "Number":   "015555555",
                                            "SmsFlag":  false
                                        },{
                                            "Type":     "M",
                                            "Number":   "075555555",
                                            "SmsFlag":  true
                                        }],
                "AddressDetails":       [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire"
                                            "PostCode": "DD55 3DD"
                                        }],
                "Status":               "Active",
                "NiNumber":             "NI648254E",
                "QtStatus":             False,
                "QtsRoute":             "",
                "DateOfQTS":            "",
                "HTLA":                 False,
                "DateOfHTLAStatus":     "",
                "LanguageDetails":      [{
                                            "Code":     "ENG",
                                            "Type":     "H",
                                            "Level":    "4",
                                            "LanguageUsageId": 434000
                                        }],
                "QualificationDetails": null
                "Nationality":          "GBR",
                "Ethnicity":            "WBRI",
                "Religion":             "MU",
                "StartDate":            "",
                "Disability":           "No"
            }


+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "EmployeeId":           1,
                "StaffCode":            "sc123",
                "PhoneDetails":         [{
                                            "PhoneId":  "00001"
                                        },{
                                            "PhoneId":  "00002"
                                        }],
                "AddressDetails":       [{
                                            "AddressId":"00001"
                                        }]
            }

### Update Employee Records [PUT]

Update one to many employee records

+ Request (application/json)


    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            {
                "EmployeeId":           12345,
                "Title":                "Mr",
                "Surname":              "Bloggs",
                "Forname":              "Joe",
                "Position":             "DPHT",
                "LeftDate":             "31-12-2015 00:00:00",
                "Email":                "joe.bloggs333@whoknows.edu"
            }

+ Response 200

    + Body
    
            {
                "Status":                true,
                "Details":              "Saved successfully"
                "EmployeeId":           12345,
                "StaffCode":            "sc123"
            }


## Employees Contacts [/EmployeeContacts{?Status}]

Retrive a collection of employees contacts

### Retrieve collection of employees contacts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters

    + Status (optional, string, `Active`) ... Optional filter by status, valid values [ Active | Left ].


+ Response 200

    + Body
    
            {
                "EmployeeId":           12345,
                "StaffCode":            "sc123",
                "Contacts": 
                            [{
                                        "ContactId":    00001,
                                        "Forename":     "",
                                        "Surname":      "",
                                        "Relationship": "Partner",
                                        "Priority":     1,
                                        "Emergency":    "primary",
                                    `   "NextOfKin":    true
                            },
                            {  
                                        "ContactId":    00002,
                                        "Forename":     "",
                                        "Surname":      "",
                                        "Relationship": "Other",
                                        "Priority":     2,
                                        "Emergency":    "",
                                    `   "NextOfKin":    false
                            }]
            }
    

### Create Employee Contact Association [POST]

Associate one or more Employees to one or more contacts

Mandtory parameters:

- EmployeeId
- ContactId

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]


    + Body
    
            [{
                "EmployeeId":           12345,
                "Contacts": 
                            [{
                                        "ContactId":    00001,
                                        "Relationship": "PTNR",
                                        "Priority":     1,
                                        "Emergency":    "Primary",
                                    `   "NextOfKin":    true
                            },
                            {  
                                        "ContactId":    00002,
                                        "Relationship": "OTHR",
                                        "Priority":     2,
                                        "Emergency":    "",
                                    `   "NextOfKin":    false
                            }]
            }]
            

+ Response 200

    + Body
    
            {
                "EmployeeId":           12345,
                "Status":               true,
                "Details":              "Saved successfully",
                "Contacts": 
                            [{
                                "ContactId":            00001
                            {  
                                "ContactId":            00002
                            }]
            }

           
### Update Employee Contact Association [PUT]

Update the association between one or more Employees to one or more contacts

Mandtory parameters:

- EmployeeId
- ContactId

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]


    + Body
    
            [{
                "EmployeeId":           12345,
                "Contacts": 
                            [{
                                        "ContactId":    00001,
                                        "Relationship": "WIFE",
                                        "Priority":     1,
                                        "Emergency":    "Primary",
                                    `   "NextOfKin":    true
                            },
                            {  
                                        "ContactId":    00002,
                                        "Relationship": "RELA",
                                        "Priority":     2,
                                        "Emergency":    "Secondary",
                                    `   "NextOfKin":    false
                            }]
            }]
            

+ Response 200

    + Body
    
            {
                "EmployeeId":           12345,
                "Status":               true,
                "Details":              "Saved successfully",
                "Contacts": 
                            [{
                                "ContactId":            00001
                            {  
                                "ContactId":            00002
                            }]
            }
            
                            

## Employees Checks [/EmployeeChecks{?Status}{?Employee}]

Collection of all employee checks for employees within a school

### Retrieve collection of employee checks [GET]

Retrieve one or more employee check records

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters
    + Status (optional, boolean, `true`)... Option filter for active Employees
    + Employee (optional, int, `0001`) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            {
                "EmployeeId":           0001,
                "StaffCode":            "sc123",     
                "ADD":                  [{
                                            "CheckId":              1,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedById":          123456
                                            "CheckedByCode":        "JD",
                                            "CcheckedByName":       "John Don",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "AGN":                  [{ 
                                            "CheckId":              2,
                                            "AgencyName":           "Hays",
                                            "PaperworkDate":       "12-09-2013"
                                        }],
                "DBS":                  [{
                                            "CheckId":              3,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedById":          123456
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                            "ClearenceLevel":       "EN",
                                            "Result":               "PASS",
                                            "RequestDate":          "12-09-2013",
                                            "ReviewDate":           "12-09-2013",
                                            "DisclousureReference": "T000135"
                                        }],
                "GTC":                  [{ 
                                            "CheckId":              4,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "ID":                   [{ 
                                            "CheckId":              5,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "List99":               [{ 
                                            "CheckId":              6,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "List99Clearence":      "Pass",
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "MED":                  [{ 
                                            "CheckId":              7,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "Qual":                 [{
                                            "CheckId":              8,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "RED":                  [{ 
                                            "CheckId":              9,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "RTW":                  [{ 
                                            "CheckId":              10,
                                            "VerificationDate":     "12-09-2013",
                                            "ExpiryDate":           "12-09-2014",
                                            "CheckedByCode":        "JD",
                                            "CheckedByName":        "John Doe",
                                            "Position":             "DPHT",
                                            "Evidence":             "Certificate Provided"
                                        }]
            }


## Create/Update Employee Checks [/employeeChecks]

### Create Employee Checks [POST]

Create Employee checks for one to multiple employees

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "EmployeeId":       0001,
                            "ADD":  [{ }],
                            "AGN":  [{ }],
                            "DBS":  [{ }],
                            "GTC":  [{ }],
                            "ID":   [{ }],
                            "List99":   [{     
                                        "CheckId":              0,
                                        "VerificationDate":     "12-09-2013",
                                        "ExpiryDate":           "12-09-2014",
                                        "List99Clearence":      "Pass",
                                        "CheckedById":          123456,
                                        "Position":             "DPHT",
                                        "Evidence":             "Certificate Provided"
                                        }],
                            "MED":  [{  }],
                            "Qual": [{ }],
                            "RED":  [{ }],
                            "RTW":  [{ }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "EmployeeId":   0001,
                            "ADD":  [{ }],
                            "AGN":  [{ }],
                            "DBS":  [{ }],
                            "GTC":  [{ }],
                            "ID":   [{ }],
                            "List99":   [{
                                        "CheckId":              00001,
                                        "VerificationDate":     "12-09-2013",
                                        "ExpiryDate":           "12-09-2014",
                                        "List99Clearence":      "PASS",
                                        "CheckedById":          123456,
                                        "Position":             "DPHT",
                                        "Evidence":             "Certificate Provided"
                                        }],
                            "MED":  [{  }],
                            "Qual": [{ }],
                            "RED":  [{ }],
                            "RTW":  [{ }]
            }

### Update Employee Checks [PUT]
Update Employee checks for one to multiple contacts


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "EmployeeId":   0001,
                            "ADD":  [{ }],
                            "AGN":  [{ }],
                            "DBS":  [{ }],
                            "GTC":  [{ }],
                            "ID":   [{ }],
                            "List99":   [{
                                        "CheckId":              00001,
                                        "VerificationDate":     "12-09-2013",
                                        "ExpiryDate":           "12-09-2014",
                                        "List99Clearence":      "PASS",
                                        "CheckedById":          123456,
                                        "Position":             "DPHT",
                                        "Evidence":             "Certificate Provided"
                                        }],
                            "MED":  [{  }],
                            "Qual": [{ }],
                            "RED":  [{ }],
                            "RTW":  [{ }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "EmployeeId":   0001,
                            "ADD":  [{ }],
                            "AGN":  [{ }],
                            "DBS":  [{ }],
                            "GTC":  [{ }],
                            "ID":   [{ }],
                            "List99":   [{
                                        "CheckId":              00001,
                                        "VerificationDate":     "12-09-2013",
                                        "ExpiryDate":           "12-09-2014",
                                        "List99Clearence":      "PASS",
                                        "CheckedById":          123456,
                                        "Position":             "DPHT",
                                        "Evidence":             "Certificate Provided"
                                        }],
                            "MED":  [{  }],
                            "Qual": [{ }],
                            "RED":  [{ }],
                            "RTW":  [{ }]
            }



## Employees Contracts [/EmployeeContracts{?Employee}]

Collection of all employee checks for employees within a school

### Retrieve collection of employee contracts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters

    + Employee (optional, int, `12345`) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            {
                "EmployeeId":   00001,
                "StaffCode":    "sc123",
                "Contracts":    [{
                                "ContractId":   0001,    
                                "Type":         "PRM",
                                "Name":         "Main Contract",
                                "StartDate":    "01-09-2013",
                                "EndDate":      "31-08-2015",
                                "PostCode":     "AHT",
                                "PostName":     "Assistant Head",
                                "DailyRate":    False,
                                "Origin":       "OTHEDU",
                                "Destination":  "",                           
                                "Roles":    [{
                                                "RoleId":           0001,
                                                "Role":             "TASS",
                                                "HoursPerWeek":     32.50,
                                                "FTEHours":         32.50,
                                                "WeeksPerYear":     52.14,
                                                "PayrollNumber":    "123456",
                                                "NIRate":           "Contracted In",
                                                "Superannuation":   "Teachers Superannuation",
                                                "CostCentre":       "TEACH (Teaching Staff)",
                                                "LedgerCode":       "A040 (Teachers Salaries)"
                                                "Salaries": [{
                                                            "SalaryId":             00001,
                                                            "EffectiveFrom":        "01-09-2014",
                                                            "EffectiveTo":          "31-08-2015",         "",
                                                            "PayScaleCode":         "",
                                                            "PayScaleName":         "",
                                                            "RegionalSpine":        "",
                                                            "Point":                "",
                                                            "SafeguardedSalary":    true,
                                                            "IncludeInPensionCalc": false,
                                                            "IncludeInNICalc":      true,
                                                            "BasePay":              "45000"
                                                            }],
                                                "Allowance":[{
                                                            "AllowanceId":          0001,
                                                            "EffectiveFrom":        "01-09-2014",
                                                            "EffectiveTo":          "31-08-2015",
                                                            "Category":             "",
                                                            "Amount":               ""
                                                            }],
                                            }],
                                }],
            }
            
            
## Create/Update Employee Contracts [/EmployeeContracts]

### Create Contract [POST]

Create one to many contract records  


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "EmployeeId":   00001,
                "Contracts":    [{
                                    "ContractId":   0,    
                                    "Type":         "PRM",
                                    "Name":         "Main Contract",
                                    "StartDate":    "01-09-2013",
                                    "EndDate":      "31-08-2015",
                                    "PostCode":     "AHT",
                                    "DailyRate":    true,
                                    "Origin":       "OTHEDU",
                                    "Destination":  ""                           
                                }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "EmployeeId":   00001,
                "Contracts":    [{
                                    "ContractId":   1,    
                                    "Type":         "PRM",
                                    "Name":         "Main Contract",
                                    "StartDate":    "01-09-2013",
                                    "EndDate":      "31-08-2015"
                                }]
            }
            
            
### Update Contract [PUT]

Update one to many contract records  


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "EmployeeId":   00001,
                "Contracts":    [{
                                    "ContractId":       1,    
                                    "Type":         "PRM",
                                    "Name":         "Main Contract",
                                    "StartDate":    "01-09-2013",
                                    "EndDate":      "31-08-2015",
                                    "PostCode":     "AHT",
                                    "DailyRate":    true,
                                    "Base Pay":     36588.00,
                                    "Origin":       "OTHEDU",
                                    "Destination":  ""                           
                                }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully"
                "EmployeeId":   00001,
                "Contracts":    [{
                                    "ContractId":     1    
                                    "Type":         "PRM",
                                    "Name":         "Main Contract",
                                    "StartDate":    "01-09-2013",
                                    "EndDate":      "31-08-2015"
                                }]
            }

## Create/Update Employees Contract Roles [/EmployeeContractRoles]

Collection of all employee roles for employee contracts within a school

### Create Roles for employee contracts [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "EmployeeId":       00001,
                "ContractId":       00001,
                "Roles":    [{
                                "Role":             "Teaching Assistant",
                                "HoursPerWeek":     32.50,
                                "FTEHours":         32.50,
                                "WeeksPerYear":     52.14,
                                "PayrollNumber":    "123456",
                                "NIRate":           "Contracted In",
                                "Superannuation":   "Teachers Superannuation",
                                "CostCentre":       "TEACH",
                                "LedgerCode":       "A040"
                            }]
            },
            {
                "employeeId":       00002,
                "contractId":       00002,
                "roles":    [{
                                "roleId":           0,
                                "role":             "Teaching Assistant",
                                "hoursPerWeek":     32.50,
                                "FTEHours":         32.50,
                                "weeksPerYear":     52.14,
                                "payrollNumber":    "123456",
                                "NIRate":           "Contracted In",
                                "superannuation":   "Teachers Superannuation",
                                "costCentre":       "TEACH",
                                "ledgerCode":       "A040"
                            }]
            
            }

+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       00001,
                "contractId":       00001,
                "roles":    [{
                                "status":           true,
                                "details":          "Saved Succesfully",
                                "roleId":           0001,
                                "role":             "Teaching Assistant",

                            }]
            },
            {
                "employeeId":       00002,
                "contractId":       00002,
                "roles":    [{
                                "status":           true,
                                "details":          "Saved Succesfully",
                                "roleId":           0002,
                                "role":             "Teaching Assistant",

                            }]
            }


## Create/Update Employees Salary [/employeeRoleSalary]
Collection of all employee roles for employee contracts within a school

### Create Salaries for Roles for employees [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "salaryId":             0,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScaleCode":             "",
                                        "payScaleName":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "salaryId":             0,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScale":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                                    }]
            
            }
            
            
+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Saved Succesfully",
                                        "salaryId":         1,
                                        "roleSalaryId":     1
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Saved Succesfully",
                                        "salaryId":         2,
                                        "roleSalaryId":     2
                                    }]
            
            }


### Update Salaries for Roles for employees  [PUT]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "salaryId":             1,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScaleCode":             "",
                                        "payScaleName":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "salaryId":             2,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScale":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                                    }]
            
            }
            
            
+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Updated Succesfully",
                                        "salaryId":         1,
                                        "roleSalaryId":     1
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Updated Succesfully",
                                        "salaryId":         2,
                                        "roleSalaryId":     2
                                    }]
            
            }
            
## Employees Qualifications [/employeeQualifications{?employeeId}]
### Retrive a list of employees and their qualifications [GET]

+ Parameters
    + employeeId (optional, int, `1`) ... Contacts with the id

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
           
              {
                    "employeeId":       00001,
                    "staffCode":        "sc123",
                    "qualifications":   [{
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        },
                                        {
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "DMU: Doctor of Music",
                                            "subject1":             "P300: Media studies",
                                            "subject2":             "W300: Music",
                                            "classOfDegree":        "1: First Class honours",
                                            "verified":             true                                        
                                        }]
            
              },
             {
                    "employeeId":       00002,
                    "staffCode":        "ad456",
                    "qualifications":   [{
                                            "qualificationId":      3,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }                
             
             
             
             }



## Create/Update Employees Qualifications [/employeeQualifications]
### Create employee qualifications [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
           
            {
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "qualificationId":      0,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "qualificationId":      0,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }            
            }

+ Response 200 (application/json)

    + Body
    
            {
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",

                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",

                                        }]            
            }
            

### Update employee qualifications [PUT]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",
                                            "subject1":             "A400: Clinical Dentistry",
                                            "subject2":             "B400: Nutrition",
                                            "classOfDegree":        "5: Third Degree honours",
                                            "verified":             true
                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",
                                            "subject1":             "B100: Anatomy, Physiology and Pathology ",
                                            "subject2":             "A400: Clinical Dentistry ",
                                            "classOfDegree":        "2: Upper Second Class honours",
                                            "verified":             true  
                                        }            
            }

+ Response 200 (application/json)

    + Body
    
            {
                    "employeeId":       00001,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      1,
                                            "qualificationCode":    "BEng: BEng",

                                        }]
            },
            {
                    "employeeId":       00002,
                    "qualifications":   [{
                                            "status":           true,
                                            "details":          "Saved Succesfully",
                                            "qualificationId":      2,                                        
                                            "qualificationCode":    "BAG: Bachelor of Agriculture ",

                                        }]            
            }

    
# Group Contacts
Group of all contact-related resources

## Contacts Collection [/contacts/{id}]
Get all or a single contact

Optional Parameter
- Id - Contact Id

+ Parameters
    + id (optional, int, `12345`) ... Contact with the id

    
### Retrieve a collection of contacts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
                "ContactId":            1,
                "ContactCode":          ""'
                "Title":                "Mr",
                "Surname":              "King",
                "Forename":             "Ice",
                "MiddleName":           "",
                "Gender":               "M",
                "Email":                "ice.king@home.com",
                "Language":             "English",
                "Occupation":           "",
                "Nationality":          "GBR",
                "IsMedicalContact":     true,
                "WorkEmail":            "",
                "Employer":             "",
                "TranslatorReqiured":   false,
                "ExPupil":              false,
                "MedicalType":          "",
                "VisaNumber":           "",
                "MemberOfArmedForces":  false,
                "PhoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "smsFlag":  false,
                                            "PhoneId":  1
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  true,
                                            "PhoneId":  2
                                        }],
                "addressDetails":       [{
                                            "country":  "GBR",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire",
                                            "postCode": "DD55 36DD",
                                            "AddressId":1
                                        }]
            },
            {
                "ContactId":            2,
                "title":                "Mr",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "fire.princess@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "smsFlag":  false,
                                            "Phoneid":  3
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "smsFlag":  true,
                                            "PhoneId":  3
                                        }],
                "addressDetails":       [{
                                            "country":  "UGBR",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":2
                                        }]
            }
            
            
## Create/Update Contact Records [/contacts]

### Create Contact [POST]

Create one to many contact records  

Minimum Parameters
- Surname
- Forename
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "ContactCode":          "3447", ...this is user field to match what is returned
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            },
            {
                "ContactCode":          "3448",
                "title":                "Mr",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "fire.princess@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "smsFlag":  false
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            }
    


+ Response 200

    + Body
    
            {
                "contactCode":          "3447",
                "contactId":            000001,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "013332552552",
                                            "phoneId":  00004
                                        },{
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "phoneId":  00005
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00003
                                        }]
            },
            {
                "contactCode":          "3448",
                "contactId":            000002,
                "phoneDetails":         [{
                                            "type":     "Home",
                                            "number":   "01332225225",
                                            "phoneId":  00006
                                        },{
                                            "type":     "Mobile",
                                            "number":   "0777707777",
                                            "phoneId":  00007
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00004
                                        }]
            }


### Update Contact [PUT]

Update one to many contact records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "contactId":            000001,
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "phoneId":  "00004",
                                            "type":     "Home",
                                            "number":   "0133321111111",
                                            "smsFlag":  false
                                        },{
                                             "phoneId":  00005,
                                            "type":     "Mobile",
                                            "number":   "07707707707",
                                            "smsFlag":  false
                                        }],
                "addressDetails":       [{
                                            "AddressId":  "",
                                            "country":  "United Kingdom",
                                            "type":     "Work",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            
                                        }]
            },
            {
                "title":                "Ms",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "updated@emailaddress.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{}],
                "addressDetails":       [{}]
            }
    


+ Response 200

    + Body
    
            [{
                "contactId":            000001,
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            "AddressId":  00007
                                        }]
                "contactId":            000002
            },
            ]


            

# Group Learners

## Learners Collection [/Learners{?status}{?since}]

Collection of all learner-related resources

### Retrieve a collection of learners [GET]

+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`)
    
+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            [{
                "LearnerId":       12345,
                "LearnerCode":     "2013-00132",
                "UPN":             "U1234567890A",
                "ULN":             "1425863727",
                "Surname":         "Doe",
                "Forename":        "Jonny",
                "LegalSurname":    "Doe",
                "LegalForename":   "John",
                "DateOfBirth":     "20-04-2002 00:00:00",
                "Year":            "7",
                "Course":          "KS3",
                "DateOfEntry":     "03-09-2013 00:00:00",
                "Gender":          "M",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Pr",
                "EnrolementStatus":"C",
                "NCYear":          "7",
                "Status":          "Active",
                "PhoneDetails":    [{
                                        "Type":     "H",
                                        "Number":   "015556655",
                                        "SMSFlag":  false,
                                        "PhoneId":  123456
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "AddressDetails":   [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire",
                                            "PostCode": "DD55 36DD",
                                            "AddressId":1234569
                                    }]
            },
            ]

## Learner Record [/learners/{id}]

**Proposed to be removed** 

Optional parameter 'Id' will be included in amended GET Learners method - see PROAPI-32


### Retrieve a learner [GET]

+ Parameters
    + id (required, int, `12345`) ... The unique identifier of the learner

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "learnerId":       12345,
                "learnerCode":     "2013-00132",
                "UPN":             "G999900210101",
                "ULN":             "1234567890",
                "Forename":        "Jonny",
                "Surname":         "Doe",
                "LegalForename":   "John",
                "LegalSurname":    "Doe",
                "DateOfBirth":     "20-04-2002",
                "Year":            "Year 7",
                "Course":          "Key Stage 3",
                "DateOfEntry":     "03-09-2013",
                "Gender":          "Male",
                "RegGroup":        "7L2",
                "Ethnicity":       "AOWB",
                "EthnicitySource": "Providede by the parent",
                "EnrolementStatus":"Current",
                "NCYear":          "Year 7",
                "PhoneDetails":    [{
                                        "type":     "Home",
                                        "number":   "015556655",
                                        "smsFlag":  false
                                    },{
                                        "type":     "Mobile",
                                        "number":   "075556655",
                                        "smsFlag":  true
                                    }],
                "addressDetails":   [{
                                            "country":  "United Kingdom",
                                            "type":     "Home",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                    }],
                "status":           "active"
                
            }


## Create/Update Learner Records [/learners]

### Create Learner [POST]
**Further fields have been added to this method and are now available**

Create one to many learner records  

Mandatory fields:

- Surname, Forename, Learner Code, Date of Birth are mandatory fields
    
- Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory
    
- Phone is not mandatory but if included: Type and Number are mandatory
    
- Contacts are not mandatory but if included: Title, Forename, Surname, Relationship and Gender are mandatory
    
- Language is not mandatory but if included: TypeCode and LangCode are mandatory
    
- SENProvision is not mandatory but if included: ProvisionTypeCode and StartDate are mandatory
    
- SENMajorNeeds is not mandatory but if included: MajorNeedCode and Ranking are mandatory
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "LearnerCode":        "2016-1000",
                "Surname":            "James",
                "Forename":           "Jeff",
                "Status":             "Active",
                "RegGroup":           "6AC",
                "AcademicHouse":      "",
                "DateOfBirth":        "04-08-1998 00:00:00",
                "LegalSurname":       "Sterling",
                "LegalForename":      "Geoffrey",
                "MiddleName":         "James",
                "FormerSurname":      "Silver",
                "EmailAddress":       "a.b@c.co.uk",
                "Gender":             "M",
                "Notes":              "Lorem Ipsum",
                "HomeSalutation":     "Mrs C Sterling",
                "DateOfEntry":        "01-09-2010 00:00:00",
                "Year":               "13",
                "Course":             "KS5",
                "NCYear":             "13",
                "Boarder":            "N",
                "AddressDetails":   [{
                                        "Country":      "GBR",
                                        "Type":         "H",
                                        "Flat":         "",
                                        "Number":       "23",
                                        "Street":       "dfadf",
                                        "Locality":     "Derby",
                                        "Town":         "",
                                        "County":       "",
                                        "PostCode":     "DE21 4FL"
                                    }],
                "PhoneDetails":     [{
                                        "Type":         "H",
                                        "Number":       "01111567891",
                                        "SMSFlag":      false
                                    }],
                "ContactDetails":   [{
                                        "Title":        "Mrs",
                                        "Forename":     "Trillian",
                                        "Surname":      "Beelebrox",
                                        "Relationship": "PAM",
                                        "Gender":       "F",
                                        "WrittenCommunication":     "",
                                        "Priority":                 1,
                                        "ContactPrioritySource":    "",
                                        "EmergencyContactLevel":    "Primary",
                                        "NextOfKin":                false,
                                        "AddressDisclosure":        false,
                                        "AddressTransferred":       false,
                                        "ParentalResponsibility":   true,
                                        "FeePayer":                 false,
                                        "ParentalPortal":           true,
                                        "HomeAddressLink":          true,
                                        "OtherHomeAddressLink":     false,
                                        "SendSMS":                  true
                                    }],
                "SiblingDetails":   [{
                                        "LearnerCode":  "8848"
                                    }],
                "PartTime":           false,
                "EnrolementStatus":   "C",
                "UPN":                "",
                "FormerUPN":          "",
                "ULN":                "",
                "GandT":              true,
                "MedicalFlag":        true,
                "YSSAIndicator":      "SNR",
                "Nationality":        "GBR",
                "Ethnicity":          "WBRI",
                "EthnicitySource":    "P",
                "ServiceChild":       "N",
                "ServiceChildSource": "P",
                "TopUpFunding":       true,
                "FundedHours":        0.0,
                "HoursAtSetting":     0.0,
                "UnitContactTime":    0.0,
                "SchoolLunchTaken":   true,
                "MealType":           "CSM",
                "AsylumSeeker":       false,
                "Religion":           "HI",
                "DisabilityDetails":   [{
                                            "Disability":  "CON"
                                        }],
                "LanguageDetails":  [{
                                        "TypeCode":             "F",
                                        "LanguageCode":         "ENG"
                                    }],
                "SENProvisionDetails":  [{
                                            "ProvisionTypeCode":    "E",
                                            "StartDate":            "19/09/2014"
                                        }],
                "SENMajorNeedsDetails": [{
                                            "MajorNeedCode":        "SLD",
                                            "Ranking":              1
                                        }]
            },
            {
                "LearnerCode":        "2016-0005",
                "Surname":            "Flower",
                "Forename":           "Lily",
                "Status":             "Active",
                "RegGroup":           "H3",
                "AcademicHouse":      "",
                "DateOfBirth":        "04-08-1998 00:00:00",
                "LegalSurname":       "Petal",
                "LegalForename":      "Lillian",
                "MiddleName":         "Nectar",
                "FormerSurname":      "",
                "EmailAddress":       "a.b@c.co.uk",
                "Gender":             "M",
                "Notes":              "Lorem Ipsum",
                "HomeSalutation":     "Mrs C Petal",
                "DateOfEntry":        "01-09-2010 00:00:00",
                "Year":               "13",
                "Course":             "KS5",
                "NCYear":             "13",
                "Boarder":            "N",
                "AddressDetails":   [{
                                        "Country":      "GBR",
                                        "Type":         "H",
                                        "Flat":         "",
                                        "Number":       "23",
                                        "Street":       "Orange Blossom Road",
                                        "Locality":     "Littleover",
                                        "Town":         "Derby",
                                        "County":       "Derbyshire",
                                        "PostCode":     "DE21 4FL"
                                    }],
                "PhoneDetails":     [{
                                        "Type":         "H",
                                        "Number":       "079821364646",
                                        "SMSFlag":      true
                                    }],
                "ContactDetails":   [{
                                        "Title":        "Mrs",
                                        "Forename":     "Trillian",
                                        "Surname":      "Beelebrox",
                                        "Relationship": "PAM",
                                        "Gender":       "F",
                                        "WrittenCommunication":     "",
                                        "Priority":                 1,
                                        "ContactPrioritySource":    "",
                                        "EmergencyContactLevel":    "Primary",
                                        "NextOfKin":                false,
                                        "AddressDisclosure":        false,
                                        "AddressTransferred":       false,
                                        "ParentalResponsibility":   true,
                                        "FeePayer":                 false,
                                        "ParentalPortal":           true,
                                        "HomeAddressLink":          true,
                                        "OtherHomeAddressLink":     false,
                                        "SendSMS":                  true
                                    }],
                "SiblingDetails":   [{
                                        "LearnerCode":  "8848"
                                    }],
                "PartTime":           false,
                "EnrolementStatus":   "C",
                "UPN":                "",
                "FormerUPN":          "",
                "ULN":                "",
                "GandT":              true,
                "MedicalFlag":        true,
                "YSSAIndicator":      "SNR",
                "Nationality":        "GBR",
                "Ethnicity":          "WBRI",
                "EthnicitySource":    "P",
                "ServiceChild":       "N",
                "ServiceChildSource": "P",
                "TopUpFunding":       true,
                "FundedHours":        0.0,
                "HoursAtSetting":     0.0,
                "UnitContactTime":    0.0,
                "SchoolLunchTaken":   true,
                "MealType":           "CSM",
                "AsylumSeeker":       false,
                "Religion":           "HI",
                "DisabilityDetails":   [{
                                            "Disability":  "CON"
                                        }],
                "LanguageDetails":  [{
                                        "TypeCode":             "F",
                                        "LanguageCode":         "ENG"
                                    }]
            }

+ Response 200

    + Body
    
            {
                    "Status": true,
                    "Details": "Saved successfully",
                    "LearnerId": 453758,
                    "LearnerCode": "2016-1000",
                    "PhoneDetails": [
                      {
                        "PhoneId": 2200855
                      }
                    ],
                    "AddressDetails": [
                      {
                        "AddressId": 1353316
                      }
                    ],
                    "ContactDetails": [
                      {
                        "ContactId": 968989,
                        "LearnerContactRelationshipId": 2054
                      }
                    ],
                    "SiblingDetails": [
                      {
                        "LearnerId": 443779
                      }
                    ],
                    "DisabilityDetails": [
                      {
                        "DisabilityTypeId": 2648
                      }
                    ],
                    "LanguageDetails": [
                      {
                        "LanguageId": 448983
                      }
                    ],
                    "SENProvisionDetails": [
                      {
                        "ProvisionId": 852001
                      }
                    ],
                    "SENMajorNeedsDetails": [
                      {
                        "MajorNeedId": 115706
                      }
                    ]
                  },
                  {
                    "Status": true,
                    "Details": "Saved successfully",
                    "LearnerId": 453759,
                    "LearnerCode": "2016-0005",
                    "PhoneDetails": [
                      {
                        "PhoneId": 2200856
                      }
                    ],
                    "AddressDetails": [
                      {
                        "AddressId": 1353317
                      }
                    ],
                    "ContactDetails": [
                      {
                        "ContactId": 968990,
                        "LearnerContactRelationshipId": 2054
                      }
                    ],
                    "SiblingDetails": [
                      {
                        "LearnerId": 443779
                      }
                    ],
                    "DisabilityDetails": [
                      {
                        "DisabilityTypeId": 2648
                      }
                    ],
                    "LanguageDetails": [
                      {
                        "LanguageId": 448984
                      }
                    ],
                    "SENProvisionDetails": [],
                    "SENMajorNeedsDetails": []
                  }
            
            
### Update Learner [PUT]
Update one to many learner records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "LearnerId":        443757,
                "LearnerCode":      "7899",
                "UPN":              "D502400200014",
                "ULN":              "2712059815",
                "Surname":          "Gillis",
                "Forename":         "Marc",
                "LegalSurname":     "Gillis",
                "LegalForename":    "Marc",
                "DateOfBirth":      "03-03-1998 00:00:00",
                "Year":             "13",
                "Course":           "KS5",
                "DateOfEntry":      "01-09-2010 00:00:00",
                "Gender":           "M",
                "RegGroup":         "6AC",
                "Ethnicity":        "WBRI",
                "EthnicitySource":  "P",
                "EnrolementStatus": "C",
                "NCYear":           "13",
                "Status":           "Active",
                "PhoneDetails": [
                                  {
                                    "Type": "H",
                                    "Number": "01332660400",
                                    "SMSFlag": false,
                                    "PhoneId": 2165092
                                  }
                                ],
                "AddressDetails": [
                                    {
                                        "Country": "GBR",
                                        "Type": "H",
                                        "Flat": "",
                                        "Number": "153",
                                        "Street": "Addis Ababa Avenue",
                                        "Locality": "Derby",
                                        "Town": "",
                                        "County": "",
                                        "PostCode": "DE36 3PW",
                                        "AddressId": 1322229
                                      }
                                    ]
            }
            
                
+ Response 200

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "LearnerId":    443757,
                "LearnerCode":  "7899",
                "PhoneDetails": [
                                  {
                                    "Type": "H",
                                    "Number": "01332010101",
                                    "PhoneId": 2148939
                                  }
                                ],
                "AddressDetails":   [
                                      {
                                        "Country": "GBR",
                                        "Type": "Home",
                                        "Flat": "",
                                        "Number": "21",
                                        "Street": "Rockingham Close",
                                        "Locality": "Derby",
                                        "Town": "",
                                        "County": "",
                                        "PostCode": "DE36 3PW",
                                        "AddressId": 1322229
                                      }
                                    ],
                "ContactDetails": [
                                    {
                                        "ContactId": 950018,
                                        "LearnerContactRelId": 2054
                                    },
                                    null,
                                    null,
                                    null,
                                    null
                                    ]
            }


## Learner Contacts [/LearnerContacts{?since}{?status}{?responsibility}{?priority}]
### Retrieve a Contacts associated to a learner [GET]
+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed
    + responsibility (optional, boolean, `true`) ... Filter Contacts returned to contacts with Parental Responsibilty
    + priority (optional, int, `1`) ... Filter Contacts returned to contacts with priority of that passed


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body

            {
                
                "learnerCode":     "2013-00132",
                "learnerId":       0001,
                "UPN":             "G999900210101",
                "contacts":         [{
                                        "learnerContactRelId":      000003
                                        "contactId":                00001,
                                        "forename":                 "",
                                        "surename":                 "",
                                        "relationship":             "Father",
                                        "writtenCommunication":     "",
                                        "priority":                 1,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "Primary",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    },
                                    {
                                        "learnerContactRelId":      000004
                                        "contactId":                00006,
                                        "forename":                 "",
                                        "surename":                 "",
                                        "relationship":             "Mother",
                                        "writtenCommunication":     "",
                                        "priority":                 2,
                                        "contactPrioritySource":    "",
                                        "emergencyContactLevel":    "",
                                        "nextOfKin":                false,
                                        "addressDisclosure":        false,
                                        "addressTransferred":       false,
                                        "parentalResponsibility":   true,
                                        "feePayer":                 false,
                                        "parentalPortal":           true,
                                        "homeAddressLink":          true,
                                        "otherHomeAddressLink":     false,
                                        "sendSMS":                  true
                                    }]
            }


            
## Learner Health Details [/LearnerHealth{?since}]

### Retrieve a learner Health Details [GET]

+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body 
            
            {
                "LearnerCode":          "2013-00132",
                "LearnerId":             000001,
                "Allergies":            [{
                                            "Allergy": "EGG"
                                        },
                                        {
                                            "Allergy": "MILK"
                                        }],
                "FoodPreferences":      [{
                                            "FoodPreference": "DAIFR"
                                        }],
                "DietaryNotes":         "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                "Disabilities":         [{,
                                            "Disability": "NCOL"
                                        }],
                "DisabilityNotes":      "Lorem ipsum dolor sit amet",
                "MedicalConditions":    [{
                                            "Condition":    "ASTH",
                                            "InfoDate":     "2016-01-18",
                                            "Notes":        "Asthma Attack"
                                        }],
                "MedicalEvents":        [{
                                            "EventType":        "ACC",
                                            "FromDate":         "2016-01-18",
                                            "ToDate":           "2016-01-18",
                                            "IncidentLocation": "Office",
                                            "Notes":            "Lorem ipsum dolor sit amet",
                                            "MedicalEventId":    408569
                                        }]
            }
            
## Create/Update Learner Health Details [/LearnerHealth]

### Create/Update Learner Health [PUT]

Create and update one to many learner heatlh records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "LearnerId": 443790,
                "LearnerCode": "9196",
                "Allergies": [{
                                "Allergy": "EGG"
                              },{
                                "Allergy": "MILK"
                              },{
                                "Allergy": "PNUT"
                              }],
                "FoodPreferences":  [{
                                        "FoodPreference": "DAIFR"
                                      },{
                                        "FoodPreference": "GLFR"
                                    }],
                "DietaryNotes": "Lorem ipsum",
                "Disabilities": [{
                                    "Disability": "NCOL"
                                }],
                "DisabilityNotes": "Lorem ipsum",
                "MedicalConditions": [{
                                        "Condition": "ASTH",
                                        "InfoDate": "2016-01-18",
                                        "Notes": "Lorem ipsum"
                                      },{
                                        "Condition": "TRAV",
                                        "InfoDate": "2016-01-18",
                                        "Notes": "Ipsum lorem"
                                      }],
                "MedicalEvents":    [{
                                        "EventType": "ACC",
                                        "FromDate": "2016-01-18",
                                        "ToDate": "2016-01-18",
                                        "IncidentLocation": "GYM",
                                        "Notes": ""
                                    }]
            }
            

+ Response 200

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "LearnerId": 443790,
                "LearnerCode": "9196",
                "MedicalConditions": [{
                                        "Condition": "ASTH",
                                        "InfoDate": "18-01-2016 00:00:00",
                                        "Notes": null,
                                        "ConditionId": 225793
                                      },{
                                        "Condition": "TRAV",
                                        "InfoDate": "18-01-2016 00:00:00",
                                        "Notes": null,
                                        "ConditionId": 225800
                                      },{
                                        "Condition": "TRAV",
                                        "InfoDate": "18-01-2016 00:00:00",
                                        "Notes": "Ipsum lorem",
                                        "ConditionId": 225800
                                      }],
                "MedicalEvents":[{
                                    "EventType": "ACC",
                                    "FromDate": "18-01-2016 00:00:00",
                                    "ToDate": "18-01-2016 00:00:00",
                                    "IncidentLocation": "GYM",
                                    "Notes": null,
                                    "MedicalEventId": 117617
                                }]
            }
            

## Create/Update Learner Attendance [/LearnerRollCallAttendance]

### Create Learner Roll Call Attendance [POST]

Create and amend Attendance for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
           
            [{
                "LearnerCode":          "2013-00001",
                "AttendanceStartDate":  "2016-03-21",
                "RollCallSessionStart": "AM",
                "AttendanceString":     "////IINB"
            },
            {
                "LearnerCode":          "2013-00002",
                "AttendanceStartDate":  "16-06-2014",
                "RollCallSessionStart": "PM",
                "AttendanceString":     "B"
            }
            }]

+ Response 200

    + Body
    
            {
                "LearnerCode":          "2013-00001",
                "Status":               true,
                "Details":              "Saved successfully"
            },
            {
                "LearnerCode":          "2013-00002",
                "Status":               true,
                "Details":              "Saved successfully"
            }
        


## Create/Update Learner Attendance [/LearnerLessonAttendanceByPeriod]

### Create Learner Lesson Attendance By Period [POST]
Create Lesson Attendance for one to many learners using Timetable Period

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
           
            [{
                "LearnerCode":          "2013-00001",
                "Iteration":            1,
                "PeriodId":             1,
                "AttendanceCode":       "/"
            },
            {
                "LearnerCode":          "2013-00002",
                "Iteration":            1,
                "PeriodId":             1,
                "AttendanceCode":       "N"
            }
            
            }]

+ Response 200

    + Body
    
            {
                 "LearnerCode":         "2013-00001",
                 "Status":              "Success"
            },
            {
                "LearnerCode":          "2013-00002",
                "Status":               "Success"
                
            }


## Create/Update Learner Attendance [/LearnerLessonAttendanceByLessonTime]

### Create Learner Lesson Attendance by Time [POST]

Create Attendance for one to many learners using date and time of lesson

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
           
            [{
                "LearnerCode":      "7791",
                "Date":             "16-03-2016",
                "StartTime":        "09:15",
                "FinishTime":       "10:15",
                "AttendanceCode":   "/"
            }]

+ Response 200

    + Body
    
            [
              {
                "LearnerCode": "7791",
                "Status": true,
                "Details": "Saved successfully"
              }
            ]


## Learner Exclusions [/LearnerExclusions{?StartDate}{?EndDate}]

### Retrieve a learner Exclusion Details [GET]

+ Parameters
    + StartDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    + EndDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body 
            
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":       0001,
                "Exclusions":       [{
                                        "ExclusionId":  0001,
                                        "Category":     "FIXD",
                                        "Reason":       "",
                                        "StartDate":    "",
                                        "EndDate":      "",
                                        "StartSession": "",
                                        "EndSession":   "",
                                        "Notes":        "",
                                        "TotalDays":    5,
                                        "TotalSessions":10,
                                        "LAC":          false,
                                        "HeadNotified": "",
                                        "GovMeeting":   "",
                                        "ProvisionStartDate":   "",
                                        "ProvisionDetails":     "",
                                        "Appeal":           true,
                                        "AppealDate":       "",
                                        "AppealCutOff":     "",
                                        "ExclusionHearing": "",
                                        "Outcome":          "",
                                        "ReintregationMeetingDate": "",
                                        "ReintregationNotes":      "",
                                        "ReinstatementDate":        "",
                                        "ReinstatementNotes":       ""
                                    }]
            }
            
                
## Create/Update Learner Exclusions [/learnerExclusions]

### Create Learner Exclusions [POST]

Create Exclusions for one to many learners

+ Mandatory fields
    + LearnerId
    + Exclusion Category
    + Exclusion Reason
    + StartDate
    + If Exclusion Category = FXD or LNCH: EndDate, TotalDays, Total Sessions
    + If Exclusion Category = FXD: StartSession, EndSession

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            {
                "LearnerId":    443768,
                "LearnerCode":  "7791",
                "Exclusions":   [{
                                    "Category": "FIXD",
                                    "Reason": "VA",
                                    "StartDate": "2015-10-20",
                                    "EndDate": "2015-10-20",
                                    "StartSession": "AM",
                                    "EndSession": "AM",
                                    "Notes": "Verbal abuse towards a member of staff. Refusing to go to buddy teacher",
                                    "TotalDays": null,
                                    "TotalSessions": 2,
                                    "LAC": true,
                                    "HeadNotified": null,
                                    "GovMeeting": null,
                                    "ProvisionStartDate": null,
                                    "ProvisionDetails": null,
                                    "Appeal": false,
                                    "AppealDate": null,
                                    "AppealCutOff": null,
                                    "ExclusionHearing": null,
                                    "Outcome": "E",
                                    "ReintegrationMeetingDate": null,
                                    "ReintegrationNotes": null,
                                    "ReinstatementDate": null,
                                    "ReinstatementNotes": ""
                                }]
            }

+ Response 200

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "LearnerId": 443768,
                "LearnerCode": "8382",
                "Exclusions":   [
                                "Status": true,
                                "Details": "Saved successfully",
                                "ExclusionId": 65775
                                }]
            }


### Update Learner Exclusions [PUT]

Update Exclusions for one to many learners


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            {
                "LearnerId":    443768,
                "LearnerCode":  "7791",
                "Exclusions":   [{
                                    "ExclusionId":  63445,
                                    "Category":     "FIXD",
                                    "Reason":       "VA",
                                    "StartDate":    "2015-10-20",
                                    "EndDate":      "2015-10-21",
                                    "StartSession": "AM",
                                    "EndSession":   "AM",
                                    "Notes":        "Updated",
                                    "TotalDays":    1,
                                    "TotalSessions":2,
                                    "LAC":          true,
                                    "HeadNotified": null,
                                    "GovMeeting":   null,
                                    "ProvisionStartDate":   null,
                                    "ProvisionDetails":     null,
                                    "Appeal":       false,
                                    "AppealDate":   null,
                                    "AppealCutOff": null,
                                    "ExclusionHearing": null,
                                    "Outcome":      "E",
                                    "ReintegrationMeetingDate": null,
                                    "ReintegrationNotes":       null,
                                    "ReinstatementDate":        null,
                                    "ReinstatementNotes":       ""
                                }]
            }
            
            
+ Response 200

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "LearnerId": 443768,
                "LearnerCode": "8382",
                "Exclusions": [{
                                "Status": true,
                                "Details": "Saved successfully",
                                "ExclusionId": 63445
                              }]
            }


## Learner SEN Provisions [/learnerSENProvisions{?status}]

### Retrieve a learner SEN Provision Details [GET]
+ Parameters
    + status (optional, string, `Active`) ... The staus of Learner e.g. Active, Draft, Left

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionId":          00001
                                    "provisionTypeCode":    "E",
                                    "provisionTypeName":    "Education, Health and Care Plan",
                                    "startDate":            "19/09/2014",
                                    "reviewDate":           "20/09/2014",
                                    "endDate":              "20/09/2014"
                                },
                                {
                                    "provisionId":          00002
                                    "provisionTypeCode":    "P",
                                    "provisionTypeName":    "School Action Plus",
                                    "startDate":            "21/09/2014",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
                },
                {
                "learnerCode":      "2013-00002",
                "learnerId":       0002,
                "provisions":   [{
                                    "provisionId":          00003
                                    "provisionTypeCode":    "P",
                                    "provisionTypeName":    "School Action Plus",
                                    "startDate":            "21/09/2014",
                                    "reviewDate":           "01/01/2015",
                                    "endDate":              "30/08/2015"
                                }]
                }
                ]
                
                
## Create/Update Learner SEN Provisions [/learnerSENProvisions]

### Create Learner SEN Provisions [POST]

Create SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionTypeCode":    "A",
                                    "provisionTypeName":    "School Action",
                                    "startDate":            "2015-11-25",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }
              
+ Response 200

    + Body
    
            {
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "status":           true,
                "details":          "Saved successfully",
                "provisions":   [{
                                    "status":               true,
                                    "details":              "Saved successfully",
                                    "provisionId":          00001
                                }]
            }

### Update Learner SEN Provisions [PUT]

Update SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":       0001,
                "provisions":   [{
                                    "provisionId":          0001
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }]
              
+ Response 200

    + Body
    
            {
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "status":           true,
                "details":          "",
                "provisions":   [{
                                    "status":               true,
                                    "details":              ""
                                    "provisionId":          00001
                                    "provisionTypeCode":    "",
                                    "provisionTypeName":    "",
                                    "startDate":            "",
                                    "reviewDate":           "",
                                    "endDate":              ""
                                }]
            }


## Learner SEN Major Needs [/learnerSENMajorNeeds{?status}]

### Retrieve a learner SEN Major Need Details [GET]

+ Parameters
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "leanerMajorNeedId":          00001
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            1
                                }]
            }


## Create/Update Learner SEN Major Needs [/learnerSENMajorNeeds]

### Create Learner SEN Major Needs [POST]

Create SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "majorNeedCode":        "SPLD",
                                    "majorNeedDescription": "Specific Learning Difficulty ",
                                    "ranking":              1
                                },{
                                    "MajorNeedCode":        "SEMH",
                                    "MajorNeedDescription": "Social, Emotional and Mental Health",
                                    "Ranking":              2
                                }
            }]


+ Response 200 (application/json)

    + Body 
            
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "leanerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            1
                                }]
            }
            

### Update Learner SEN Major Needs [PUT]

Create SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "learnerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            2
                                }]
            
            
            
            }]

+ Response 200 (application/json)

    + Body 
            
            {
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "majorNeeds":   [{
                                    "learnerMajorNeedId":          00005
                                    "majorNeedCode":        "SLD",
                                    "majorNeedDescription": "Severe Learning Difficulty ",
                                    "ranking":            2
                                }]
            }


## Learner Siblings [/learnerSiblings{?learnerId}]

+ Parameters
    + learnerId (optional, int, `00001`) ... Return siblings of a learner

### Return a list of siblings associated to one of more learners [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "learnerCode":      "2013-00001",
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerCode":      "2013-00002",
                                    "learnerId":        0002
                                },
                                {
                                    "learnerCode":      "2013-00003",
                                    "learnerId":        0003
                                
                                }]
            }]
            
## Create/Update Learner Sibling Association [/learnerSiblings]
### Create Learner Sibling Association [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                
                                }]
            
            }]
            
            

+ Response 200 (application/json)

    + Body 
            
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                
                                }]
            
            }]


### Update Learner Sibling Association [PUT]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
          
            [{
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                
                                }]
            
            }]
            
            

+ Response 200 (application/json)

    + Body 
            
            {
                "learnerId":        0001,
                "siblings":   [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                
                                }]
            
            }




# Group Groups
Group of all Group-related resources

## Groups Collection [/Groups{?GroupStartDate}{?GroupEndDate}{?Type}{?Since}]

+ Parameters
    + GroupStartDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a start date on or after date
    + GroupEndDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a end date on or before date
    + Type (optional, string, `TeachingGroup`) ... Type of Group: TeachingGroup, ReigstrationGroup, AdhocGroup, AcademicHouseGroup
    + Since (optional, dateTime, `01-04-2014T18:00:00`) ... Groups modified since date provided

    
### Retrieve a collection of Groups [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "GroupCode":    "A1",
                "Course":       "Vertical Groups",
                "DateFrom":     "30-08-2015 00:00:00",
                "DateTo":       "27-08-2016 00:00:00",
                "employeeId":   [
                                  {
                                    "StaffCode": "104006",
                                    "EmployeeId": "DO"
                                  }
                                ],
                "GroupId":      "1044575",
                "GroupName":    "Anvil 1",
                "Size":         "3",
                "SubjectCode":  "",
                "SubjectName":  "",
                "Type":         "AcademicHouseGroup",
                "Year":         "M"
                },{
                "GroupCode":    "10EN4b",
                "Course":       "Key Stage 4",
                "DateFrom":         "30-08-2015 00:00:00",
                "DateTo":       "27-08-2016 00:00:00",
                "employeeId":   [
                                  {
                                    "StaffCode": "104041",
                                    "EmployeeId": "VG"
                                  }
                                ],
                "GroupId":      "1044313",
                "GroupName":    "10EN4b",
                "Size":         "2",
                "SubjectCode":  "ENLIT",
                "SubjectName":  "English Literature",
                "Type":         "TeachingGroup",
                "Year":         "10"
                },{
                "GroupCode":    "SIX",
                "Course":       "",
                "DateFrom":     "30-08-2015 00:00:00",
                "DateTo":       "31-08-2016 00:00:00",
                "employeeId":   [
                                  {
                                    "StaffCode": "103973",
                                    "EmployeeId": "KF"
                                  }
                                ],
                "GroupId":      "1044597",
                "GroupName":    "6th Form",
                "Size":         "9",
                "SubjectCode":  "",
                "SubjectName":  "",
                "Type":         "RegistrationGroup",
                "Year":         ""
                },{
                "GroupCode":    "Ski Trip",
                "Course":       "",
                "DateFrom":     "01-04-2016 00:00:00",
                "DateTo":       "27-05-2016 00:00:00",
                "employeeId":   [
                                  {
                                    "StaffCode": "103995",
                                    "EmployeeId": "ET"
                                  }
                                ],
                "GroupId":      "1074942",
                "GroupName":    "Ski Trip",
                "Size":         "30",
                "SubjectCode":  "",
                "SubjectName":  "",
                "Type":         "AdhocGroup",
                "Year":         ""
              }
              
  
## Create/Update Group [/groups]


### Create Group [POST]

Create one or many groups
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "groupCode":    "9A",
                "course":       "KS4",
                "dateFrom":     "01-09-2015 00:00:00",
                "dateTo":       "30-08-2016 00:00:00",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "Name":         "9A",
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "10"
            },
            {
                "groupCode":    "10SC/1",
                "course":       "Key Stage 4",
                "dateFrom":     "01-09-2015 00:00:00",
                "dateTo":       "30-08-2016 00:00:00",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "Name":         "10 Science 1",
                "subjectCode":  "SC",
                "subjectName":  "Science",
                "type":         "TeachingGroup",
                "Year":         "10"
            }


+ Response 200
    + Body
    
            {
                "Details":      "Saved successfully",
                "Status":       "True",
                "groupId":      000001,
                "groupCode":    "9B"
             },
            {
                "Details":      "Saved successfully",
                "Status":       "True",
                "groupId":      000002,
                "groupCode":    "10SC/1"
            }


### Update Group [PUT]
Update one or many groups
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
             [{
                "groupId":      000001,
                "groupCode":    "9B",
                "course":       "Key Stage 4",
                "dateFrom":     "",
                "dateTo":       "",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   00001},
                                {
                                    "employeeId":           54321,
                                    "staffCode":             "JDo"
                                }],
                "name":         "9A",
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "9"
            }]


+ Response 200
    + Body
    
            {
                "status":       true,
                "details":      "Saved Successfully"
                "groupId":      000001,
                "groupCode":    "9B"
             }


## Group Association [/groupAssociation/{?groupId}{?since}{?groupStartDate}{?groupEndDate}]

+ Parameters
    + groupId (optional, number, `12345`) ... The unique identifier of a Learner Group
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Optional filter to retrieve all changes since the date time specified.
    + groupStartDate (optional, dateTime, `01-04-2014`) ... Optional filter to retrieve all groups with a start date after specified date
    + groupEndDate (optional, dateTime, `01-04-2014`) ... Optional filter to retrieve all groups with an end date before specified date.

### Retrieve Learner Group Association [GET]


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]


+ Response 200 (application/json)

    + Body
    
            {
                    "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    2,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            },
            {
                    "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            }
            
## Create/Update Group Association [/groupAssociation]


### Create Group Association [POST]
Create Group Association for one to many Learners and Groups

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                    "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]
            },
            {
                   "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]

            }


+ Response 200 (application/json)

    + Body
    
            {
                   "GroupId":       1,
                    "status":       true,
                    "details":      "Saved successfully",
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1

                                },
                                {
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    2


                                }]
            },
            {
                    "groupId":      2,
                    "status":       true,
                    "details":      "Saved successfully",                  
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3

                                },
                                {
                                        "status":       true,
                                        "details":      "Saved successfully",                                
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4

                                }]            
        
             }

### Update Group Association [PUT]
Update Group Association for one to many Learners and Groups
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
            
    + Body
    
            {
                    "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1,
                                        "startDate":                "10-09-2014",
                                        "endDate":                  "30-08-2015"
                                }]
            },
            {
                    "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"

                                }]

            }]


+ Response 200 (application/json)

    + Body
    
            {
                    "groupId":      1,
                    "status":       true,
                    "details":      "Saved successfully",
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1

                                }]
            },
            {
                    "groupId":      2,
                    "status":       "success",
                    "details":      "Action Successful",see                   
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3

                                },
                                {
                                        "status":       true,
                                        "details":      "Saved successfully",                                
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4

                                }]            
        
             }

# Group Academic Data
Group of all Academic Resources

## AcademicYear [/academicYear/{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Year

### Retrieve AcadmicYear [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "AcademicYearId":   1
                "Name":             "Academic Year 2014/2015",
                "StartDate":        "01-09-2014",
                "EndDate":          "31-08-2015"
                
             },
            {
                "AcademicYearId":   2
                "Name":             "Academic Year 2013/2014",
                "StartDate":        "01/09/2013",
                "EndDate":          "31/08/2014"
                
            }


## Create/Update Academic Years [/academicYear]

### Create Academic Year [POST]
Create one to many academic years

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            [{
                "name":             "Academic Year 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015"
                
             },
            {
                "name":             "Academic Year 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "name":             "Academic Year 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015",
                "Status":           "Saved successfully"
                
             },
            {
                "academicYearId":   2
                "name":             "Academic Year 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                "Status":           "Saved successfully"
                
            }


### Update Academic Year [PUT]

Update one to many academic years

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            [{
                "academicYearId":   1
                "name":             "AC 2014/2015",
                "startDate":        "01/09/2014",
                "endDate":          "31/08/2015"
                
             },
            {
                "academicYearId":   32132
                "name":             "AC 2013/2014",
                "startDate":        "01/09/2013",
                "endDate":          "31/08/2014"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "status":           true
                "details":          "Saved successfully"
                
             },
            {
                "academicYearId":   32132
                "status":           true
                "details":          "Saved successfully"
                
            }


## Academic Terms [/academicTerms/{?id}{?AcYearId}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Term
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve AcadmicTerms [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }

## Create/Update Academic Terms [/academicTerms]

### Create Academic Term [POST]

Create one to many academic terms

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "academicYearId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
               "academicYearId":   1
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "academicYearId":   1,
                "academicTermId":   1,
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }


### Update Academic Term [PUT]

Update one to many academic terms

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            [{
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "05/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
               "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1
                "academicTermId":   1
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1
                "academicTermId":   2
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }
            

## Term Breaks [/termBreaks/{?AcYearId}{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Term Break
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Term Breaks [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)
    + Body
    
            [{
                "academicYearId":   1
                "TermBreakId":      1
                "name":             "Spring Half Term",
                "startDate":        "2014-04-25",
                "endDate":          "2014-06-01"
                
             },
            {
                "academicYearId":   1
                "TermBreakId":      2
                "name":             "Autumn Half Term",
                "startDate":        "2013-10-26",
                "endDate":          "2013-11-01"
                
            }]


## Create/Update Term Breaks [/termBreaks]


### Create Term Breaks [POST]


Create one to many terms breaks

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "AcademicYearId":   1
                "Name":            "Spring Half Term",
                "startDate":        "2014-05-25",
                "endDate":          "2014-06-01"
                
             },
            {
                "AcademicYearId":   1
                "name":             "Autumn Half Term",
                "startDate":        "2013-10-26",
                "endDate":          "2013-11-02"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      1
                "name":             "Spring Half Term",
                "startDate":        "25/05/2014",
                "endDate":          "01/06/2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      2
                "name":             "Autumn Half Term",
                "startDate":        "26/10/2013",
                "endDate":          "02/11/2013"
                
            }


### Update Term Breaks [PUT]

Update one to many terms breaks

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "AcademicYearId":   1
                "TermBreakId":      1
                "Name":             "Spring Half Term",
                "StartDate":        "2014-05-25",
                "EndDate":          "2014-06-01"
                
             },
            {
               "TermBreakId":   2
                 "name":             "Autumn Half Term",
                "startDate":        "2013-10-26",
                "endDate":          "2013-11-02"
                
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      1
                "name":             "Spring Half Term",
                "startDate":        "25-05-2014",
                "endDate":          "01-06-2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      2
                 "name":             "Autumn Half Term",
                "startDate":        "26-10-2013",
                "endDate":          "02-11-2013"
                
            }

## Week Structure [/weekStructure/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve WeekStructure [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "NWD"
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "FWD"
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    " Half Working Day - AM"
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - PM"
                
            }

## ** Proposed ** Update Week Structure [/weekStructure]

### Set Week Structure [PUT]
Set one to many days of a Week Structure

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            {
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "Non-Working Day"
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "Full Working Day"
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    "Full Working Day"
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - AM"
                
            }
            
+ Response 200 (application/json)

    + Body
        
            {
                "AcYearId":             1
                "name":                 "Sunday",
                "workingNonWorking":    "Non-Working Day",
                "status":               true
             },
            {
                "AcYearId":             1
                "name":                 "Monday",
                "workingNonWorking":    "Full Working Day",
                "status":               true
                
            },
            {
                "AcYearId":             1
                "name":                 "Tuesday",
                "workingNonWorking":    "Full Working Day",
                "status":               true
                
            },
            {
                "AcYearId":             1
                "name":                 "Wednesday",
                "workingNonWorking":    "Half Working Day - AM",
                "status":               true
            }
            

## Academic Calendar Events [/academicCalendarEvents/{?AcYearId}{?id}]

Optional parameters are:

- AcYearId - Academic Year Id
- Id - Calendar Event Id

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Calendar Event
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Calendar Events [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
            
            {
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "IN",
                "startDate":            "2014-09-02",
                "endDate":              "2014-09-02",
                "fullHalfDay":          "FD"
                "calendarEventId":      0001
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "#",
                "startDate":            "2014-09-03",
                "endDate":              "2014-09-03",
                "fullHalfDay":          "HDA"
                "calendarEventId":      0002
            }


## Create/Update Academic Calendar Events [/academicCalendarEvents]


### Create Academic Calendar Events [POST]
Create one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            

    + Body
    
            {
                "AcYearId":             1,
                "Name":                 "Half day pm",
                "Category":             "IN",
                "StartDate":            "2016-10-03",
                "EndDate":              "2016-10-03",
                "FullHalfDay":          "HDP"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "O~",
                "StartDate":            "2016-09-05",
                "EndDate":              "2016-09-05",
                "FullHalfDay":          "FD"
            }
            
    
+ Response 200 (application/json)
    
    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "name":                 "Inset Day",
                "startDate":            "02-09-2014",
                "endDate":              "02-09-2014",
                "calendarEventId":      0003
            },
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "name":                 "Inset Day",
                "startDate":            "20-09-2014",
                "endDate":              "20-09-2014",
                "calendarEventId":      0004
            }

### Update Academic Calendar Events [PUT]
Update one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            [{
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "fullHalfDay":          "Full Day"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "Only staff should attend",
                "startDate":            03-09-2014,
                "endDate":              03-09-2014,
                "fullHalfDay":          "Half Day AM"
            }]
            
    
+ Response 200 (application/json)
    
    + Body
        
            [{
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            },
            {
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            }]

## Courses [/courses/{?AcYearId}]

Optional Parameters
- AcYearId - Academic Year Id

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Courses  [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
               "acYearId":          1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001
            },
            {
                "acYearId":         1,
                "courseCode":       "KS4",
                "courseName":       "Key Stage 4",
                "courseId":         0002

            }


## CourseYears [/courseYear/{?AcYearId}]

Optional Parameters
- AcYearId - Academic Year Id
    
+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve CourseYears Association [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
               "acYearId":          1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001,
                "yearCode":         "Y7",
                "yearName":         "Year 7",
                "yearId":           0001,
                "couseYearId":      0001
            },
            {
                "acYearId":         1,
                "courseCode":       "KS3",
                "courseName":       "Key Stage 3",
                "courseId":         0001,
                "yearCode":         "Y8",
                "yearName":         "Year 8",
                "yearId":           0002,
                "couseYearId":      0002
            },
            {
                "acYearId":         1,
                "courseCode":       "KS4",
                "courseName":       "Key Stage 4",
                "courseId":         0002,
                "yearCode":         "Y10",
                "yearName":         "Year 10",
                "yearId":           0004,
                "couseYearId":      0003
            }


## Create/Update CourseYears [/courseYear]

### Create CourseYears [POST]

Create association of one to many Course to Years

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        


    + Body

            [{
                "AcademicYearId":   1,
                "CourseId":         0001,
                "YearTypeId":       0001
            },
            {
                "AcademicYearId":   1,
                "CourseId":         0002,
                "YearTypeId":       0004
            }]
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1,
                "CourseId":         0001,
                "YearTypeId":       0001,
                "CourseYearId":     0001
            },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1,
                "CourseId":         0002,
                "YearTypeId":       0004,
                "CourseYearId":     0003
            }
            

# Group Timtetable

Group of all Timetable Resources

## Timetable Sources [/TTSources?]



### Retrieve Timetable Sources Association [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "TimetableSourceId": 2132,
                "Code": "BehSource",
                "Name": "BehDetSource",
                "StartDate": "2015-08-30",
                "EndDate": "2016-08-27",
                "TimetableIterations": 52,
                "splitCoverEvents": false,
                "splitMultiplePeriods": false
                },
                {
                "TimetableSourceId": 2133,
                "Code": "Current",
                "Name": "Timetable 2015/2016",
                "StartDate": "2015-08-30",
                "EndDate": "2016-08-27",
                "TimetableIterations": 52,
                "splitCoverEvents": false,
                "splitMultiplePeriods": false
            }
            

## Create/Update Timetable Sources [/TTSources/]

### Create Timetable Sources [POST]

Create one to many Timetable Sources

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Request (application/json)

    + Body

            [{
                "Code":                     "2015/2016",
                "Name":                     "TT 2015/2016",
                "StartDate":                "2015/09/01",
                "EndDate":                  "2016/08/31",
                "TimetableIterations":      52,
                "SplitCoverEvents" :        false,
                "SplitMultiplePeriods":     false
            }]


+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "TimetableSourceId":        1,
                "Code":                     "2015/2016"
            }


### Update Timetable Sources [PUT]

Update one to many Timetable Sources

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Request (application/json)

    + Body

            {
                "TimetableSourceId":        1,
                "Code":                     "2015/2016",
                "Name":                     "Updated",
                "StartDate":                "2015/09/01",
                "EndDate":                  "2016/08/31",
                "TimetableIterations":      52,
                "SplitCoverEvents" :        false,
                "SplitMultiplePeriods":     false
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "TimetableSourceId":        1,
                "Code":                     "2015/2016"
            }



## Day Compositions  [/dayCompositions/{?TimetableSourceId}]

+ Parameters

    + TimetableSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Day Compositions [GET]

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                    "Day Comp 2014/2015"
             },
            {
                "TimetableSourceId":        1,
                "DayCompositionId":         2,
                "Name":                    "Day Comp 2014/2015 For KS5"
             }
             
+ Response 204


### Create Day Compositions [POST]

Create one to many Day Compositions

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Request (application/json)

    + Body

            {           
                "TimetableSourceId":        1,
                "Name":                     "DC 2014/2015"
            }


+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                     "DC 2014/2015"
            }

### Update Day Compositions [PUT]

Update one to many Day Compositions


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Request (application/json)

    + Body

            {           
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                     "DC 2014/2015 Updated"
            }


+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                     "DC 2014/2015 Updated"
            }


## Day Compositions Periods [/dayCompositionsPeriods/{?TimetableSourceId}]

** Please note the lowercase 'd' in this call **

+ Parameters

    + TimetableSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Day Composition Periods [GET]

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "DayCompositionId": 3706,
                "TimetableSourceId": 2133,
                "PeriodId": 83077,
                "PeriodCode": "P2",
                "PeriodName": "Period2",
                "StartTime": "09:00",
                "EndTime": "10:00",
                "WeekDay": "Monday"
                },
                {
                "DayCompositionId": 3706,
                "TimetableSourceId": 2133,
                "PeriodId": 83080,
                "PeriodCode": "P1",
                "PeriodName": "Period1",
                "StartTime": "08:40",
                "EndTime": "09:00",
                "WeekDay": "Monday"
            },
            {
                "DayCompositionId": 3706,
                "TimetableSourceId": 2133,
                "PeriodId": 83082,
                "PeriodCode": "P4",
                "PeriodName": "Period4",
                "StartTime": "11:20",
                "EndTime": "12:20",
                "WeekDay": "Monday"
            }
            
+ Response 204


### Create Day Compositions Periods [POST]

Create one to many Day Composition Periods

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Request (application/json)

    + Body
    
            {
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "WeekDay":                  "Monday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            },
            {
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "WeekDay":                  "Tuesday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            }


+ Response 200 (application/json)

    + Body
    
            [{
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 1
            },
            {
                "Status":                    true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 2
            }


### Update Day Compositions Periods [PUT]

Update one to many Day Composition Periods

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Request (application/json)

    + Body
    
            [{
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "PeriodId":                 1,
                "WeekDay":                  "Monday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            },
            {
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "PeriodId":                 2,
                "WeekDay":                  "Tuesday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            }


+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 1,
                "WeekDay":                  "Monday",
                "PeriodCode":               "P1"
            },
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 2,
                "WeekDay":                  "Tuesday",
                "PeriodCode":               "P1"
            }



## Timetable Events  [/ttEvents/{SourceId}{startDate}{endDate}{?dayCompositionId}]

+ Parameters

    + SourceId (required, number, `12345`) ... The unique identifier of a timetable source
    + startDate (required, date, `2015-09-09`) ...    Filter date for timetable events
    + endDate (required, date, `2015-09-09`) ...    Filter date for timetable events
    + dayCompositionId (optional, number, `12345`) ...    Filter for events from a single day composition


### Retrieve Timetable Events [GET]

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
            
            {
                "EventId":          1,
                "Day"  :            "Monday",
                "StartTime":        "08:50",
                "FinishTime":       "09:00",
                "Employees":        [{  
                                        "EmployeeId":   123456,
                                        "EmployeeCode": "ABC"
                                    }],
                "Groups":           [{  
                                        "GroupId":      123456,
                                        "GroupCode":    "Aba"
                                    }],
                "Subjects/NCAType": [{
                                        "Subject/NCAType":  "Tutor Time"
                                    }],
                "Rooms":            [{  
                                        "Room":         "A1"
                                    }],
                "Duration":         10,
                "EventType":        "Timetable",
                "NonContactType":   ""
            },
            {
                "EventId":          2,
                "Day":              "Monday",
                "StartTime":        "09:00",
                "FinishTime":       "10:00",
                "Employees":        [{  
                                        "EmployeeId":   465789,
                                        "EmployeeCode": "DEF"
                                    }],
                "Groups":           [{  
                                        "GroupId":      45601,
                                        "GroupCode":    "7-Mat"
                                    }],
                "Subjects": [{
                                        "Subject/NCAType":  "Mathematics"
                                    }],
                "Rooms":            [{  
                                        "Room":         "B2"
                                    }],
                "Duration":         60,
                "EventType":        "Timetable",
                "NonContactType":   ""
            }

+ Response 204


# Group Physical

Collection of all Physical Resources

## Rooms  [/rooms/{?roomId}]

+ Parameters

    + roomId (optional, number, `12345`) ... The unique identifier of a room

### Retrieve Rooms [GET]

Retrieve one to many rooms

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "RoomId":               1,
                "RoomCode":             "A1",
                "RoomName":             "A1",
                "Site":                 "Main",
                "RoomCategory":         "DTN",
                "RoomType":             "Detention",
                "Capacity":             30
                "AssociatedEquipment":  [{
                                                "EquipmentCode":  "OHP",
                                                "EquipmentName":  "Over Head Projector"
                                        }]
            },
            {
                "RoomId":               2,
                "RoomCode":             "A2",
                "RoomName":             "A2",
                "Site":                 "Main",
                "RoomCategory":         "",
                "RoomType":             "",
                "AssociatedEquipment":  [{}],
                "Capacity":             30
            }

+ Response 204 (applicatin/json)


### Create Rooms [POST]

Create one to many Rooms

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Request (application/json)

    + Body

            {
                "RoomCode":             "A3",
                "RoomName":             "A3",
                "Site":                 "Main",
                "RoomCategory":         "DTN",
                "RoomType":             "Detention"
                "associatedEquipment":  [{
                                                "EquipmentCode":  "OHP",
                                                "EquipmentName":  "Over Head Projector"
                                        }],
                "Capacity":             30
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved Successfully", 
                "RoomId":               1,
                "RoomCode":             "A3"
            }


### Update Rooms [PUT]

Update one to many Rooms

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Request (application/json)

    + Body

            {
                "RoomId":               1,
                "RoomCode":             "A3",
                "RoomName":             "A3-0",
                "Site":                 "Main",
                "RoomCategory":         "DTN",
                "RoomType":             "Detention"
                "AssociatedEquipment":  [{
                                                "EquipmentCode":  "OHP",
                                                "EquipmentName":  "Over Head Projector"
                                        }],
                "Capacity":             30                                        
            }


+ Response 200 (application/json)

    + Body
    
            [
                "Status":               true,
                "Details":              "Saved successfully", 
                "RoomId":               1
            }


## Sites  [/site/{?siteId}]

+ Parameters

    + siteId (optional, number, `12345`) ... The unique identifier of a site

### Retrieve Site [GET]

Retrieve one or more Sites

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {          
                "SiteId":       1,
                "SiteCode":     "Main site",
                "SiteName":     "The Main Site of School"
            }
            
+ Response 204 (application/json)
            

### Create Site [POST]

Create one to many Sites

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Request (application/json)

    + Body

            {
                "SiteCode":     "Main site",
                "SiteName":     "The Main Site of School"           
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "SiteId":               1
            }

            
### Update Site [PUT]

Update one to many Sites

+ Request (applcation/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            {
                "SiteId":       1,
                "SiteCode":     "Main site 1",
                "SiteName":     "The Main Site of School"           
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "SiteId":               1
            }

            
# Group **PROPOSED Methods** 

# Group Learners Collection v2

##Learners [/Learners/{LearnerId}{LearnerCode}{Status}{Since}]
After feedback from Partners and changes of internal requirements more fields are to be added to the existing GET Learners method.
This section is work in progress and subject to change.

+ Parameters

    + LearnerId     (optional, int, `00001`) ... the unique identifier of the learner
    + LearnerCode   (optional, string, `2015-00001`) ... the unique code of the learner 
    + Since         (optional, dateTime, `01-04-2014T18:00:00`) ... learner records modified since
    + Status        (optional, string, `Active`) ... Status of the learner - Active, Left, Draft

### Retrieve a collection of Learner Details [GET]

**Proposed Changes PROAPI-25**

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
            
+ Response 200

    + Body
    
            {
            "LearnerId":        443756,   
            "LearnerCode":      "2010-0001",
            "Surname":          "Sterling",
            "Forename":         "Geoffrey",
            "Status":           "Active",
            "RegGroup":         "KP",
            "AcademicHouse":    "Hulland"
            "DateOfBirth":      "04-08-1998 00:00:00",
            "LegalSurname":     "Sterling",
            "LegalForename":    "Geoffrey",
            "MiddleName":       "James",
            "FormerSurname":    "Silver",
            "EmailAddress":     "a.b@c.co.uk",
            "Gender":           "M",
            "Notes":            "Lorem Ipsum",
            "HomeSalutation":   "Mrs C Sterling",
            "DateOfEntry":      "01-09-2010 00:00:00",
            "Year":             "13",
            "Course":           "KS5",
            "NCYear":           "13",
            "Boarder":          "N",
            "AddressDetails":   [{
                                    "Country":      "GBR",
                                    "Type":         "H",
                                    "Flat":         "",
                                    "Number":       "23",
                                    "Street":       "Orchard Gardens",
                                    "Locality":     "Derby",
                                    "Town":         "",
                                    "County":       "",
                                    "PostCode":     "DE21 4FL",
                                    "AddressId":    1322228
                                }],
            "PhoneDetails":     [{
                                    "Type":         "H",
                                    "Number":       "01111567891",
                                    "SMSFlag":      false,
                                    "PhoneId":      2165078
                                }],
            "ContactDetails":   [{
                                    "ContactId":    0001,
                                    "Title":        "Mr",
                                    "Forename":     "Zaphod",
                                    "Surname":      "Beelebrox",
                                    "Relationship": "Father",
                                    "Gender":       "M",
                                    "WrittenCommunication":     "",
                                    "Priority":                 "",
                                    "ContactPrioritySource":    "",
                                    "EmergencyContactLevel":    "Primary",
                                    "NextOfKin":                false,
                                    "AddressDisclosure":        false,
                                    "AddressTransferred":       false,
                                    "ParentalResponsibility":   true,
                                    "FeePayer":                 false,
                                    "ParentalPortal":           true,
                                    "HomeAddressLink":          true,
                                    "OtherHomeAddressLink":     false,
                                    "SendSMS":                  true
                                }],
            "SiblingDetails":   [{
                                    "LearnerCode":  "2014-0002",
                                    "LearnerId":    0002
                                },{
                                    "LearnerCode":  "2015-0005",  
                                    "LearnerId":    0003
                                }],
            "PartTime":         false,
            "EnrolementStatus": "C",
            "UPN":              "H502400200007",
            "FormerUPN":        "F502400200003",
            "ULN":              "P400200003"
            "GandT":            true,
            "MedicalFlag":      true,
            "YSSAIndicator":    "Y",
            "Nationality":      "GBR",
            "Ethnicity":        "WBRI",
            "EthnicitySource":  "P",
            "ServiceChild":     "N",
            "ServiceChildSource": "P",
            "TopUpFunding":     true,
            "FundedHours":      0.0,
            "HoursAtSetting":   0.0,
            "UnitContactTime":  5.0,
            "SchoolLunchTaken": true,
            "MealType":         "CSM",
            "AsylumSeeker":     false,
            "Religion":         "HIN",
            "DisabilityDetails":[{
                                    "Disability":       "CON",
                                    "DisabilityTypeId": 0001
                                },{
                                    "Disability":       "DDA",
                                    "DisabilityTypeId":  0002
                                }],
            "LanguageDetails":  [{
                                    "TypeCode":             "F",
                                    "LanguageCode":         "ENG",
                                    "LanguageUsageId":      0001
                                },{
                                    "TypeCode":         "M",
                                    "LanguageCode":     "AYB",
                                    "LanguageUsageId":  0002
                                }],
            "SENProvisionDetails":  [{
                                        "ProvisionId":          00001
                                        "ProvisionTypeCode":    "E",
                                        "StartDate":            "19/09/2014",
                                        "ReviewDate":           "20/09/2014",
                                        "EndDate":              "20/09/2014" 
                                    }],
            "SENMajorNeedsDetails": [{
                                        "LeanerMajorNeedId":    00001
                                        "MajorNeedCode":        "SLD",
                                        "Ranking":              1
                                    }]
            }


+ Response 204 (application/json)


### Create a collection of Learner Details [POST]

**Proposed Changes PROAPI-32**

Create one or more Learner detail records

Mandatory fields:

- Surname, Forename, Learner Code, Date of Birth are mandatory fields
    
- Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory
    
- Phone is not mandatory but if included: Type and Number are mandatory
    
- Contacts are not mandatory but if included: Title, Forename, Surname, Relationship and Gender are mandatory
    
- Language is not mandatory but if included: TypeCode and LangCode are mandatory
    
- SENProvision is not mandatory but if included: ProvisionTypeCode and StartDate are mandatory
    
- SENMajorNeeds is not mandatory but if included: MajorNeedCode and Ranking are mandatory


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
            "LearnerCode":        "2010-0001",
            "Surname":            "Sterling",
            "Forename":           "Geoffrey",
            "Status":             "Active",
            "RegGroup":           "KP",
            "AcademicHouse":      "Hulland",
            "DateOfBirth":        "04-08-1998 00:00:00",
            "LegalSurname":       "Sterling",
            "LegalForename":      "Geoffrey",
            "MiddleName":         "James",
            "FormerSurname":      "Silver",
            "EmailAddress":       "a.b@c.co.uk",
            "Gender":             "M",
            "Notes":              "Lorem Ipsum",
            "HomeSalutation":     "Mrs C Sterling",
            "DateOfEntry":        "01-09-2010 00:00:00",
            "Year":               "13",
            "Course":             "KS5",
            "NCYear":             "13",
            "Boarder":            "N",
            "AddressDetails":   [{
                                    "Country":      "GBR",
                                    "Type":         "H",
                                    "Flat":         "",
                                    "Number":       "23",
                                    "Street":       "Orchard Gardens",
                                    "Locality":     "Derby",
                                    "Town":         "",
                                    "County":       "",
                                    "PostCode":     "DE21 4FL"
                                }],
            "PhoneDetails":     [{
                                    "Type":         "H",
                                    "Number":       "01111567891",
                                    "SMSFlag":      false
                                }],
            "ContactDetails":   [{
                                    "Title":        "Mrs",
                                    "Forename":     "Trillian",
                                    "Surname":      "Beelebrox",
                                    "Relationship": "PAM",
                                    "Gender":       "F",
                                    "WrittenCommunication":     "",
                                    "Priority":                 1,
                                    "ContactPrioritySource":    "",
                                    "EmergencyContactLevel":    "Primary",
                                    "NextOfKin":                false,
                                    "AddressDisclosure":        false,
                                    "AddressTransferred":       false,
                                    "ParentalResponsibility":   true,
                                    "FeePayer":                 false,
                                    "ParentalPortal":           true,
                                    "HomeAddressLink":          true,
                                    "OtherHomeAddressLink":     false,
                                    "SendSMS":                  true
                                }],
            "SiblingDetails":   [{
                                    "LearnerCode":  "2014-0002"
                                }],
            "PartTime":           false,
            "EnrolementStatus":   "C",
            "UPN":                "H502400200007",
            "FormerUPN":          "F502400200003",
            "ULN":                "P400200003",
            "UCI":                "3452165403",
            "GandT":              true,
            "MedicalFlag":        true,
            "YSSAIndicator":      "SNR",
            "Nationality":        "GBR",
            "Ethnicity":          "WBRI",
            "EthnicitySource":    "P",
            "ServiceChild":       "N",
            "ServiceChildSource": "P",
            "TopUpFunding":       true,
            "FundedHours":        0.0,
            "HoursAtSetting":     0.0,
            "UnitContactTime":    0.0,
            "SchoolLunchTaken":   true,
            "MealType":           "CSM",
            "AsylumSeeker":       false,
            "Religion":           "HI",
            "DisabilityDetails":   [{
                                        "Disability":  "CON"
                                    }],
            "LanguageDetails":  [{
                                    "TypeCode":             "F",
                                    "LanguageCode":         "ENG"
                                }],
            "SENProvisionDetails":  [{
                                        "ProvisionTypeCode":    "E",
                                        "StartDate":            "19/09/2014"
                                    }],
            "SENMajorNeedsDetails": [{
                                        "MajorNeedCode":        "SLD",
                                        "Ranking":              1
                                    }]
            }
            
            
+ Response 200 (application/json)

           
    + Body
    
            {
            "LearnerId":          02134,
            "LearnerCode":        "2010-0001",
            "Status":             "true",
            "Details":            "Saved successfully"
            "AddressDetails":   [{
                                    "AddressId":    0001
                                }],
            "PhoneDetails":     [{
                                    "PhoneId":      0001
                                }],
            "ContactDetails":   [{
                                    "ContactId":    0001
                                    "LearnerContactRelationshipId": 0002
                                }],
            "SiblingDetails":   [{
                                    "LearnerId":   0002
                                }],
            "DisabilityDetails":[{
                                    "DisabilityTypeId": 0001 
                                }],
            "LanguageDetails":  [{
                                    "LanguageId":   0002
                                }],
            "SENProvisionDetails":  [{
                                        "ProvisionId":  0003
                                    }],
            "SENMajorNeedsDetails": [{
                                        "MajorNeedId":  0001
                                    }]
            }


### Update a collection of Learner Details [PUT]
        
**Proposed Changes PROAPI-33**

Update one or more Learner detail records

Mandatory fields:

- LearnerId
    
- Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory
    
- Phone is not mandatory but if included: Type and Number are mandatory
    
- Contacts are not mandatory but if included: Title, Forename, Surname, Relationship and Gender are mandatory
    
- Language is not mandatory but if included: TypeCode and LangCode are mandatory
    
- SENProvision is not mandatory but if included: ProvisionTypeCode and StartDate are mandatory
    
- SENMajorNeeds is not mandatory but if included: MajorNeedCode and Ranking are mandatory

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
            "LearnerId":          00001,
            "LearnerCode":        "2010-0001",
            "Surname":            "Sterling",
            "Forename":           "Geoffrey",
            "Status":             "Active",
            "RegGroup":           "ABC",
            "AcademicHouse":      "Hulland",
            "DateOfBirth":        "04-08-1999 00:00:00",
            "LegalSurname":       "Sterling",
            "LegalForename":      "Geoffrey",
            "MiddleName":         "James",
            "FormerSurname":      "Silver",
            "EmailAddress":       "af098453hsdf@c.co.uk",
            "Gender":             "M",
            "Notes":              "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut.",
            "HomeSalutation":     "Mr G Sterling",
            "DateOfEntry":        "01-09-2010 00:00:00",
            "Year":               "13",
            "Course":             "KS5",
            "NCYear":             "13",
            "Boarder":            "N",
            "AddressDetails":   [{
                                    "AddressId":    0001,
                                    "Country":      "GBR",
                                    "Type":         "H",
                                    "Flat":         "",
                                    "Number":       "23",
                                    "Street":       "Orchard Gardens",
                                    "Locality":     "Derby",
                                    "Town":         "",
                                    "County":       "",
                                    "PostCode":     "DE21 4FL"
                                }],
            "PhoneDetails":     [{
                                    "PhoneId":      0001,
                                    "Type":         "H",
                                    "Number":       "01111567891",
                                    "SMSFlag":      false
                                }],
            "ContactDetails":   [{
                                    "ContactId":    0001,
                                    "Title":        "Mrs",
                                    "Forename":     "Trillian",
                                    "Surname":      "Beelebrox",
                                    "Relationship": "PAM",
                                    "Gender":       "F",
                                    "WrittenCommunication":     "",
                                    "Priority":                 1,
                                    "ContactPrioritySource":    "",
                                    "EmergencyContactLevel":    "Primary",
                                    "NextOfKin":                false,
                                    "AddressDisclosure":        false,
                                    "AddressTransferred":       false,
                                    "ParentalResponsibility":   true,
                                    "FeePayer":                 false,
                                    "ParentalPortal":           true,
                                    "HomeAddressLink":          true,
                                    "OtherHomeAddressLink":     false,
                                    "SendSMS":                  true
                                }],
            "SiblingDetails":   [{
                                    "LearnerCode":  "2014-0002"
                                }],
            "PartTime":           false,
            "EnrolementStatus":   "C",
            "UPN":                "H502400200007",
            "FormerUPN":          "F502400200003",
            "ULN":                "P400200003",
            "GandT":              false,
            "MedicalFlag":        false,
            "YSSAIndicator":      "Y",
            "Nationality":        "GBR",
            "Ethnicity":          "WBRI",
            "EthnicitySource":    "P",
            "ServiceChild":       "N",
            "ServiceChildSource": "P",
            "TopUpFunding":       false,
            "FundedHours":        0.0,
            "HoursAtSetting":     0.0,
            "UnitContactTime":    0.0,
            "SchoolLunchTaken":   false,
            "MealType":           "CSM",
            "AsylumSeeker":       false,
            "Religion":           "HIN"
            "DisabilityDetails":[{
                                    "DisabilityTypeId":     0001,
                                    "Disability":  "CON"
                                }],
            "LanguageDetails":  [{
                                    "LanguageUsageId":      0001,
                                    "TypeCode":             "F",
                                    "LangCode":             "ENG"
                                }],
            "SENProvisionDetails":  [{
                                    "ProvisionId":          0003,
                                    "ProvisionTypeCode":    "E",
                                    "StartDate":            "19/09/2014"
                                    }],
            "SENMajorNeedsDetails": [{
                                    "MajorNeedId":          0001,
                                    "MajorNeedCode":        "SLD",
                                    "Ranking":              1
                                    }]
            }
            

+ Response 200 (application/json)

           
    + Body
    
            {
            "LearnerId":          02134,
            "LearnerCode":        "2010-0001",
            "Status":             "true",
            "Details":            "Saved successfully"
            "AddressDetails":   [{
                                    "AddressId":    0001
                                }],
            "PhoneDetails":     [{
                                    "PhoneId":      0001
                                }],
            "ContactDetails":   [{
                                    "ContactId":    0001,
                                    "LearnerContactRelationshipId": 0002
                                }],
            "SiblingDetails":   [{
                                    "LearnerId":   0002
                                }],
            "DisabilityDetails":[{
                                    "DisabilityTypeId": 0001 
                                }],
            "LanguageDetails":  [{
                                    "LanguageUsgeId":   0002
                                }],
            "SENProvisionDetails":  [{
                                        "ProvisionId":  0003
                                    }],
            "SENMajorNeedsDetails": [{
                                        "MajorNeedId":  0001
                                    }]
            }

           
## LearnerOtherDetails [/LearnerOtherDetails{LearnerId}{LearnerCode}{Status}{DateModified}]

+ Parameters

    + LearnerId     (optional, int, `00001`) ... the unique identifier of the learner
    + LearnerCode   (optional, string, `2015-00001`) ... the unique code of the learner 
    + DateModified  (optional, dateTime, `01-04-2014T18:00:00`) ... learner records modified since
    + Status        (optional, string, `Active`) ... Status of the learner - Active, Lft, Draft
    
           

### Retrieve a collection of Learner Other Details [GET]

Retrieve one or more Learner Other Details records

**Deployed to Live PROAPI-26**

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
            
+ Response 200 (application/json)

    + Body

            {
            "LearnerId":        443756,   
            "LearnerCode":      "2010-0001",
            "Surname":          "Sterling",
            "Forename":         "Geoffrey",
            "Status":           "Active",
            "Traveller":        "GH",
            "TravellerSource":  "P",
            "CurrentDeprivationEver6":  true,
            "CurrentServiceChild":      false,
            "CurrentAdoptedfromCare":   false,
            "CurrentLookedAfter":       false,
            "CurrentPupilPremium":      true,
            "LAC":              true,
            "LACCurSch":        true,
            "LACLA":            "370",
            "HomeLA":           "871",
            "CPR":              false,
            "CPRLA":            null,
            "PEP":              false,
            "PPI":              false,
            "AdoptedFromCare":  "N",
            "Notes":            "Lorem ipsum",
            "Refugee":          true           
            "ExclusionDetails": [{
                                    "ExclusionId":          0001,
                                    "Category":             "FIXD",
                                    "Reason":               "PP",
                                    "StartDate":            "2014-07-02",
                                    "EndDate":              "2014-07-02",
                                    "StartSession":         "AM",
                                    "EndSession":           "PM",
                                    "Notes":                "Act of agression towards another pupil",
                                    "TotalDays":            1,
                                    "TotalSessions":        2,
                                    "LAC":                  false,
                                    "HeadNotified":         null,
                                    "GovMeeting":           null,
                                    "ProvisionStartDate":   null,
                                    "ProvisionDetails":     null,
                                    "Appeal":               false,
                                    "AppealDate":           null,
                                    "AppealCutOff":         null,
                                    "ExclusionHearing":     null,
                                    "Outcome":              "E",
                                    "ReintegrationMeetingDate": null,
                                    "ReintegrationNotes":       null,
                                    "ReinstatementDate":        null,
                                    "ReinstatementNotes":       ""
                                }],
            "FSMDetails":       [{
                                    "FSMId":        0001,
                                    "StartDate":    "2014-02-12",
                                    "ReviewDate":   "",
                                    "EndDate":      "2015-02-12",
                                    "CoutnryOfUk":  "ENG"
                                },
                                {
                                    "FSMId":        0002,
                                    "StartDate":    "2015-02-12",
                                    "ReviewDate":   "2015-12-08",
                                    "EndDate":      "2016-02-12",
                                    "CoutnryOfUk":  "ENG"
                                }],
            "PPI1314Details":   [{
                                    "PPIId":        0001,
                                    "PPIndicator":  "DPP",
                                    "FTE":          1.00,
                                    "FYStartDate":  "2013-12-20",
                                    "FYEndDate":    "2014-12-14"
                                }],
            "PupilPremiumDetails":  [{
                                            "PupilPremiumRecordId":0001,
                                            "Deprivation":          true,
                                            "AdoptedFromCare":      false,
                                            "ServiceChild":         false,
                                            "LookedAfter":          false,
                                            "CashAmount":           935.00,
                                            "FTE":                  1,
                                            "FYStartDate":          "2014-04-01",
                                            "FYEndDate":            "2015-03-31",
                                            "Notes":                "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                                    }]
                                    },
            "GandTDetails":         [{
                                        "GandTId":      0001,
                                        "GandTStatus":  "G",
                                        "StartDate":    "2015-02-23",
                                        "EndDate":      null,
                                        "Subject":      "EN",
                                        "Notes":        ""
                                    }],
            "SchoolHistoryDetails": [{
                                        "SchoolHistoryId": 0001,
                                        "LANumber":     "999",
                                        "SchoolNumber": "6213",
                                        "SchoolName":   "Advanced Learninig Academy",                                
                                        "EntryDate":    "2009-09-04",
                                        "LeavingDate":  "2010-01-08",
                                        "LeavingReason":"PM"
                                    },{
                                        "SchoolHistoryId": 0001,
                                        "LANumber":     "999",
                                        "SchoolNumber": "6124",
                                        "SchoolName":   "Queens College Academy",                                
                                        "EntryDate":    "2010-09-01",
                                        "LeavingDate":  "2016-02-05",
                                        "LeavingReason":"OT"
                                    }]
            }

            
+ Response 204 (application/json)


### Create\Update a collection of Learner Other Details [POST]

Create or update one or more Learner Other Details records

**Deployed to Live PROAPI-34**

Mandatory fields:

**LearnerId is mandatory**
- Exclusion in not mandatory but if used: Category, Reason, StartDate are mandatory
    
    If Category = FXD or LCH: EndDate, StartSession, EndSession are also mandatory
- FSM is not mandatory but if used: StartDate is mandatory
- Pupil Premium 13/14 is not mandatory but if used: Pupil Premium Indicator, Full Time Equivalent, Pupil Premium FY Start Date and Pupil Premium FY End Date are mandatory
- Pupil Premiums is not mandatory but if used: Pupil Premium Cash Amount, Full Time Equivalent, Pupil Premium FY Start Date and Pupil Premium FY End Date are mandatory
- Gifted and Talented is not not mandatory but if used: G&TStatus, StartDate and Subject are mandatory
- School History is not mandatory but it used: School Name, Leaving Date and Leaving Reason are mandatory

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
            
            { 
            "LearnerId":        443756,   
            "LearnerCode":      "2010-0001",
            "Traveller":        "GH",
            "TravellerSource":  "P",
            "CurrentDeprivationEver6":  true,
            "CurrentServiceChild":      false,
            "CurrentAdoptedfromCare":   false,
            "CurrentLookedAfter":       false,
            "CurrentPupilPremium":      true,
            "LAC":              true,
            "LACCurSch":        true,
            "LACLA":            "370",
            "HomeLA":           "871",
            "CPR":              false,
            "CPRLA":            null,
            "PEP":              false,
            "PPI":              false,
            "AdoptedFromCare":  "N",
            "Notes":            "Lorem ipsum",
            "Refugee":          true
            "ExclusionDetails":[{
                                "Category":         "FIXD",
                                "Reason":           "PP",
                                "StartDate":        "2014-07-02",
                                "EndDate":          "2014-07-02",
                                "StartSession":     "AM",
                                "EndSession":       "PM",
                                "Notes":            "Act of aggression towards another pupil",
                                "TotalDays":        1,
                                "TotalSessions":    2,
                                "LAC":              false,
                                "HeadNotified":     null,
                                "GovMeeting":       null,
                                "ProvisionStartDate":   null,
                                "ProvisionDetails":     null,
                                "Appeal":           false,
                                "AppealDate":       null,
                                "AppealCutOff":     null,
                                "ExclusionHearing": null,
                                "Outcome":          "E",
                                "ReintegrationMeetingDate": null,
                                "ReintegrationNotes":       null,
                                "ReinstatementDate":        null,
                                "ReinstatementNotes":       ""
                            }],
            "FSMDetails":   [{
                                "StartDate":    "2014-02-12",
                                "ReviewDate":   "",
                                "EndDate":      "2015-02-12",
                                "CoutnryOfUk":  "ENG"
                            },
                            {
                                "StartDate":    "2015-02-12",
                                "ReviewDate":   "2015-12-08",
                                "EndDate":      "2016-02-12",
                                "CoutnryOfUk":  "ENG"
                            }],
            "PPI1314Details":       [{
                                    "PPIndicator":  "DPP",
                                    "FTE":          1.00,
                                    "FYStartDate":  "2013-12-20",
                                    "FYEndDate":    "2014-12-14"
                                    }],
            "PupilPremiumDetails":  [{
                                    "Deprivation":      true,
                                    "AdoptedFromCare":  false,
                                    "ServiceChild":     false,
                                    "LookedAfter":      false
                                    "CashAmount":       "935.00",
                                    "FTE":              1.0,
                                    "FYStartDate":      "2014-04-01",
                                    "FYEndDate":        "2015-03-31",
                                    "Notes":            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                                    }],
            "GandTDetails": [{
                                        "GandTStatus":    "Gifted",
                                        "StartDate":    "2015-02-23",
                                        "EndDate":      null,
                                        "Subject":      "EN",
                                        "Notes":        ""
                                    }],
            "SchoolHistoryDetails": [{
                                    "LANumber":     "999",
                                    "SchoolNumber":  "6213",
                                    "SchoolName":   "Advanced Learninig Academy",                                
                                    "EntryDate":    "2009-09-04",
                                    "LeavingDate":  "2010-01-08",
                                    "LeavingReason":"PM"
                                    },{
                                    "LANumber":     "999",
                                    "SchoolNumber":  "1234",
                                    "SchoolName":   "Queens College Academy",                                
                                    "EntryDate":    "2010-09-01",
                                    "LeavingDate":  "2016-02-05",
                                    "LeavingReason":"OT"
                                    }]
            }
          

+ Response 200

    + Body
    
            {  
            "LearnerId":            443756,   
            "LearnerCode":          "2010-0001",
            "Status":               true,
            "Details":              "Saved successfully",
            "ExclusionDetails": [{
                                    "ExclusionId":  0001
                                }],
            "FSMDetails":       [{
                                    "FSMId":        0001
                                },
                                {
                                    "FSMId":        0002
                                }],
            "PPI1314Details":   [{
                                    "PPIId":        0001
                                }],
            "PupilPremiumDetails":[{
                                    "PupilPremiumRecordId":     001
                                  }],
            "GandTDetails":     [{
                                    "GandTId":      0001
                                }],
            "SchoolHistoryDetails": [{
                                    "SchoolHistoryId":0001
                                    },{
                                    "SchoolHistoryId":0002
                                    }]
            }
            

## Learner Roll Call Attendance [/LearnerRollCallAttendance{?LearnerId}{?StartDate}{?EndDate}{?Status}]

**Proposed Changes PROAPI-36**

### Get Roll Call Attendance [GET]

Retreive one to many learner's attendance details

**Either LearnerId or Date Range is mandatory**
**Maximum Date Range is 16 weeks**

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Parameters

    + LearnerId (optional, int, `123465`) ... the unique identifier of the learner
    + StartDate (optional, dateTime, `01-04-2014T18:00:00`) ... attendance recorded from
    + EndDate (optional, dateTime, `01-05-2014T18:00:00`) ... attendance recorded to
    + Status (optional, string, `Active`) ... Status of the learner - Active, Left, Draft

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200

    + Body
    
            {   
                {
                "LearnerId":    0001,
                "LearnerCode":  "2013-00001",
                "Date":         "18-04-2016",
                "Session":         "AM",
                "AttendanceCode":  "//",
                "AttendanceCodeId":1,  
                "MinutesLate":     0,
                "Notes":           ""
                },{
                "LearnerId":    0001,
                "LearnerCode":  "2013-00001",
                "Date":         "18-04-2016",
                "Session":         "PM",
                "AttendanceCode":  "L",
                "AttendanceCodeId": 3,  
                "MinutesLate":     5,
                "Notes":           "Lorem Ipsum"
                }
            }  

+ Response 204 (application/json)


## Learner Lesson Attendance [/LearnerLessonAttendance{?LearnerId}{?StartDate}{?EndDate}{?GroupCode}{?Status}]

**Proposed Changes PROAPI-59**

### Get Learner Lesson Attendance [GET]

Retrieve lesson attendance for one to many learners using date and time of lesson

**Either LearnerId or Date Range is mandatory**
**Maximum Date Range is 16 weeks**

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Parameters

    + LearnerId (optional, int, `123465`) ... the unique identifier of the learner
    + StartDate (optional, dateTime, `01-04-2014T18:00:00`) ... attendance recorded from
    + EndDate (optional, dateTime, `01-05-2014T18:00:00`) ... attendance recorded to
    + GroupCode (optional, string, `9Sc1`) ... Code of the Teaching Group
    + Status (optional, string, `Active`) ... Status of the learner - Active, Left, Draft

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200

    + Body
    
            {   
                {
                "EventId":      1234,
                "Date":         "18-04-2016",
                "StartTime":    "09:00",
                "EndTime":      "10:00",
                "Period":       "1",
                "LearnerId":    0001,
                "LearnerCode":  "2013-00001",
                "AttendanceCode":   "//",
                "AttendanceCodeId": 1,  
                "MinutesLate":      0,
                "Notes":            ""
                },{
                "EventId":      6541,
                "Date":         "18-04-2016",
                "StartTime":    "10:00",
                "EndTime":      "12:00",
                "Period":       "2,3",
                "Date":         "18-04-2016"
                "LearnerId":    0002,
                "LearnerCode":  "2013-00002",
                "AttendanceCode":   "L",
                "AttendanceCodeId": 3,  
                "MinutesLate":      5,
                "Notes":            "Lorem ipsum dolor sit amet."  
                }
            }  

+ Response 204 (application/json)
         
            

# Group Behaviour
The whole **Behaviour** section is under development and unavailable at present. 
This documentation is subject to change and fields included are not final.

## Behaviour Collection [/behaviour]

This will data for Behaviour Events

## Behaviour Structure Collection [/bmstructure/]

### Get behaviour structure [GET]
**Deployed to Live PROAPI-24**

Retrieves the current behaviour structure. 

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
            "Categories":   [{
                                "CategoryId":     00001,
                                "Code":           "CAT1",
                                "Description":    "Category 1"
                            },{
                                "CategoryId":     00002,
                                "Code":           "CAT2",
                                "Description":    "Category 2"
                            },{
                                "CategoryId":     00003,
                                "Code":           "CAT3",
                                "Description":    "Category 3"
                            },{
                                "CategoryId":     00004,
                                "Code":           "CAT4",
                                "Description":    "Category 4"
                            }],
            "Types":        [{
                                "TypeId":          0001,
                                "Code":            "01Conf",
                                "Description":     "Confrontational",
                                "Points":          "2",
                                "Behaviour":       "Negative",
                                "Category":        "CAT1",
                                "Severity":        "High"
                            },{
                                "TypeId":          0002,
                                "Code":            "02CLWK",
                                "Description":     "Classwork",
                                "Points":          "3",
                                "Behaviour":       "Positive",
                                "Category":        "CAT1",
                                "Severity":        "Low"
                            }],
            "Severities":   [{
                                "SeverityId":       0001,
                                "Code":             "S1",
                                "Description":      "Low"
                            },{
                                "SeverityId":       0002,
                                "Code":             "S2",
                                "Description":      "Medium"
                            },{
                                "SeverityId":       0003,
                                "Code":             "S3",
                                "Description":      "High"        
                            }]
            "Actions":      [{
                                "ActionId":         0001,
                                "Code":             "01DET",
                                "Description":      "Think Tank",
                                "Behaviour":        "Negative",
                                "BehaviourType":    "Confrontational"
                            },{
                                "ActionId":         0002,
                                "Code":             "02REW",
                                "Description":      "Reward Point",
                                "Behaviour":        "Positive",
                                "BehaviourType":    "Classwork"
                            }]
            "Rules":        [{
                                "RuleId":           0001,
                                "RuleName":         "Reward",
                                "Status":           "Active",
                                "RuleCriteria":     "Behaviour",
                                "Behaviour":        "Positive",
                                "BehaviourType":    "Classwork",
                                "BehaviourCategory":"",
                                "BehaviourSeverity":"",
                                "Occurred":         "2",
                                "TimePeriod":       "Week",
                                "IsRecursive":      "",
                                "Consequences":     "Reward Point",
                                "Points":           "2",
                                "AddLearnerChar":   "Y"
                            [{
                                "CharacteristicId": 0001,
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 3",
                                "AndOr":            "Or"
                            },{
                                "CharacteristicId": 0002,
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 4",
                                "AndOr":            ""
                            }]
                            }],
            "DetentionTypes":[{
                                "DetentionTypeId":  0001,
                                "Code":             "TT",
                                "Description":      "Think Tank"
                            },{
                                "DetentionTypeId":  0002,
                                "Code":             "OOD",
                                "Description":      "One off Detention"
                            }],
            "Locations":     [{
                                "LocationId":       0001,
                                "Code":             "CLS",
                                "Description":      "Classroom"
                            },{
                                "LocationId":       0002,
                                "Code":             "SBS",
                                "Description":      "School Bus"      
                            }]
            }


+ Response 204 (application/json)

### Create Behaviour Structure [POST]

**Deployed to Live PROAPI-15**

Creates a new Behaviour Management Structure

Mandatory Parameters:
        
- Types:

    - Code  (required, string, 'ABLAN') ... Unique code for the type of behaviour
    
    - Description (required, string, 'Abusive/Threating Language') ... Description of the type of behaviour
    
    - Points (required, int, '1') ... Number of points, defaults to zero

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
            "Categories":   [{
                            "Code":           "CAT1",
                            "Description":    "Category 1"
                            },{
                            "Code":           "CAT2",
                            "Description":    "Category 2"
                            },{
                            "Code":           "CAT3",
                            "Description":    "Category 3"
                            },{
                            "Code":           "CAT4",
                            "Description":    "Category 4"
                            }],
            "Types":        [{
                            "Code":            "01Conf,
                            "Description":     "Confrontational",
                            "Points":          2,
                            "Behaviour":       "Negative",
                            "Category":        "CAT1",
                            "Severity":        "High"
                            },{
                            "Code":            "02CLWK,
                            "Description":     "Classwork",
                            "Points":          3,
                            "Behaviour":       "Positive",
                            "Category":        "CAT1",
                            "Severity":        "Low"
                            }],
            "Severities":   [{
                            "Code":             "S1",
                            "Description":      "Low"
                            },{
                            "Code":             "S2",
                            "Description":      "Medium"
                            },{
                            "Code":             "S3",
                            "Description":      "High"        
                            }],
            "Actions":      [{
                            "Code":             "01DET",
                            "Description":      "Think Tank",
                            "Behaviour":        "Negative",
                            "BehaviourType":    [{ 
                                                    "01Conf",
                                                    "02CLWK"
                                                }],
                            },{
                            "Code":             "02REW",
                            "Description":      "Reward Point",
                            "Behaviour":        "Positive",
                            "BehaviourType":    [{
                                                "02CLWK"
                                                }]
                            }],
            "Rules":        [{
                            "RuleName":         "Reward",
                            "Status":           "Active",
                            "RuleCriteria":     "Behaviour",
                            "Behaviour":        "Positive",
                            "BehaviourType":    "02CLWK",
                            "BehaviourCategory":"CAT2",
                            "BehaviourSeverity":"S2",
                            "Occurred":         2,
                            "TimePeriod":       "Week",
                            "IsRecursive":      false,
                            "Consequences":     "02REW",
                            "Points":           2,
                            "Characteristics":
                                [{
                                    "Characteristic":   "Course",
                                    "Operator":         "Equal",
                                    "Sequence":         1,
                                    "Value":            "Key Stage 3",
                                    "AndOr":            "Or"
                                },{
                                    "Characteristic":   "Course",
                                    "Operator":         "Equal",
                                    "Sequence":         2
                                    "Value":            "Key Stage 4",
                                    "AndOr":            ""
                                }]
                            }],
            "DetentionTypes":   [{
                                "Code":             "TT",
                                "Description":      "Think Tank"
                                },{
                                "Code":             "OOD",
                                "Description":      "One off Detention"
                                }],
            "Locations":        [{
                                "Code":             "CLS",
                                "Description":      "Classroom"
                                },{
                                "Code":             "SBS",
                                "Description":      "School Bus"      
                                }]
            }
            


+ Response 200 (application/json)

    + Body
    
            {
            "Status":       true,
            "Details":      "Saved successfully"
            "Categories":   [{
                            "CategoryId":   0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "CategoryId":   0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "CategoryId":   0003,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "CategoryId":   0004,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Types":        [{
                            "TypeId":       0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "TypeId":       0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Severities":   [{
                            "SeverityId":   0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "SeverityId":   0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "SeverityId":   0003,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Actions":      [{
                            "ActionId":     0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "ActionId":     0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Rules":        [{
                            "RuleId":       0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                                [{
                                "CharacteristicId":         0001
                                },{
                                "CharacteristicId":         0002
                                }]
                            }],
            "DetentionTypes":[{
                            "DetentionTypeId":  0001,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            },{
                            "DetentionTypeId":  0002,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            }],
            "Locations":     [{
                            "LocationId":       0001,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            },{
                            "LocationId":       0002,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            }]
            }
            

### Update Behaviour Structure [PUT]
**PROPOSED POST METHOD - PROAPI-29**

Updates an Behaviour Management Structure

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
            "Categories":   [{
                            "CategoryId":       0001,
                            "Code":             "ABL",
                            "Description":      "Abusive Language"
                        },{
                            "CategoryId":       0002,
                            "Code":             "BUL",
                            "Description":      "Bullying"
                        }],
            "Types":        [{
                            "TypeId":           0001,  
                            "Code":             "Conf",
                            "Description":      "Confrontational",
                            "Points":           "2",
                            "Behaviour":        "Negative",
                            "Category":         "BUL",
                            "Severity":         "High"
                        }],
            "Severities":   [{
                            "SeverityId":       0001,
                            "Code":             "S1",
                            "Description":      "1"
                        },{
                            "SeverityId":       0002,
                            "Code":             "S2",
                            "Description":      "2"
                        },{
                            "SeverityId":       0003,
                            "Code":             "S3",
                            "Description":      "3"        
                        }],
            "Actions":      [{}],
            "Rules":        [{}],
            "DetentionType":[{}],
            "Location":     [{}]
            }

+ Response 200

    + Body
    
            {
            "Categories":   [{
                            "CategoryId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "CategoryId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }],
            "Types":        [{
                            "TypeId":         0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }]
            "Severities":   [{
                            "SeverityId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0003,
                            "Status":         true,
                            "Details":        "Saved Successfully"    
                        }],
            "Actions":      [{}],
            "Rules":        [{}],
            "DetentionType":[{}],
            "Location":     [{}]
            }