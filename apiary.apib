FORMAT: 1A


# Progresso API
Provides the ability to manage school information.

**Please Note**

There are areas which are or will be under development in the near future.

GET methods for LookUp data are not available at present. 
However, we do have spreadsheets which contain most of these. If you would like a copy please contact:

 **sally.robinson@oneadvanced.com**


# Group Authorisation
Method for security and access.

The UserId and Password will be issued to the Partner by the educational establishment and are establishment specific.

**Passwords which contain special characters will need to be encoded prior to use

## Access Tokens [/Token]
The Access Token used is an OAuth token and has an automatic expiry.

Required parameters are:

- Username
- Password
  - NB: Passwords which contain special characters MUST be encoded

### Request token [POST]

+ Request

    + Headers
    
            Content-Type: application/x-www-form-urlencoded
            
    + Body
    
            grant_type=password&username=[USERNAME]&password=[URI_ENCODED_PASSWORD]

+ Response 200 (application/json)

    + Body
    
            {
                "access_token": "63AUHWsGVEDIEl8",
                "token_type": "bearer",
                "expires_in": 86399,
                ".issued": "Wed, 30 Dec 2015 11:22:48 GMT",
                ".expires": "Thu, 31 Dec 2015 11:22:48 GMT"
            }
            

# Group Employees Collection
Methods for all employee-related resources


## Employee Basic Records [/Employees{?EmployeeId}{?StaffCode}{?Status}{?Since}]

Collection of Employee related resources

**Please note Gender values:**

    + 0 = Not known
    + 1 = Male
    + 2 = Female
    + 9 = Not specified

### Retrieve one to many basic employee records [GET]

Retrieve one to many employee basic records

**PersonId is unique across the school's database**

+ Parameters
    + EmployeeId (optional, int, `1023454`) ... unique Id of Employee
    + StaffCode (optional, string, `ABc`) ... unique code of Staff
    + Status (optional, string, `Active`) ... Status of the Employee Active, Left or Draft
    + Since (optional, dateTime, `01-04-2014T18:00:00`) ... Employee records modified since

+ Response 200 (application/json)
+ Response 204

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200

    + Body
    
            {
                "PersonId":             56123,
                "EmployeeId":           12345,
                "StaffCode":            "JBl",
                "Title":                "Mr",
                "Surname":              "Bloggs",
                "Forname":              "Joe",
                "Department":           "MAT",
                "Position":             "Teacher",
                "LegalSurname":         "Bloggs",
                "LegalForename":        "Joseph",
                "FormerSurname":        "",
                "MiddleName":           "Bob",
                "DisplayName":          "Mr J B Bloggs",
                "DateOfBirth":          "31-12-1968 00:00:00",
                "Gender":               "1",
                "StartDate":            "28-02-2014 00:00:00",
                "LeftDate":             "31-12-2015 00:00:00",
                "DestinationType":      2,
                "Destination":          "Hermitage on Skye",
                "LeavingReason":        "Wants to be a hermit"'
                "TeacherNumber":        "12456",
                "Email":                "joe.bloggs@theschool.edu",
                "PhoneDetails":         [{
                                            
                                            "Type":     "H",
                                            "Number":   "015555555",
                                            "SmsFlag":  false,
                                            "PhoneId":  12334
                                        },{
                                            "Type":     "M",
                                            "Number":   "075555555",
                                            "SmsFlag":  true,
                                            "Phoneid":  212121
                                        }],
                "AddressDetails":       [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire"
                                            "PostCode": "DD55 36DD",
                                            "AddressId":345345
                                        }],
                "Status":               "Left",
                "ExcludeFromCensus":    true
                "NINumber":             "NI1234HJGJ34",
                "PayrollNumber":        "A270515",            
                "QtStatus":             false,
                "QtsRoute":             "",
                "DateOfQTS":            "",
                "HTLA":                 false,
                "DateOfHTLAStatus":     "",
                "LanguageDetails":      [{
                                            "Code":     "ENG",
                                            "Type":     "H",
                                            "Level":    "4",
                                            "LanguageUsageId": 434000
                                        }],
                "QualificationDetails": [
                                        {
                                            "QualificationCode": "FRST",
                                            "Subject1": "W900",
                                            "Subject2": "",
                                            "ClassOfDegree": "1",
                                            "Verified": "False",
                                            "EmployeeQaulificationId": 22324
                                        }
                                        ],
                "Nationality":          "GBR",
                "Ethnicity":            "WBRI",
                "Religion":             "MU",
                "StartDate":            "",
                "Disability":           "No",
                "IsTeaching":           true
            }

+ Response 204


### Create Basic Employees [POST]

 Create one to many one to many employee records 

+ Fields
    + StaffCode, Surname, Forename are mandatory fields
    + Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory
    + Phone is not mandatory but if included: Type and Number are mandatory
    + Language is not mandatory but if included: TypeCode and LangCode are mandatory
    + Qualification is not mandatory but if included: QualificaitonCode and Subject1 are mandatory
    
+ Response 200 (application/json)

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "StaffCode":            "JBl",
                "Title":                "Mr",
                "Surname":              "Bloggs",
                "Forname":              "Joe",
                "Department":           "MAT",
                "Position":             "TCR",
                "LegalSurname":         "Bloggs",
                "LegalForename":        "Joseph",
                "FormerSurname":        "",
                "MiddleName":           "",
                "DisplayName":          "Mr J B Bloggs",
                "DateOfBirth":          "31-12-1968",
                "Gender":               "1",
                "StartDate":            "28-02-2014",
                "LeftDate":             "31-12-2015",
                "DestinationType":      2,
                "Destination":          "Hermitage on Skye",
                "LeavingReason":        "Wants to be a hermit"'
                "TeacherNumber":        "12456",
                "Email":                "joe.bloggs@theschool.edu",
                "RegistrationNumber":   "NA14 CZX",
                "CarType":              "Nissan Note",
                "Colour":               "White",
                "Notes":                "Has lots of notes",
                "IsAlertNotification":  true,
                "EmergencySMSNumber":   "07896453712",
                "EmergencyEmailAddress":"afakeemail@fake.co.uk",
                "PhoneDetails":         [{
                                            
                                            "Type":     "H",
                                            "Number":   "015555555",
                                            "SmsFlag":  false
                                        },{
                                            "Type":     "M",
                                            "Number":   "075555555",
                                            "SmsFlag":  true
                                        }],
                "AddressDetails":       [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire"
                                            "PostCode": "DD55 6FD"
                                        }],
                "Status":               "Left",
                "ExcludeFromCensus":    true
                "NINumber":             "AB123456D",
                "PayrollNumber":        "A270515",            
                "QtStatus":             false,
                "QtsRoute":             "",
                "DateOfQTS":            "",
                "HTLA":                 false,
                "DateOfHTLAStatus":     "",
                "LanguageDetails":      [{
                                            "Code":     "ENG",
                                            "Type":     "H",
                                            "Level":    "4"
                                        }],
                "QualificationDetails": [{
                                            "Code":    "BEDO",
                                            "Subject1": "A100",
                                            "Subject2": "C100",
                                            "ClassOfDegree": "3",
                                            "Verified":   true
                                        }],
                "Nationality":          "GBR",
                "Ethnicity":            "WBRI",
                "Religion":             "MU",
                "Disability":           "No",
                "SubjectsTaught":       [{
                                            "Subject":          "EN",
                                            "TotalPlannedEffort": 20
                                        }]
            }
                    
+ Response 200

    + Body
    
            {
                "EmployeeId":           0001,
                "StaffCode":            "JBl",
                "Status":               true,
                "Details":              "Saved successfully"
                "PhoneDetails":         [{
                                            "PhoneId":      00001
                                        },{
                                            "PhoneId":      00002
                                        }],
                "AddressDetails":       [{
                                            "AddressId":    00001
                                        }],
                "LanguageDetails":      [{
                                            "LanguageId":   0001
                                        }],
                "QualificationDetails": [{
                                            "QualificationId":0001
                                        }]
            }


### Update Employee Records [PUT]

Update one to many employee records

+ Mandatory fields

    + EmployeeId, Surname, Forename are mandatory fields
    
    + Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory

    + Phone is not mandatory but if included: Type and Number are mandatory
    
    + Language is not mandatory but if included: TypeCode and LangCode are mandatory
    
    + Qualification is not mandatory but if included: QualificaitonCode and Subject1 are mandatory


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "StaffCode":            "JBl",
                "Title":                "Mr",
                "Surname":              "Bloggs",
                "Forname":              "Joe",
                "Department":           "MAT",
                "Position":             "Teacher",
                "LegalSurname":         "Bloggs",
                "LegalForename":        "Joseph",
                "FormerSurname":        "",
                "MiddleName":           "Bob",
                "DisplayName":          "Mr J B Bloggs",
                "DateOfBirth":          "31-12-1968 00:00:00",
                "Gender":               "1",
                "StartDate":            "28-02-2014 00:00:00",
                "LeftDate":             "31-12-2015 00:00:00",
                "DestinationType":      2,
                "Destination":          "Hermitage on Skye",
                "LeavingReason":        "Wants to be a hermit"'
                "TeacherNumber":        "12456",
                "Email":                "joe.bloggs@theschool.edu",
                "PhoneDetails":         [{
                                            
                                            "Type":     "H",
                                            "Number":   "015555555",
                                            "SmsFlag":  false
                                        },{
                                            "Type":     "M",
                                            "Number":   "075555555",
                                            "SmsFlag":  true
                                        }],
                "AddressDetails":       [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire"
                                            "PostCode": "DD55 36DD"
                                        }],
                "Status":               "Left",
                "ExcludeFromCensus":    true
                "NINumber":             "NI1234HJGJ34",
                "PayrollNumber":        "A270515",            
                "QtStatus":             false,
                "QtsRoute":             "",
                "DateOfQTS":            "",
                "HTLA":                 false,
                "DateOfHTLAStatus":     "",
                "LanguageDetails":      [{
                                            "Code":     "ENG",
                                            "Type":     "H",
                                            "Level":    "4"
                                        }],
                "QualificationDetails": [{
                                            "Code":    "BEDO",
                                            "Subject1": "A100",
                                            "Subject2": "C100",
                                            "ClassOfDegree": "3",
                                            "Verified":   true
                "Nationality":          "GBR",
                "Ethnicity":            "WBRI",
                "Religion":             "MU",
                "Disability":           "No"
            }           

+ Response 200

    + Body
    
            {
                "EmployeeId":           0001,
                "StaffCode":            "JBl",
                "Status":               true,
                "Details":              "Saved successfully"
                "PhoneDetails":         [{
                                            "PhoneId":      00001
                                        },{
                                            "PhoneId":      00002
                                        }],
                "AddressDetails":       [{
                                            "AddressId":    00001
                                        }],
                "LanguageDetails":      [{
                                            "LanguageId":   0001
                                        }],
                "QualificationDetails": [{
                                            "QualificationId":0001
                                        }]
            }


## Employees Contacts [/EmployeeContacts{?Status}]

Retrieve a collection of employees contacts

### Retrieve collection of employees contacts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters

    + Status (optional, string, `Active`) ... Optional filter by status, valid values [ Active | Left ].

+ Response 200

    + Body
    
            {
                "EmployeeId":        12345,
                "StaffCode":         "sc123",
                "Contacts": 
                            [{
                                    "PersonId":     9532145,
                                    "Title":        "Mr",
                                    "Forename":     "Joe",
                                    "Surname":      "Bloggs",
                                    "MiddleName":   "John",
                                    "Gender":       "M",
                                    "Relationship": "PTNR",
                                    "Priority":     1,
                                    "EmergencyContactLevel":  "Primary",
                                    "NextOfKin":    true,
                                    "PersonalEmail":"abc@fakeemail.com",
                                    "Language":     "ENG",
                                    "Occupation":   "Lawyer",
                                    "Nationality":  "GBR",
                                    "VisaNumber":   "1234567",
                                    "Employer":     "M & J Smith",
                                    "WorkEmail":    "abc@fakeworkemail.co.uk",
                                    "IsMedicalContact":     true,
                                    "MedicalType":          "DR",
                                    "TranslatorRequired":   false,
                                    "MemberOfArmedForces":  false,
                                    "ExPupil":              false,
                                    "WirttenCommunication": "E",    
                                    "AddressDetails":       [{
                                                                "Country":  "GBR",
                                                                "Type":     "H",
                                                                "Flat":     "3a",
                                                                "Number":   "1",
                                                                "Street":   "The Street",
                                                                "Locality": "Belper",
                                                                "Town":     "Derby",
                                                                "County":   "Derbyshire",
                                                                "PostCode": "DD55 36DD"
                                                                "AddressId":45615
                                                            }],
                                    "PhoneDetails":         [{
                                            
                                                                "Type":     "H",
                                                                "Number":   "015555555",
                                                                "SmsFlag":  false,
                                                                "PhoneId":  12334
                                                            },{
                                                                "Type":     "M",
                                                                "Number":   "075555555",
                                                                "SmsFlag":  true
                                                                "PhoneId":  12346
                                                            }]
                            }]
            }
    

### Create Employee Contact Association [POST]

Associate one or more Employees to one or more contacts

+ Mandatory fileds
    + StaffCode (required, string, `ABc`) ... unique Code of Staff
    + Title (required, string, `Mr`) ... title of Contact
    + Forename (required, string, `Joe`) ... forename of Contact
    + Surname (required, string, `Bloggs`) ... surname of Contact
    + Gender (required, string, `M`) ... gender of Staff Contact
    + Relationship (required, string, `PTNR`) ... relationship of Contact to Staff
+ If IsMedicalContact = true
    + MedicalType (required, string, `DOC`) ... this is required if IsMedicalContact = true
+ If Address is present then the following are Mandatory
    + Country
    + AddressType
    + NumberName
    + Street
    + PostCode
+If Phone is present then the following fields are Mandatory
    + PhoneType
    + PhoneNumber

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "StaffCode":    'ABc',
                "Contacts":     [{
                                    "Title":        "Mr",
                                    "Forename":     "Joe",
                                    "Surname":      "Bloggs",
                                    "MiddleName":   "John",
                                    "Gender":       "M",
                                    "Relationship": "PTNR",
                                    "Priority":     1,
                                    "EmergencyContactLevel":  "Primary",
                                    "NextOfKin":    true,
                                    "PersonalEmail":"abc@fakeemail.com",
                                    "Language":     "ENG",
                                    "Occupation":   "Lawyer",
                                    "Nationality":  "GBR",
                                    "VisaNumber":   "1234567",
                                    "Employer":     "M & J Smith",
                                    "WorkEmail":    "abc@fakeworkemail.co.uk",
                                    "IsMedicalContact":     true,
                                    "MedicalType":          "DOC",
                                    "TranslatorRequired":   false,
                                    "MemberOfArmedForces":  false,
                                    "ExPupil":              false,
                                    "WirttenCommunication": "E",    
                                    "AddressDetails":       [{
                                                                "Country":  "GBR",
                                                                "Type":     "H",
                                                                "Flat":     "3a",
                                                                "Number":   "1",
                                                                "Street":   "The Street",
                                                                "Locality": "Belper",
                                                                "Town":     "Derby",
                                                                "County":   "Derbyshire"
                                                                "PostCode": "DD55 36DD"
                                                            }],
                                    "PhoneDetails":         [{
                                            
                                                                "Type":     "H",
                                                                "Number":   "015555555",
                                                                "SmsFlag":  false,
                                                                "PhoneId":  12334
                                                            },{
                                                                "Type":     "M",
                                                                "Number":   "075555555",
                                                                "SmsFlag":  true
                                                            }]
                                }]
            }
            

+ Response 200

    + Body
    
            {
                "EmployeeId":           12345,
                "Status":               true,
                "Details":              "Saved successfully",
                "Contacts": 
                            [{
                                "ContactId":            00001
                            }]
            }

           
### Update Employee Contact Association [PUT]

Update the association between one or more Employees to one or more contacts

Mandtory parameters:

- EmployeeId
- ContactId

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]


    + Body
    
            [{
                "EmployeeId":           12345,
                "Contacts": 
                            [{
                                        "ContactId":    00001,
                                        "Relationship": "WIFE",
                                        "Priority":     1,
                                        "Emergency":    "Primary",
                                    `   "NextOfKin":    true
                            },
                            {  
                                        "ContactId":    00002,
                                        "Relationship": "RELA",
                                        "Priority":     2,
                                        "Emergency":    "Secondary",
                                    `   "NextOfKin":    false
                            }]
            }]
            

+ Response 200

    + Body
    
            {
                "EmployeeId":           12345,
                "Status":               true,
                "Details":              "Saved successfully",
                "Contacts": 
                            [{
                                "ContactId":            00001
                            {  
                                "ContactId":            00002
                            }]
            }
            

## Staff Absence Categories [/AbsenceCategory]

Collection of Staff Absence Categories

### Create Staff Absence Categories [POST]

Create one to many Staff Absence Categories

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Code":             "CONF",
                "Name":             "Conference",
                "Description":      "Attending a school-related conference",
                "Category":         "Absence",
                "Statistical":      false,
                "Authorised":       true,
                "Explained":        true,
                "SWFMapping":       "SIC",
                "ClusterMapping":   "SIC"
            }
            
+ Response 200

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "AbsenceCategoryId":    123456
            }

## Staff Absences [/StaffAbsences{?EmployeeId}{?DateFrom}{?DateTo}]

Collection of Staff Absence methods

### Retrieve collection of Staff Absences [GET]

Retrieve one or more employee check records

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters
    + EmployeeId (optional, int, `0001`) ... unique Id of Staff/Employee
    + DateFrom (optional, date, `01-09-2015`) ... start date of the date range for Absences
    + DateTo (optional, date, `31-08-2016` ... end date of the date range for Absences
    
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "AbsenceId": 4229458,
                "EmployeeId": 68783,
                "StaffCode": "MSO",
                "Date": "15/09/2016",
                "Type": "A",
                "AbsenceCategory": "CONF",
                "SWFMapping": "TRN",
                "ClusterMapping": null,
                "StartTime": "08:00",
                "FinishTime": "16:00",
                "Explained": false,
                "Note": "Future Muhammad Abubakr Scholars National Conference"
            },
            {
                "AbsenceId": 4229459,
                "EmployeeId": 68714,
                "StaffCode": "NC",
                "Date": "05/09/2016",
                "Type": "A",
                "AbsenceCategory": "TRIPT",
                "SWFMapping": "PUB",
                "ClusterMapping": null,
                "StartTime": "08:00",
                "FinishTime": "16:00",
                "Explained": false,
                "Note": "Brazil Mufazzul to Paralympics"
            },
            {
                "AbsenceId": 4229460,
                "EmployeeId": 68714,
                "StaffCode": "NC",
                "Date": "06/09/2016",
                "Type": "A",
                "AbsenceCategory": "TRIPT",
                "SWFMapping": "PUB",
                "ClusterMapping": null,
                "StartTime": "08:00",
                "FinishTime": "16:00",
                "Explained": false,
                "Note": "Brazil Mufazzul to Paralympics"
            },
            {
                "AbsenceId": 4229461,
                "EmployeeId": 68714,
                "StaffCode": "NC",
                "Date": "07/09/2016",
                "Type": "A",
                "AbsenceCategory": "TRIPT",
                "SWFMapping": "PUB",
                "ClusterMapping": null,
                "StartTime": "08:00",
                "FinishTime": "16:00",
                "Explained": false,
                "Note": "Brazil Mufazzul to Paralympics"
            }


### Create one to many staff absences [POST]

If StartTime and EndTime are null then the Start and End times of the default day structure are inserted.

All other fields are mandatory.

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
             {
                "StaffCode":            "AdGo",
                "AbsenceCategoryCode":  "ABS",
                "FromDate":             "2016-12-05",
                "ToDate":               "2016-12-07",
                "StartTime":            null,
                "EndTime":              null,
                "Note":                "Had flu"
             }
             
+ Response 200 (applicatoin/json)

    + Body
    
               {
                "Status":               true,
                "Details":              "Saved successfully",
                "StaffAbsenceId":       1000,
                "EmployeeId":           1000,
                "Date":                 "01-09-2016" ,
                "StartTime":            "08:45"  ,
                "EndTime":              "10:50"
                }

## Assign Cover [/AssignCover]

### Assign Cover [POST]

All fields are required

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Staff":    [{
                                "SourceCode":           "2017/2018",
                                "DayComposition":       "School Day",
                                "AbsentStaffCode":      "ABc",
                                "Date":                 "10/11/2017",
                                "StartTime":            "14:00",
                                "FinishTime":           "14:50",
                                "CoverStaffCode":       "CDe"
                            }],
                "Room"      {{
                                "SourceCode":           "2017/2018",
                                "DayComposition":       "School Day",
                                "UnavailableRoomCode":  "MU3",
                                "Date":                 "13/11/2017",
                                "StartTime":            "08:00",
                                "FinishTime":           "16:00",
                                "FreeRoomCode":         "MU1"
                            }}
            }
                            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully"
            },{
                "Status":       true,
                "Details":      "Saved successfully"
            } 


## Employees Checks [/EmployeeChecks{?Status}{?Employee}]

Collection of all employee checks for employees within a school

**These methods have been updated to include new requirements**

**Code details**
ADD         Additional Checks for Staff who have lived or worked outside the UK
AGN         Agency Check
DBS         Disclosure and Barring Service Check
CRB         Criminal Record Bureau Check
DISQbA      Discqualification by Association
EEASAN      European Economic Area (EEC) Teacher Sanctions and Restrictions 
GTC         GTC Registration
ID          Identification
List99      List 99 Check
MED         Medical Fitness
PRB         Prohibition from Teaching Check
QUAL        Qualifications
REF         References
RTW         Right to Work in the UK
SEC128      Prohibition from Management

### Retrieve collection of employee checks [GET]

Retrieve one or more employee check records

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters
    + Status (optional, boolean, `true`)... Optional filter for active Employees
    + Employee (optional, int, `0001`) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            {
                "EmployeeId": 86531,
                "StaffCode": "ZoTh",
                "ADD":  [
                          {
                            "CheckId": 50716,
                            "VerificationDate": "13/02/2016",
                            "ExpiryDate": "14/02/2017",
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Passport No: 1234564987"
                          }
                        ],
                "AGN":  [
                          {
                            "CheckId": 50717,
                            "AgencyName": "Hayes",
                            "PaperworkDate": "2016-05-21"
                          }
                        ],
                "CRB":  [
                          {
                            "CheckId": 50718,
                            "VerificationDate": "13/02/2008",
                            "ExpiryDate": "21/05/2016",
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Certificate Provided",
                            "ClearenceLevel": "EN",
                            "Result": "PASS",
                            "RequestDate": "01/01/2008",
                            "ReviewDate": "01/05/2016",
                            "DisclousureReference": "1188108206"
                          }
                        ],
                "DBS":  [
                          {
                            "CheckId": 50719,
                            "VerificationDate": "21/05/2016",
                            "ExpiryDate": "21/05/2019",
                            "CheckedById": 101210,
                            "CheckedByCode": "KaLe",
                            "Position": "ADMIN",
                            "Evidence": "Certificate Provided",
                            "ClearenceLevel": "EN",
                            "Result": "PASS",
                            "RequestDate": "15/03/2017",
                            "ReviewDate": "15/03/2019",
                            "DisclousureReference": "1188108206"
                          }
                        ],
                "DISQbA":   [
                              {
                                "CheckId": 50720,
                                "VerificationDate": "13/02/2017",
                                "CheckedById": 68558,
                                "CheckedByCode": "KaBe",
                                "Position": "AC",
                                "Evidence": "Certificate Provided",
                                "Result": "Yes"
                              }
                            ],
                "EEASAN":   [
                              {
                                "CheckId": 50721,
                                "VerificationDate": "13/03/2016",
                                "CheckedById": 68558,
                                "CheckedByCode": "KaBe",
                                "Position": "AC",
                                "Evidence": "Certificate Provided",
                                "Result": "Yes"
                              }
                            ],
                "GTC":  [
                          {
                            "CheckId": 50722,
                            "VerificationDate": "21/05/2015",
                            "ExpiryDate": "21/05/2017",
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Membership Card"
                          }
                        ],
                "ID":   [
                          {
                            "CheckId": 50723,
                            "VerificationDate": "13/02/2008",
                            "ExpiryDate": "21/05/2020",
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Passport No: 213456"
                          }
                        ],
                "List99":   [
                              {
                                "CheckId": 50724,
                                "VerificationDate": "13/05/2013",
                                "ExpiryDate": "13/05/2016",
                                "CheckedById": 68558,
                                "CheckedByCode": "KaBe",
                                "Position": "AC",
                                "Evidence": "Certificate Provided",
                                "List99Clearance": "PASS"
                              }
                            ],
                "MED":  [
                          {
                            "CheckId": 50725,
                            "VerificationDate": "15/05/2010",
                            "ExpiryDate": null,
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Dr Certificate"
                          }
                        ],
                "PRB":  [
                          {
                            "CheckId": 50726,
                            "VerificationDate": "16/06/2016",
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Certificate",
                            "Result": "No"
                          }
                        ],
                "QUAL": [
                          {
                            "CheckId": 50727,
                            "VerificationDate": "13/02/2008",
                            "ExpiryDate": "21/05/2016",
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Certificates"
                          }
                        ],
                "REF": [
                          {
                            "CheckId": 50728,
                            "VerificationDate": "13/02/2008",
                            "ExpiryDate": null,
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Letters from previous Employer"
                          }
                        ],
                "RTW":  [
                          {
                            "CheckId": 50729,
                            "VerificationDate": "21/05/2015",
                            "ExpiryDate": "21/05/2020",
                            "CheckedById": 68558,
                            "CheckedByCode": "KaBe",
                            "Position": "AC",
                            "Evidence": "Permit"
                          }
                        ],
                "SEC128":   [
                              {
                                "CheckId": 50730,
                                "VerificationDate": "21/05/2015",
                                "CheckedById": 68558,
                                "CheckedByCode": "KaBe",
                                "Position": "AC",
                                "Evidence": "Police Record",
                                "Result": "Yes"
                              }
                            ]
            }

## Create/Update Employee Checks [/employeeChecks]

### Create Employee Checks [POST]

Create Employee checks for one to multiple employees

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "StaffCode":        "ABc",
                "ADD":              [{
                                        "VerificationDate":     "13/02/2016",
                                        "ExpiryDate":           "14/02/2017",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Passport No: 1234564987"
                                    }],
                "AGN":              [{
                                        "AgencyName":           "Hayes",
                                        "PaperWorkDate":        "21/05/2016",
                                    }],
                "CRB":              [{
                                        "VerificationDate":     "13/02/2008",
                                        "ExpiryDate":           "21/05/2016",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Certificate Provided",
                                        "ClearenceLevel":       "EN",
                                        "Result":               "PASS",
                                        "RequestDate":          "01/01/2008",
                                        "ReviewDate":           "01/05/2016",
                                        "DisclousureReference": "1188108206"
                                    }],
                "DBS":              [{
                                        "VerificationDate":     "21/05/2016",
                                        "ExpiryDate":           "21/05/2019",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Certificate Provided",
                                        "ClearenceLevel":       "EN",
                                        "Result":               "PASS",
                                        "RequestDate":          "15-03-2017",
                                        "ReviewDate":           "15-03-2019",
                                        "DisclousureReference": "1188108206"
                                    }],
                "DISQbA":           [{
                                        "VerificationDate":     "13/02/2017",
                                        "CheckedByCode":        "KaBe",
                                        "Result":               "PASS",
                                        "Evidence":             "Certificate Provided"
                                    }],
                "EEASAN":           [{
                                        "VerificationDate":     "13/03/2016",
                                        "CheckedByCode":        "KaBe",
                                        "Result":               "PASS",
                                        "Evidence":             "Certificate Provided"
                                    }],
                "GTC":              [{
                                        "VerificationDate":     "21/05/2015",
                                        "ExpiryDate":           "21/05/2017",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Membership Card"
                                    }],
                "ID":               [{
                                        "VerificationDate":     "13/02/2008",
                                        "ExpiryDate":           "21/05/2020",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Passport No: 213456"
                                    }],
                "List99":           [{
                                        "VerificationDate":     "13/05/2013",
                                        "ExpiryDate":           "13/05/2016",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Certificate Provided",
                                        "List99Clearance":      "PASS"
                                    }],
                "MED":              [{
                                        "VerificationDate":     "15/05/2010",
                                        "ExpiryDate":           null,
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Dr Certificate"
                                    }],
                "PRB":              [{
                                        "VerificationDate":     "16/06/2016",
                                        "Result":               "NO",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Certificate"
                                    }],
                "QUAL":             [{
                                        "VerificationDate":     "13/02/2008",
                                        "ExpiryDate":           "21/05/2016",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Certificates"
                                    }],
                "REF":              [{
                                        "VerificationDate":     "13/02/2008",
                                        "ExpiryDate":           null,
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Letters from previous Employer"
                                    }],
                "RTW":              [{
                                        "VerificationDate":     "21/05/2015",
                                        "ExpiryDate":           "21/05/2020",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Permit"
                                    }],
                "SEC128":           [{
                                        "VerificationDate":     "21/05/2015",
                                        "Result":               "YES",
                                        "CheckedByCode":        "KaBe",
                                        "Evidence":             "Police Record"
                                    }]  
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "EmployeeId": 86531,
                "ADD":  [
                          {
                            "CheckId": 50746,
                            "CheckedById": 68558
                          }
                        ],
                "AGN":  [
                          {
                            "CheckId": 50747,
                            "CheckedById": null
                          }
                        ],
                "CRB":  [
                          {
                            "CheckId": 50748,
                            "CheckedById": 68558
                          }
                        ],
                "DBS":  [
                          {
                            "CheckId": 50749,
                            "CheckedById": 68558
                          }
                        ],
                "DISQbA":   [
                              {
                                "CheckId": 50750,
                                "CheckedById": 68558
                              }
                            ],
                "EEASAN":   [
                              {
                                "CheckId": 50751,
                                "CheckedById": 68558
                              }
                            ],
                "GTC":  [
                          {
                            "CheckId": 50752,
                            "CheckedById": 68558
                          }
                        ],
                "ID":   [
                          {
                            "CheckId": 50753,
                            "CheckedById": 68558
                          }
                        ],
                "List99":   [
                              {
                                "CheckId": 50754,
                                "CheckedById": 68558
                              }
                            ],
                "MED":  [
                          {
                            "CheckId": 50755,
                            "CheckedById": 68558
                          }
                        ],
                "PRB":  [
                          {
                            "CheckId": 50756,
                            "CheckedById": 68558
                          }
                        ],
                "QUAL": [
                          {
                            "CheckId": 50757,
                            "CheckedById": 68558
                          }
                        ],
                "REF":  [
                          {
                            "CheckId": 50758,
                            "CheckedById": 68558
                          }
                        ],
                "RTW":  [
                          {
                            "CheckId": 50759,
                            "CheckedById": 68558
                          }
                        ],
                "SEC128":   [
                              {
                                "CheckId": 50760,
                                "CheckedById": 68558
                              }
                            ]
            }
            

### Update Employee Checks [PUT]
Update Employee checks for one to multiple Staff


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "EmployeeId":           103278,
                "ADD":                  [{
                                            "CheckId": 1000,
                                            "VerificationDate":     "13/02/2016",
                                            "ExpiryDate":           "14/02/2017",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Passport No: 1234564987"
                                        }],
                "AGN":                  [{
                                            "CheckId": 1001,
                                            "AgencyName":           "Supply and Demand",
                                            "PaperWorkDate":        "21/05/2016"
                                        }],
                "CRB":                  [{
                                            "CheckId": 1002,
                                            "VerificationDate":     "13/02/2008",
                                            "ExpiryDate":           "21/05/2016",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Certificate Provided",
                                            "ClearenceLevel":       "EN",
                                            "Result":               "PASS",
                                            "RequestDate":          "01/01/2008",
                                            "ReviewDate":           "01/05/2016",
                                            "DisclousureReference": "1188108206"
                                        }],
                "DBS":                  [{
                                            "CheckId": 1003,
                                            "VerificationDate":     "21/05/2016",
                                            "ExpiryDate":           "21/05/2019",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Certificate Provided",
                                            "ClearenceLevel":       "EN",
                                            "Result":               "PASS",
                                            "RequestDate":          "15-03-2017",
                                            "ReviewDate":           "15-03-2019",
                                            "DisclousureReference": "1188108444"
                                        }],
                "DISQbA":               [{
                                            "CheckId": 1004,
                                            "VerificationDate":     "13/02/2017",
                                            "CheckedByCode":        "ALe",
                                            "Result":               "PASS",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "EEASAN":               [{
                                            "CheckId": 1005,
                                            "VerificationDate":     "13/03/2016",
                                            "CheckedByCode":        "ALe",
                                            "Result":               "PASS",
                                            "Evidence":             "Certificate Provided"
                                        }],
                "GTC":                  [{
                                            "CheckId": 1006,
                                            "VerificationDate":     "21/05/2015",
                                            "ExpiryDate":           "21/05/2017",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Membership Card"
                                        }],
                "ID":                   [{
                                            "CheckId": 1007,
                                            "VerificationDate":     "13/02/2008",
                                            "ExpiryDate":           "21/05/2020",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Passport No: 213456"
                                        }],  
                "List99":               [{
                                            "CheckId": 1008,
                                            "VerificationDate":     "13/05/2013",
                                            "ExpiryDate":           "13/05/2016",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Certificate Provided",
                                            "List99Clearance":      "PASS"
                                        }],
                "MED":                  [{
                                            "CheckId": 1009,
                                            "VerificationDate":     "15/05/2010",
                                            "ExpiryDate":           null,
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Dr Certificate"
                                        }],
                "PRB":                   [{
                                            "CheckId": 1010,
                                            "VerificationDate":     "16/06/2016",
                                            "Result":               "NO",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Certificate"
                                        }],
                "QUAL":                 [{
                                            "CheckId": 1011,
                                            "VerificationDate":     "13/02/2008",
                                            "ExpiryDate":           "21/05/2016",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Certificates"
                                        }],
                "REF":                  [{
                                            "CheckId": 1012,
                                            "VerificationDate":     "13/02/2008",
                                            "ExpiryDate":           null,
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Letters from previous Employer"
                                        }],
                "RTW":                  [{
                                            "CheckId": 1013,
                                            "VerificationDate":     "21/05/2015",
                                            "ExpiryDate":           "21/05/2020",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Permit"
                                        }],
                "SEC128":                 [{
                                            "CheckId": 1014,
                                            "VerificationDate":     "21/05/2015",
                                            "Result":               "YES",
                                            "CheckedByCode":        "ALe",
                                            "Evidence":             "Police Record"
                                        }]  
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "EmployeeId":   0001,
                            "ADD":  [{ }],
                            "AGN":  [{ }],
                            "DBS":  [{ }],
                            "GTC":  [{ }],
                            "ID":   [{ }],
                            "List99":   [{
                                        "CheckId":              00001,
                                        "VerificationDate":     "12-09-2013",
                                        "ExpiryDate":           "12-09-2014",
                                        "List99Clearence":      "PASS",
                                        "CheckedById":          123456,
                                        "Position":             "DPHT",
                                        "Evidence":             "Certificate Provided"
                                        }],
                            "MED":  [{  }],
                            "Qual": [{ }],
                            "RED":  [{ }],
                            "RTW":  [{ }]
            }



## Employees Contracts [/EmployeeContracts{?Employee}]

Collection of all employee checks for employees within a school

### Retrieve collection of employee contracts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Parameters

    + Employee (optional, int, `12345`) ... Optional filter to an Employee

+ Response 200 (application/json)

    + Body
    
            {
                "EmployeeId":   00001,
                "StaffCode":    "sc123",
                "Contracts":    [{
                                "ContractId":   0001,    
                                "Type":         "PRM",
                                "Name":         "Main Contract",
                                "StartDate":    "01-09-2013",
                                "EndDate":      "31-08-2015",
                                "PostCode":     "AHT",
                                "PostName":     "Assistant Head",
                                "DailyRate":    False,
                                "Origin":       "OTHEDU",
                                "Destination":  "",                           
                                "Roles":    [{
                                                "RoleId":           0001,
                                                "Role":             "TASS",
                                                "HoursPerWeek":     32.50,
                                                "FTEHours":         32.50,
                                                "WeeksPerYear":     52.14,
                                                "PayrollNumber":    "123456",
                                                "NIRate":           "Contracted In",
                                                "Superannuation":   "Teachers Superannuation",
                                                "CostCentre":       "TEACH (Teaching Staff)",
                                                "LedgerCode":       "A040 (Teachers Salaries)"
                                                "Salaries": [{
                                                            "SalaryId":             00001,
                                                            "EffectiveFrom":        "01-09-2014",
                                                            "EffectiveTo":          "31-08-2015",         "",
                                                            "PayScaleCode":         "",
                                                            "PayScaleName":         "",
                                                            "RegionalSpine":        "",
                                                            "Point":                "",
                                                            "SafeguardedSalary":    true,
                                                            "IncludeInPensionCalc": false,
                                                            "IncludeInNICalc":      true,
                                                            "BasePay":              "45000"
                                                            }],
                                                "Allowance":[{
                                                            "AllowanceId":          0001,
                                                            "EffectiveFrom":        "01-09-2014",
                                                            "EffectiveTo":          "31-08-2015",
                                                            "Category":             "",
                                                            "Amount":               ""
                                                            }],
                                            }],
                                }],
            }
            
            

## Create/Update Employee Contracts [/EmployeeContracts]

### Create Contract [POST]

Create one to many contract records  

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
    
            {
                "StaffCode":    "ZoTh",
                "Contracts":    [{    
                                    "Type":             "PRM",
                                    "Name":             "Main Contract",
                                    "StartDate":        "01-09-2013",
                                    "EndDate":          "31-08-2015",
                                    "PostCode":         "AHT",
                                    "DailyRate":        true,
                                    "Origin":           "OTHEDU",
                                    "Destination":      "",
                                    "PayReviewDate":    "27/05/2014",
                                    "PayFrameworkCode": "2014",
                                    "MinRange":         "45000",
                                    "MaxRange":         "75000"
                                }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "EmployeeId":   00001,
                "Contracts":    [{
                                    "ContractId":   1,    
                                    "Type":         "PRM",
                                    "Name":         "Main Contract",
                                    "StartDate":    "01-09-2013",
                                    "EndDate":      "31-08-2015"
                                }]
            }
            
            

### Update Contract [PUT]

Update one to many contract records  


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
    
            {
                "StaffCode":    00001,
                "Contracts":    [{
                                    "ContractId":       1,    
                                    "Type":         "PRM",
                                    "Name":         "Main Contract",
                                    "StartDate":    "01-09-2013",
                                    "EndDate":      "31-08-2015",
                                    "PostCode":     "AHT",
                                    "DailyRate":    true,
                                    "Base Pay":     36588.00,
                                    "Origin":       "OTHEDU",
                                    "Destination":  "",
                                    "PayReviewDate":    "27/05/2014",
                                    "PayFrameworkCode": "2014",
                                    "MinRange":         "45000",
                                    "MaxRange":         "75000"                           
                                }]
            }
            

+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully"
                "EmployeeId":   00001,
                "Contracts":    [{
                                    "ContractId":     1    
                                    "Type":         "PRM",
                                    "Name":         "Main Contract",
                                    "StartDate":    "01-09-2013",
                                    "EndDate":      "31-08-2015"
                                }]
            }
            

## Create/Update Employees Contract Roles [/EmployeeContractRoles]

Collection of all employee roles for employee contracts within a school

### Create Roles for employee contracts [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "StaffCode":    "ZoTh",
                "ContractName": "Contract 1",
                "Roles":    [{
                                "Role":             "ADVT",
                                "HoursPerWeek":     32.50,
                                "FTEHours":         32.50,
                                "WeeksPerYear":     52.14,
                                "PayrollNumber":    "123456",
                                "NIRate":           "CI",
                                "Superannuation":   "TEAC",
                                "CostCentre":       "TEACH",
                                "LedgerCode":       "A040"
                            }]
            }

+ Response 200 (application/json)

    + Body
    
            {
                    "Status": true,
                    "Details": "Saved successfully",
                    "EmployeeId": 86531,
                    "StaffCode": "ZoTh",
                    "ContractId": 100034,
                    "ContractName": "Contract 1",
                    "Roles": [
                                {
                                    "RoleId": 78664,
                                    "Role": "ADVT",
                                    "Status": true,
                                    "Details": "Saved successfully"
                                }
                            ]
            }

## Create/Update Employees Salary [/employeeRoleSalary]
Collection of all employee roles for employee contracts within a school

### Create Salaries for Roles for employees [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "StaffCode":        "ZoTh",
                "ContractName":     "Contract 1",
                "RoleType":         "ADVT",
                "Salary":           [{
                                        "EffectiveFrom":        "01-09-2014",
                                        "EffectiveTo":          "31-08-2015",
                                        "PayScaleCode":         "OT",
                                        "PayScaleName":         "Leadership",
                                        "RegionalSpine":        "EW",
                                        "Point":                "1",
                                        "SafeguardedSalary":    true,
                                        "IncludeInPensionCalc": false,
                                        "IncludeInNICalc":      true,
                                        "BasePay":              15000.25
                                    }]
            }
            
            
+ Response 200 (application/json)

    + Body
    
            {    
                "Status": true,
                "Details": "Saved successfully",
                "EmployeeId": 86531,
                "StaffCode": "ZoTh",
                "ContractName": "Contract 1",
                "RoleId": 78664,
                "Salary": [
                    {
                        "SalaryId": 94162,
                        "Status": true,
                        "Details": "Saved successfully"
                    }
                ]
            }


### Update Salaries for Roles for employees  [PUT]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "salaryId":             1,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScaleCode":             "",
                                        "payScaleName":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "salaryId":             2,
                                        "effectiveFrom":        "01-09-2014",
                                        "effectiveTo":          "31-08-2015",
                                        "payScale":             "",
                                        "regionalSpine":        "",
                                        "point":                "",
                                        "safeguardedSalary":    true,
                                        "includeInPensionCalc": false,
                                        "includeInNICalc":      true,
                                        "basePay":              15000.25
                                    }]
            
            }
            
            
+ Response 200 (application/json)

    + Body
    
            {
                "employeeId":       0001,
                "roleId":           0001,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Updated Succesfully",
                                        "salaryId":         1,
                                        "roleSalaryId":     1
                                    }]
            
            
            },
            {
                "employeeId":       0002,
                "roleId":           0003,
                "salary":           [{
                                        "status":           true,
                                        "details":          "Updated Succesfully",
                                        "salaryId":         2,
                                        "roleSalaryId":     2
                                    }]
            
            }
 

## Create Employee Allowances [/EmployeeAllowances]

Collection of all employee Allowances for employee Roles within a school

+ Fields
    + StaffCode (required, string, `4569`) ... unqiue Id of Staff
    + ContractName (required, string, `Main Contract 1`) ... unique name of Contract
    + RoleType (required, string, `TCHR`) ... unique code of the Role associated with the Contract
    + AllowanceCategory (required, string, `SEN`) ... unique code of Allowance Category
    + EffectiveFrom (required, string, `01/09/2017`) ... start date of the Allowance
    + EffectiveFrom (optional, string, `31/09/2018`) ... end date of the Allowance
    + AnnualAmount (required, dec, `2563.00`) ... annual Allowance amount
    + Description (optional, string, `Lorem Ipsum`) ... descriptoin of Allowance
    + IncludeInPensionCalc (optional, boolean, `false`) ... Is this to be included in the Pension calulation?
    + IncludeInNICalc (optional, boolean, `false`) ... Is this to be included in the National Insurance calulation?
    + BasePay (required, string, `55000`) ... the annual amount of salary

### Create Allowances for Roles for employees [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "StaffCode":    "ABc"
                "Allowances":   [{   
                                    "ContractName":         "Main Contract 1",
                                    "RoleType":             "TCHR",
                                    "AllowanceCategory":    "SEN",
                                    "EffectiveFrom":        "01/09/2016",
                                    "EffectiveTo":          "31/08/2017",
                                    "AnnualAmount":         "2563.00",
                                    "Description":          "Lorem ipsum",
                                    "IncludeInPensionCalc": false,
                                    "IncludeInNICalc":      false
                                },{
                                    "ContractName":         "Main Contract 1",
                                    "RoleType":             "GTC",
                                    "AllowanceCategory":    "RES",
                                    "EffectiveFrom":        "01/09/2016",
                                    "EffectiveTo":          "31/08/2017",
                                    "AnnualAmount":         "1395.00",
                                    "Description":          "Lorem ipsum",
                                    "IncludeInPensionCalc": false,
                                    "IncludeInNICalc":      false
                                }]
            }

+ Response 200

    + Body
    
            {
            "EmployeeId": "15234",
            "StaffCode": "ABc", 
            "Status": true,
            "Details": "Saved successfully",
            "Allowances":   [
                            {
                            "AllowanceId": 2446053
                            "Status": true,
                            "Details": "Saved successfully",
                            },
                            {
                            "AllowanceId": 2446054
                            "Status": true,
                            "Details": "Saved successfully",
                            }
                            ]
            }
    

# Group Contacts
Group of all contact-related resources

## Contacts Collection [/contacts/{id}]
Get all or a single contact

Optional Parameter
- Id - Contact Id

+ Parameters
    + id (optional, int, `12345`) ... Contact with the id

    
### Retrieve a collection of contacts [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
                "ContactId":            1,
                "ContactCode":          ""'
                "Title":                "Mr",
                "Surname":              "King",
                "Forename":             "Ice",
                "MiddleName":           "",
                "Gender":               "M",
                "Email":                "ice.king@home.com",
                "Language":             "English",
                "Occupation":           "",
                "Nationality":          "GBR",
                "IsMedicalContact":     true,
                "WorkEmail":            "",
                "Employer":             "",
                "TranslatorReqiured":   false,
                "ExPupil":              false,
                "MedicalType":          "",
                "VisaNumber":           "",
                "MemberOfArmedForces":  false,
                "PhoneDetails":         [{
                                            "Type":     "H",
                                            "Number":   "013332552552",
                                            "SmsFlag":  false,
                                            "PhoneId":  1
                                        },{
                                            "Type":     "M",
                                            "Number":   "07707707707",
                                            "SmsFlag":  true,
                                            "PhoneId":  2
                                        }],
                "AddressDetails":       [{
                                            "Country":  "GBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire",
                                            "PostCode": "DD55 36DD",
                                            "AddressId":1
                                        }]
            },
            {
                "ContactId":            2,
                "Title":                "Mr",
                "Surname":              "Princess",
                "Forename":             "Fire",
                "MiddleName":           "",
                "Gender":               "M",
                "Email":                "fire.princess@home.com",
                "Language":             "English",
                "Occupation":           "",
                "Nationality":          "UK",
                "IsMedicalContact":     false,
                "WorkEmail":            "",
                "Employer":             "",
                "TranslatorReqiured":   false,
                "ExPupil":              false,
                "MedicalType":          "",
                "VisaNumber":           "",
                "MemberOfArmedForces":  false,
                "PhoneDetails":         [{
                                            "Type":     "Home",
                                            "Number":   "01332225225",
                                            "SmsFlag":  false,
                                            "Phoneid":  3
                                        },{
                                            "Type":     "Mobile",
                                            "Number":   "0777707777",
                                            "SmsFlag":  true,
                                            "PhoneId":  3
                                        }],
                "AddressDetails":       [{
                                            "Country":  "UGBR",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire"
                                            "PostCode": "DD55 36DD"
                                            "AddressId":2
                                        }]
            }
            
            

## Create/Update Contact Records [/contacts]

### Create Contact [POST]

Create one to many contact records  

Minimum Parameters
- Surname
- Forename
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "ContactCode":          "3447", ...this is user field to match what is returned
                "Title":                "Mr",
                "Surname":              "King",
                "Forename":             "Ice",
                "MiddleName":           "",
                "Gender":               "M",
                "Email":                "ice.king@home.com",
                "Language":             "English",
                "Occupation":           "",
                "Nationality":          "UK",
                "IsMedicalContact":     true,
                "WorkEmail":            "",
                "Employer":             "",
                "TranslatorReqiured":   false,
                "ExPupil":              false,
                "MedicalType":          "",
                "VisaNumber":           "",
                "MemberOfArmedForces":  false,
                "PhoneDetails":         [{
                                            "Type":     "H",
                                            "Number":   "013332552552",
                                            "SmsFlag":  false
                                        },{
                                            "Type":     "M",
                                            "Number":   "07707707707",
                                            "SmsFlag":  true
                                        }],
                "AddressDetails":       [{
                                            "Country":  "United Kingdom",
                                            "Type":     "H",
                                            "Flat":     "3a",
                                            "Number":   "1",
                                            "Street":   "The Street",
                                            "Locality": "Belper",
                                            "Town":     "Derby",
                                            "County":   "Derbyshire"
                                            "PostCode": "DD55 36DD"
                                        }]
            },
            {
                "ContactCode":          "3448",
                "title":                "Mr",
                "surname":              "Princess",
                "forename":             "Fire",
                "middleName":           "",
                "gender":               "M",
                "email":                "fire.princess@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     false,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "type":     "H",
                                            "number":   "01332225225",
                                            "smsFlag":  false
                                        },{
                                            "type":     "M",
                                            "number":   "0777707777",
                                            "smsFlag":  true
                                        }],
                "addressDetails":       [{
                                            "country":  "United Kingdom",
                                            "type":     "H",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                        }]
            }
    


+ Response 200

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "ContactId": 000001,
                "ContactCode": "",
                "PhoneDetails": [
                                  {
                                    "PhoneId": 2446053
                                  }
                                ],
                "AddressDetails":[
                                  {
                                    "AddressId": 1506677
                                  }
                                ]
            }


### Update Contact [PUT]

Update one to many contact records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
    
            {
                "contactId":            000001,
                "title":                "Mr",
                "surname":              "King",
                "forename":             "Ice",
                "middleName":           "",
                "gender":               "M",
                "email":                "ice.king@home.com",
                "language":             "English",
                "occupation":           "",
                "nationality":          "UK",
                "isMedicalContact":     true,
                "workEmail":            "",
                "employer":             "",
                "translatorReqiured":   false,
                "exPupil":              false,
                "medicalType":          "",
                "visaNumber":           "",
                "memberOfArmedForces":  false,
                "phoneDetails":         [{
                                            "phoneId":  "2446053",
                                            "type":     "H",
                                            "number":   "0133321111111",
                                            "smsFlag":  false
                                        },{
                                             "phoneId":  00005,
                                            "type":     "M",
                                            "number":   "07707707707",
                                            "smsFlag":  false
                                        }],
                "addressDetails":       [{
                                            "AddressId":"1506677",
                                            "country":  "United Kingdom",
                                            "type":     "W",
                                            "flat":     "3a",
                                            "number":   "1",
                                            "street":   "The Street",
                                            "locality": "Belper",
                                            "town":     "Derby",
                                            "county":   "Derbyshire"
                                            "postCode": "DD55 36DD"
                                            
                                        }]
            }

+ Response 200

    + Body
    
            
            {
                "Status": true,
                "Details": "Saved successfully",
                "ContactId": 000001,
                "ContactCode": "",
                "PhoneDetails": [
                                  {
                                    "PhoneId": 2446053
                                  }
                                ],
                "AddressDetails":[
                                  {
                                    "AddressId": 1506677
                                  }
                                ]
            }


# Group Learners

## Learners Collection [/Learners{?Status}{?LearnerId}]

Collection of all learner-related resources

**PersonId is unique across the school's database**
**Updated to include EAL**
**Updated to include new Census fields**

### Retrieve a collection of learners [GET]

+ Parameters
    + Status (optional, string, `Active`) ... returns Active, Draft or Left Learners
    + LearnerId (optional, int, `12344567`) ...returns a specific Learner
    
+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "PersonId": 654987,
                "LearnerId": 98136,
                "LearnerCode": "000869",
                "UPN": "N870202302327",
                "ULN": "3414389778",
                "Surname": "Phipps",
                "Forename": "Yizhi",
                "LegalSurname": "Phipps",
                "LegalForename": "Yizhi",
                "DateOfBirth": "19-11-1996 00:00:00",
                "Year": "13",
                "Course": "Adv:",
                "DateOfEntry": "06-01-2014 00:00:00",
                "Gender": "F",
                "RegGroup": "Leaving",
                "Ethnicity": "WBRI",
                "EthnicitySource": "P",
                "EnrolementStatus": "C",
                "NCYear": "14",
                "Status": "Active",
                "AcademicHouse": "Holmes",
                "MiddleName": "MAY",
                "FormerSurname": "",
                "EmailAddress": "Yizhi.Phipps@advancedfirstline.com",
                "Notes": "",
                "HomeSalutation": "Mr and MrsPhipps",
                "Boarder": "N",
                "PartTime": false,
                "FormerUPN": "",
                "GAndT": false,
                "MedicalFlag": false,
                "YSSAIndicator": "SNR",
                "Nationality": "",
                "ServiceChild": "N",
                "ServiceChildSource": "S",
                "TopUpFunding": false,
                "FundedHours": null,
                "HoursAtSetting": null,
                "UnitContactTime": null,
                "SchoolLunchTaken": false,
                "MealType": "",
                "AsylumSeeker": true,
                "Religion": "",
                "EAL": false,
                "IsEconomicCriteria": null,
                "IsHighLevelSENorDisability": null,
                "IsLookedAfterorAdoptedFromCare": null,
                "PhoneDetails":     [
                                      {
                                        "Type": "M",
                                        "Number": "01111567891",
                                        "SMSFlag": true,
                                        "PhoneId": 1346330
                                      }
                                    ],
                "AddressDetails":   [
                                      {
                                        "Country": "GBR",
                                        "Type": "H",
                                        "Flat": "",
                                        "Number": "25",
                                        "Street": "Portsmouth Road",
                                        "Locality": "Cobham",
                                        "Town": "Surrey",
                                        "County": "Derbyshire",
                                        "PostCode": "DE11 1TF",
                                        "AddressId": 319830
                                      }
                                    ],
                "ContactDetails":   [
                                      {
                                        "ContactId": 223479,
                                        "ForeName": "Wyrner",
                                        "SurName": "Skordi",
                                        "Relationship": "FAM",
                                        "Description": "Father",
                                        "WrittenCommunication": "",
                                        "Priority": 3,
                                        "ContactPrioritySource": "",
                                        "EmergencyContactLevel": "None",
                                        "NextOfKin": false,
                                        "AddressDisclosure": false,
                                        "AddressTransferred": false,
                                        "ParentalResponsibility": false,
                                        "FeePayer": false,
                                        "ParentalPortal": false,
                                        "HomeAddressLink": false,
                                        "OtherHomeAddressLink": false,
                                        "SendSMS": false,
                                        "Title": "Mrs",
                                        "Gender": "F"
                                      },
                                      {
                                        "ContactId": 223480,
                                        "ForeName": "Valerie Giselle",
                                        "SurName": "Phipps",
                                        "Relationship": "PAM",
                                        "Description": "Mother",
                                        "WrittenCommunication": "",
                                        "Priority": 2,
                                        "ContactPrioritySource": "",
                                        "EmergencyContactLevel": "",
                                        "NextOfKin": false,
                                        "AddressDisclosure": false,
                                        "AddressTransferred": false,
                                        "ParentalResponsibility": true,
                                        "FeePayer": false,
                                        "ParentalPortal": false,
                                        "HomeAddressLink": true,
                                        "OtherHomeAddressLink": false,
                                        "SendSMS": false,
                                        "Title": "Mr",
                                        "Gender": "M"
                                      }
                                    ],
                "SiblingDetails":   [
                                      {
                                        "LearnerId": 98653,
                                        "LearnerCode": "001450"
                                      }
                                    ],
                "DisabilityDetails":[
                                      {
                                        "DisabilityTypeId": 109435,
                                        "Disability": "NCOL"
                                      }
                                    ],
                "LanguageDetails":  [
                                      {
                                        "LanguageUsageId": 227853,
                                        "TypeCode": "F",
                                        "LanguageCode": "ENG",
                                        "LevelOfLanguage": null,
                                        "Description": "English"
                                      }
                                    ],
                "SENProvisionDetails": [
                                          {
                                            "ProvisionId": 198857,
                                            "ProvisionTypeCode": "A",
                                            "StartDate": "01/01/2009",
                                            "ReviewDate": "03/05/2013",
                                            "EndDate": "08/04/2014"
                                          }
                                        ],
                "SENMajorNeedsDetails": [
                                          {
                                            "LearnerMajorNeedId": 79411,
                                            "MajorNeedCode": "SEMH",
                                            "Ranking": 1
                                          }
                                        ]
            }


## Create/Update Learner Records [/learners]

### Create Learner [POST]
**Further fields have been added to this method and are now available**

Create one to many learner records  

Mandatory fields:

- Surname, Forename, Learner Code, Date of Birth are mandatory fields
    
- Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory
    
- Phone is not mandatory but if included: Type and Number are mandatory
    
- Contacts are not mandatory but if included: Title, Forename, Surname, Relationship and Gender are mandatory
    
- Language is not mandatory but if included: TypeCode and LangCode are mandatory
    
- SENProvision is not mandatory but if included: ProvisionTypeCode and StartDate are mandatory
    
- SENMajorNeeds is not mandatory but if included: MajorNeedCode and Ranking are mandatory
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "LearnerCode": "1010104",
                "Surname": "Bartkowicz",
                "Forename": "Naomi",
                "LegalSurname": "Bartkowicz",
                "LegalForename": "Naomi",
                "DateOfBirth": "23-10-1999 00:00:00",
                "Year": "13",
                "Course": "KS5",
                "DateOfEntry": "06-09-2017 00:00:00",
                "Gender": "F",
                "RegGroup": "",
                "Ethnicity": "WBRI",
                "EthnicitySource": "P",
                "EnrolementStatus": "C",
                "NCYear": "11",
                "Status": "Active",
                "AcademicHouse": "",
                "MiddleName": "",
                "FormerSurname": "",
                "EmailAddress": "",
                "Notes": "",
                "HomeSalutation": "",
                "Boarder": "N",
                "PartTime": false,
                "FormerUPN": "",
                "GAndT": false,
                "MedicalFlag": false,
                "YSSAIndicator": "",
                "Nationality": "",
                "ServiceChild": "N",
                "ServiceChildSource": "",
                "TopUpFunding": false,
                "FundedHours": 0,
                "HoursAtSetting": 0,
                "UnitContactTime": null,
                "SchoolLunchTaken": false,
                "MealType": "",
                "AsylumSeeker": true,
                "Religion": "NO",
                "ReligionSource": "P",
                "ExtendedChildcareHours": 10.5,
                "DisabilityAccessFundIndicator":true,
                "EYPPEligibility":true,
                "EYPPBasisOfEligibility":"EE",
                "ThirtyHourCode": 123456789,
                "IsEconomicCriteria": true,
                "IsHighLevelSENorDisability": true,
                "IsLookedAfterorAdoptedFromCare": true,
                "PhoneDetails": [
                                  {
                                    "Type": "H",
                                    "Number": "01332257536",
                                    "SMSFlag": false
                                  }
                                ],
                "AddressDetails":[
                                  {
                                    "Country": "GBR",
                                    "Type": "H",
                                    "Flat": "",
                                    "Number": "256",
                                    "Street": "Spencer Street",
                                    "Locality": "Derby",
                                    "Town": "",
                                    "County": "",
                                    "PostCode": "DE14 8SL"
                                  }
                                ],
                "SiblingDetails": null,
                "DisabilityDetails": [
                                      {
                                        "DisabilityTypeId": 489772,
                                        "Disability": "NCOL"
                                      }
                                    ],
                "LanguageDetails": [
                                      {
                                        "LanguageUsageId": 436663,
                                        "TypeCode": "F",
                                        "LanguageCode": "ENG"
                                      }
                                    ],
                "SENProvisionDetails": [
                                          {
                                            "ProvisionId": 838218,
                                            "ProvisionTypeCode": "A",
                                            "StartDate": "06/03/2013",
                                            "ReviewDate": null,
                                            "EndDate": "07/01/2013"
                                          }
                                        ],
                "SENMajorNeedsDetails": [
                                          {
                                          "LearnerMajorNeedId": 79411,
                                          "MajorNeedCode": "SEMH",
                                          "Ranking": 1
                                            }
                                        ]
              }
             ]

+ Response 200

    + Body
    
            {
                    "Status": true,
                    "Details": "Saved successfully",
                    "LearnerId": 453758,
                    "LearnerCode": "2016-1000",
                    "PhoneDetails": [
                      {
                        "PhoneId": 2200855
                      }
                    ],
                    "AddressDetails": [
                      {
                        "AddressId": 1353316
                      }
                    ],
                    "ContactDetails": [
                      {
                        "ContactId": 968989,
                        "LearnerContactRelationshipId": 2054
                      }
                    ],
                    "SiblingDetails": [
                      {
                        "LearnerId": 443779
                      }
                    ],
                    "DisabilityDetails": [
                      {
                        "DisabilityTypeId": 2648
                      }
                    ],
                    "LanguageDetails": [
                      {
                        "LanguageId": 448983
                      }
                    ],
                    "SENProvisionDetails": [
                      {
                        "ProvisionId": 852001
                      }
                    ],
                    "SENMajorNeedsDetails": [
                      {
                        "MajorNeedId": 115706
                      }
                    ]
                  },
                  {
                    "Status": true,
                    "Details": "Saved successfully",
                    "LearnerId": 453759,
                    "LearnerCode": "2016-0005",
                    "PhoneDetails": [
                      {
                        "PhoneId": 2200856
                      }
                    ],
                    "AddressDetails": [
                      {
                        "AddressId": 1353317
                      }
                    ],
                    "ContactDetails": [
                      {
                        "ContactId": 968990,
                        "LearnerContactRelationshipId": 2054
                      }
                    ],
                    "SiblingDetails": [
                      {
                        "LearnerId": 443779
                      }
                    ],
                    "DisabilityDetails": [
                      {
                        "DisabilityTypeId": 2648
                      }
                    ],
                    "LanguageDetails": [
                      {
                        "LanguageId": 448984
                      }
                    ],
                    "SENProvisionDetails": [],
                    "SENMajorNeedsDetails": []
                  }
            
            

### Update Learner [PUT]

**Fields marked with ** are newly added**

Update one to many learner records            
            
**LearnerId is a mandatory field**

- Address is not mandatory but if included: Country, Type, Number, Street and Post Code are mandatory

- Phone is not mandatory but if included: Type and Number are mandatory

- Contacts are not mandatory but if included: Title, Forename, Surname, Relationship and Gender are mandatory

- Language is not mandatory but if included: TypeCode and LangCode are mandatory

- SENProvision is not mandatory but if included: ProvisionTypeCode and StartDate are mandatory

- SENMajorNeeds is not mandatory but if included: MajorNeed Code and Ranking are mandatory


+ Request (application/json)


    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "LearnerCode":        "2010-0001",
                "Surname":            "Sterling",
                "Forename":           "Geoffrey",
                "Status":             "Active",
                "RegGroup":           "ABC",
                "AcademicHouse":      "Hulland",
                "DateOfBirth":        "04-08-1999 00:00:00",
                "LegalSurname":       "Sterling",
                "LegalForename":      "Geoffrey",
                "MiddleName":         "James",
                "FormerSurname":      "Silver",
                "EmailAddress":       "af098453hsdf@c.co.uk",
                "Gender":             "M",
                "Notes":              "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut.",
                "HomeSalutation":     "Mr G Sterling",
                "DateOfEntry":        "01-09-2010 00:00:00",
                "Year":               "13",
                "Course":             "KS5",
                "NCYear":             "13",
                "Boarder":            "N",
                "IsEconomicCriteria":               null,
                "IsHighLevelSENorDisability":       null,
                "IsLookedAfterorAdoptedFromCare":   null,
                "AddressDetails":   [{
                                        "AddressId":    0001,
                                        "Country":      "GBR",
                                        "Type":         "H",
                                        "Flat":         "",
                                        "Number":       "23",
                                        "Street":       "Orchard Gardens",
                                        "Locality":     "Derby",
                                        "Town":         "",
                                        "County":       "",
                                        "PostCode":     "DE21 4FL"
                                    }],
                "PhoneDetails":     [{
                                        "PhoneId":      0001,
                                        "Type":         "H",
                                        "Number":       "01111567891",
                                        "SMSFlag":      false
                                    }],
                "ContactDetails":   [{
                                        "ContactId":    0001,
                                        "Title":        "Mrs",
                                        "Forename":     "Trillian",
                                        "Surname":      "Beelebrox",
                                        "Relationship": "PAM",
                                        "Gender":       "F",
                                        "WrittenCommunication":     "",
                                        "Priority":                 1,
                                        "ContactPrioritySource":    "",
                                        "EmergencyContactLevel":    "Primary",
                                        "NextOfKin":                false,
                                        "AddressDisclosure":        false,
                                        "AddressTransferred":       false,
                                        "ParentalResponsibility":   true,
                                        "FeePayer":                 false,
                                        "ParentalPortal":           true,
                                        "HomeAddressLink":          true,
                                        "OtherHomeAddressLink":     false,
                                        "SendSMS":                  true
                                    }],
                "SiblingDetails":   [{
                                        "LearnerCode":  "2014-0002"
                                    }],
                "PartTime":           false,
                "EnrolementStatus":   "C",
                "UPN":                "H502400200007",
                "FormerUPN":          "F502400200003",
                "ULN":                "P400200003",
                "GandT":              false,
                "MedicalFlag":        false,
                "YSSAIndicator":      "Y",
                "Nationality":        "GBR",
                "Ethnicity":          "WBRI",
                "EthnicitySource":    "P",
                "ServiceChild":       "N",
                "ServiceChildSource": "P",
                "TopUpFunding":       false,
                "FundedHours":        0.0,
                "HoursAtSetting":     0.0,
                "UnitContactTime":    0.0,
                "SchoolLunchTaken":   false,
                "MealType":           "CSM",
                "AsylumSeeker":       false,
                "Religion":           "HIN"
                "DisabilityDetails":[{
                                        "DisabilityTypeId":     0001,
                                        "Disability":  "CON"
                                    }],
                "LanguageDetails":  [{
                                        "LanguageUsageId":      0001,
                                        "TypeCode":             "F",
                                        "LangCode":             "ENG",
                                    }],
                "SENProvisionDetails":  [{
                                        "ProvisionId":          0003,
                                        "ProvisionTypeCode":    "E",
                                        "StartDate":            "19/09/2014"
                                        }],
                "SENMajorNeedsDetails": [{
                                        "LeanerMajorNeedId":          0001,
                                        "MajorNeedCode":        "SLD",
                                        "Ranking":              1
                                        }]
            }
            

+ Response 200 (application/json)
           
    + Body
    
            {
                "LearnerId":          02134,
                "LearnerCode":        "2010-0001",
                "Status":             "true",
                "Details":            "Saved successfully"
                "AddressDetails":   [{
                                        "AddressId":    0001
                                    }],
                "PhoneDetails":     [{
                                        "PhoneId":      0001
                                    }],
                "ContactDetails":   [{
                                        "ContactId":    0001
                                        "LearnerContactRelationshipId": 0002
                                    }],
                "SiblingDetails":   [{
                                        "LearnerId":   0002
                                    }],
                "DisabilityDetails":[{
                                        "DisabilityTypeId": 0001 
                                    }],
                "LanguageDetails":  [{
                                        "LanguageUsageId":   0002
                                    }],
                "SENProvisionDetails":  [{
                                            "ProvisionId":  0003
                                        }],
                "SENMajorNeedsDetails": [{
                                            "MajorNeedId":  0001
                                        }]
            } 


## LearnerOtherDetails [/LearnerOtherDetails{LearnerId}{LearnerCode}{Status}{DateModified}]

+ Parameters

    + LearnerId     (optional, int, `00001`) ... the unique identifier of the learner
    + LearnerCode   (optional, string, `2015-00001`) ... the unique code of the learner 
    + DateModified  (optional, dateTime, `01-04-2014T18:00:00`) ... learner records modified since
    + Status        (optional, string, `Active`) ... Status of the learner - Active, Lft, Draft
    
           

### Retrieve a collection of Learner Other Details [GET]

Retrieve one or more Learner Other Details records

*Updated to include Prior Attainment*

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
            "LearnerId":        443756,   
            "LearnerCode":      "2010-0001",
            "Surname":          "Sterling",
            "Forename":         "Geoffrey",
            "Status":           "Active",
            "Traveller":        "GH",
            "TravellerSource":  "P",
            "CurrentDeprivationEver6":  true,
            "CurrentServiceChild":      false,
            "CurrentAdoptedfromCare":   false,
            "CurrentLookedAfter":       false,
            "CurrentPupilPremium":      true,
            "LAC":              true,
            "LACCurSch":        true,
            "LACLA":            "370",
            "HomeLA":           "871",
            "CPR":              false,
            "CPRLA":            null,
            "PEP":              false,
            "PPI":              false,
            "AdoptedFromCare":  "N",
            "Notes":            "Lorem ipsum",
            "CountryOfBirth":   "NYO",
            "Refugee":          true,           
            "ExclusionDetails": [{
                                    "ExclusionId":          0001,
                                    "Category":             "FIXD",
                                    "Reason":               "PP",
                                    "StartDate":            "2014-07-02",
                                    "EndDate":              "2014-07-02",
                                    "StartSession":         "AM",
                                    "EndSession":           "PM",
                                    "Notes":                "Act of agression towards another pupil",
                                    "TotalDays":            1,
                                    "TotalSessions":        2,
                                    "LAC":                  false,
                                    "HeadNotified":         null,
                                    "GovMeeting":           null,
                                    "ProvisionStartDate":   null,
                                    "ProvisionDetails":     null,
                                    "Appeal":               false,
                                    "AppealDate":           null,
                                    "AppealCutOff":         null,
                                    "ExclusionHearing":     null,
                                    "Outcome":              "E",
                                    "ReintegrationMeetingDate": null,
                                    "ReintegrationNotes":       null,
                                    "ReinstatementDate":        null,
                                    "ReinstatementNotes":       ""
                                }],
            "FSMDetails":       [{
                                    "FSMId":        0001,
                                    "StartDate":    "2014-02-12",
                                    "ReviewDate":   "",
                                    "EndDate":      "2015-02-12",
                                    "CoutnryOfUk":  "ENG"
                                },
                                {
                                    "FSMId":        0002,
                                    "StartDate":    "2015-02-12",
                                    "ReviewDate":   "2015-12-08",
                                    "EndDate":      "2016-02-12",
                                    "CoutnryOfUk":  "ENG"
                                }],
            "PPI1314Details":   [{
                                    "PPIId":        0001,
                                    "PPIndicator":  "DPP",
                                    "FTE":          1.00,
                                    "FYStartDate":  "2013-12-20",
                                    "FYEndDate":    "2014-12-14"
                                }],
            "PupilPremiumDetails":  [{
                                            "PupilPremiumRecordId":0001,
                                            "Deprivation":          true,
                                            "AdoptedFromCare":      false,
                                            "ServiceChild":         false,
                                            "LookedAfter":          false,
                                            "CashAmount":           935.00,
                                            "FTE":                  1,
                                            "FYStartDate":          "2014-04-01",
                                            "FYEndDate":            "2015-03-31",
                                            "Notes":                "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                                    }]
                                    },
            "GandTDetails":         [{
                                        "GandTId":      0001,
                                        "GandTStatus":  "G",
                                        "StartDate":    "2015-02-23",
                                        "EndDate":      null,
                                        "Subject":      "EN",
                                        "Notes":        ""
                                    }],
            "SchoolHistoryDetails": [{
                                        "SchoolHistoryId": 0001,
                                        "LANumber":     "999",
                                        "SchoolNumber": "6213",
                                        "SchoolName":   "Advanced Learninig Academy",                                
                                        "EntryDate":    "2009-09-04",
                                        "LeavingDate":  "2010-01-08",
                                        "LeavingReason":"PM"
                                    },{
                                        "SchoolHistoryId": 0001,
                                        "LANumber":     "999",
                                        "SchoolNumber": "6124",
                                        "SchoolName":   "Queens College Academy",                                
                                        "EntryDate":    "2010-09-01",
                                        "LeavingDate":  "2016-02-05",
                                        "LeavingReason":"OT"
                                    }]
            "ProficiencyDetails":   [
                                      {
                                        "LearnerProficiencyId": 32689,
                                        "Proficiency": "E",
                                        "AssessedDate": "2017-01-09"
                                      }
                                    ],
            "NationalityDetails":   [
                                      {
                                        "LearnerNationalityId": 212359,
                                        "Type": "FRSTN",
                                        "Nationality": "NYO"
                                      }
                                    ],
            "LeavingDetails":        {
                                        "LeavingDate":          "10-08-2015",
                                        "Destination":          "Progresso Academy",
                                        "Reason":               "EL"
                                    }
            }

            
+ Response 204 (application/json)


### Create Learner Other Details [POST]

Create one or more Learner Other Details records

**Deployed to Live PROAPI-34**

Mandatory fields:

**LearnerId is mandatory**
- Exclusion in not mandatory but if used: Category, Reason, StartDate are mandatory
    
    If Category = FXD or LCH: EndDate, StartSession, EndSession are also mandatory
- FSM is not mandatory but if used: StartDate is mandatory
- Pupil Premium 13/14 is not mandatory but if used: Pupil Premium Indicator, Full Time Equivalent, Pupil Premium FY Start Date and Pupil Premium FY End Date are mandatory
- Pupil Premiums is not mandatory but if used: Pupil Premium Cash Amount, Full Time Equivalent, Pupil Premium FY Start Date and Pupil Premium FY End Date are mandatory
- Gifted and Talented is not not mandatory but if used: G&TStatus, StartDate and Subject are mandatory
- School History is not mandatory but it used: School Name, Leaving Date and Leaving Reason are mandatory

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
            
            { 
            "LearnerId":        443756,   
            "LearnerCode":      "2010-0001",
            "Traveller":        "GH",
            "TravellerSource":  "P",
            "CurrentDeprivationEver6":  true,
            "CurrentServiceChild":      false,
            "CurrentAdoptedfromCare":   false,
            "CurrentLookedAfter":       false,
            "CurrentPupilPremium":      true,
            "LAC":              true,
            "LACCurSch":        true,
            "LACLA":            "370",
            "HomeLA":           "871",
            "CPR":              false,
            "CPRLA":            null,
            "PEP":              false,
            "PPI":              false,
            "AdoptedFromCare":  "N",
            "Notes":            "Lorem ipsum",
            "Refugee":          true,
            "EvidenceProvided": true,
            "ProofOfId":        "PASS"
            "ExclusionDetails":[{
                                "Category":         "FIXD",
                                "Reason":           "PP",
                                "StartDate":        "2014-07-02",
                                "EndDate":          "2014-07-02",
                                "StartSession":     "AM",
                                "EndSession":       "PM",
                                "Notes":            "Act of aggression towards another pupil",
                                "TotalDays":        1,
                                "TotalSessions":    2,
                                "LAC":              false,
                                "HeadNotified":     null,
                                "GovMeeting":       null,
                                "ProvisionStartDate":   null,
                                "ProvisionDetails":     null,
                                "Appeal":           false,
                                "AppealDate":       null,
                                "AppealCutOff":     null,
                                "ExclusionHearing": null,
                                "Outcome":          "E",
                                "ReintegrationMeetingDate": null,
                                "ReintegrationNotes":       null,
                                "ReinstatementDate":        null,
                                "ReinstatementNotes":       ""
                            }],
            "FSMDetails":   [{
                                "StartDate":    "2014-02-12",
                                "ReviewDate":   "",
                                "EndDate":      "2015-02-12",
                                "CountryOfUk":  "ENG"
                            },
                            {
                                "StartDate":    "2015-02-12",
                                "ReviewDate":   "2015-12-08",
                                "EndDate":      "2016-02-12",
                                "CountryOfUk":  "ENG"
                            }],
            "PPI1314Details":       [{
                                    "PPIndicator":  "DPP",
                                    "FTE":          1.00,
                                    "FYStartDate":  "2013-12-20",
                                    "FYEndDate":    "2014-12-14"
                                    }],
            "PupilPremiumDetails":  [{
                                    "Deprivation":      true,
                                    "AdoptedFromCare":  false,
                                    "ServiceChild":     false,
                                    "LookedAfter":      false
                                    "CashAmount":       "935.00",
                                    "FTE":              1.0,
                                    "FYStartDate":      "2014-04-01",
                                    "FYEndDate":        "2015-03-31",
                                    "Notes":            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                                    }],
            "GandTDetails": [{
                                        "GandTStatus":    "Gifted",
                                        "StartDate":    "2015-02-23",
                                        "EndDate":      null,
                                        "Subject":      "EN",
                                        "Notes":        ""
                                    }],
            "SchoolHistoryDetails": [{
                                    "LANumber":     "999",
                                    "SchoolNumber":  "6213",
                                    "SchoolName":   "Advanced Learninig Academy",                                
                                    "EntryDate":    "2009-09-04",
                                    "LeavingDate":  "2010-01-08",
                                    "LeavingReason":"PM"
                                    },{
                                    "LANumber":     "999",
                                    "SchoolNumber":  "1234",
                                    "SchoolName":   "Queens College Academy",                                
                                    "EntryDate":    "2010-09-01",
                                    "LeavingDate":  "2016-02-05",
                                    "LeavingReason":"OT"
                                    }],
            "LeavingDetails":       {
                                        "LeavingDate":          "10-08-2015",
                                        "Destination":          "Progresso Academy",
                                        "Reason":               "EL"
                                    },
            "ProficiencyDetails":   [
                                      {
                                        "Proficiency": "C",
                                        "AssessedDate": "2015-09-21"
                                      },
                                      {
                                        "Proficiency": "D",
                                        "AssessedDate": "2016-09-26"
                                      }
                                    ],
            "NationalityDetails":   [
                                      {
                                        "Type": "FRSTN",
                                        "Nationality": "GRC"
                                      }
                                    ],
            "CountryOfBirth":       "GRL",
            "EnglishAttainment":    "A"        
            "EnglishAttainmentYear":1,
            "EnglishExemption":     "L",
            "MathsAttainment":      "B",
            "MathsAttainmentYear":  2,
            "MathsExemption":       "O",
            "FullTimeEmployment":   false,
            "SupportCodeDetails":   [
                                            {
                                                "SupportCode":      32,
                                                "AwardedDate"       "16/11/2017"
                                            },
                                            {
                                                "SupportCode":      55,
                                                "AwardedDate"       "16/11/2017"
                                            }
                                        ],
            "FullTimeEmployment":   false
            }
          

+ Response 200

    + Body
    
            {  
            "LearnerId":            443756,   
            "LearnerCode":          "2010-0001",
            "Status":               true,
            "Details":              "Saved successfully",
            "ExclusionDetails": [{
                                    "ExclusionId":  0001
                                }],
            "FSMDetails":       [{
                                    "FSMId":        0001
                                },
                                {
                                    "FSMId":        0002
                                }],
            "PPI1314Details":   [{
                                    "PPIId":        0001
                                }],
            "PupilPremiumDetails":[{
                                    "PupilPremiumRecordId":     001
                                  }],
            "GandTDetails":     [{
                                    "GandTId":      0001
                                }],
            "SchoolHistoryDetails": [{
                                    "SchoolHistoryId":0001
                                    },{
                                    "SchoolHistoryId":0002
                                    }]
            "ProficiencyDetails:    [{
                                    "ProficiencyId": 0001
                                    },{
                                    "ProficiencyId": 0002
                                    }]
            "NatoinalityDetails":   [{
                                    "NationalityId": 0001
                                    }],
            "SupportCodeDetails":   [
                                    {
                                        "LearnerSupportCodeDetailId": 16609
                                    },
                                    {
                                        "LearnerSupportCodeDetailId": 16610
                                    }
                                    ]
            }


### Update a collection of Learner Other Details [PUT]

 Update one to many one to many learner other detail records    

**LearnerId is mandatory**
- Exclusion in not mandatory but if used: Category, Reason, StartDate are mandatory
                 (i) If Category = FXD or LCH: EndDate, StartSession, EndSession are also mandatory
                 
- FSM is not mandatory but if used: StartDate is mandatory

- Pupil Premium 13/14 is not mandatory but if used: Pupil Premium Indicator, Full Time Equivalent, Pupil Premium FY Start Date and Pupil Premium FY End Date are mandatory

- Pupil Premiums is not mandatory but if used: Pupil Premium Cash Amount, Full Time Equivalent, Pupil Premium FY Start Date and Pupil Premium FY End Date are mandatory

- Gifted and Talented is not not mandatory but if used: G&TStatus, StartDate and Subject are mandatory

- School History is not mandatory but it used: School Name, Leaving Date and Leaving Reason are mandatory


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
        
            { 
                "LearnerId":        443756,   
                "LearnerCode":      "2010-0001",
                "Traveller":        "GH",
                "TravellerSource":  "P",
                "CurrentDeprivationEver6":  true,
                "CurrentServiceChild":      false,
                "CurrentAdoptedfromCare":   false,
                "CurrentLookedAfter":       false,
                "CurrentPupilPremium":      true,
                "LAC":              true,
                "LACCurSch":        true,
                "LACLA":            "370",
                "HomeLA":           "871",
                "CPR":              false,
                "CPRLA":            null,
                "PEP":              false,
                "PPI":              false,
                "AdoptedFromCare":  "N",
                "Notes":            "Lorem ipsum",
                "Refugee":          true
                "ExclusionDetails":[{
                                    "ExclusionId":      0001,
                                    "Category":         "FIXD",
                                    "Reason":           "PP",
                                    "StartDate":        "2014-07-02",
                                    "EndDate":          "2014-07-02",
                                    "StartSession":     "AM",
                                    "EndSession":       "PM",
                                    "Notes":            "Act of aggression towards another pupil",
                                    "TotalDays":        1,
                                    "TotalSessions":    2,
                                    "LAC":              false,
                                    "HeadNotified":     null,
                                    "GovMeeting":       null,
                                    "ProvisionStartDate":   null,
                                    "ProvisionDetails":     null,
                                    "Appeal":           false,
                                    "AppealDate":       null,
                                    "AppealCutOff":     null,
                                    "ExclusionHearing": null,
                                    "Outcome":          "E",
                                    "ReintegrationMeetingDate": null,
                                    "ReintegrationNotes":       null,
                                    "ReinstatementDate":        null,
                                    "ReinstatementNotes":       ""
                                }],
                "FSMDetails":   [{
                                    "FSMId":        0001
                                    "StartDate":    "2014-02-12",
                                    "ReviewDate":   "",
                                    "EndDate":      "2015-02-12",
                                    "CoutnryOfUk":  "ENG"
                                },
                                {
                                    "StartDate":    "2015-02-12",
                                    "ReviewDate":   "2015-12-08",
                                    "EndDate":      "2016-02-12",
                                    "CoutnryOfUk":  "ENG"
                                }],
                "PPI1314Details":       [{
                                        "PPIId":    0001
                                        "PPIndicator":  "DPP",
                                        "FTE":          1.00,
                                        "FYStartDate":  "2013-12-20",
                                        "FYEndDate":    "2014-12-14"
                                        }],
                "PupilPremiumDetails":  [{
                                        "PupilPremiumRecordId":     001
                                        "Deprivation":      true,
                                        "AdoptedFromCare":  false,
                                        "ServiceChild":     false,
                                        "LookedAfter":      false
                                        "CashAmount":       "935.00",
                                        "FTE":              1.0,
                                        "FYStartDate":      "2014-04-01",
                                        "FYEndDate":        "2015-03-31",
                                        "Notes":            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                                        }],
                "GandTDetails":         [{
                                        "GandTId":  0001
                                        "GandTStatus":    "Gifted",
                                        "StartDate":    "2015-02-23",
                                        "EndDate":      null,
                                        "Subject":      "EN",
                                        "Notes":        ""
                                        }],
                "SchoolHistoryDetails": [{
                                        "SchoolHistoryId":0001
                                        "LANumber":     "999",
                                        "SchoolNumber":  "6213",
                                        "SchoolName":   "Advanced Learninig Academy",                                
                                        "EntryDate":    "2009-09-04",
                                        "LeavingDate":  "2010-01-08",
                                        "LeavingReason":"PM"
                                        },{
                                        "SchoolHistoryId":0002
                                        "LANumber":     "999",
                                        "SchoolNumber":  "1234",
                                        "SchoolName":   "Queens College Academy",                                
                                        "EntryDate":    "2010-09-01",
                                        "LeavingDate":  "2016-02-05",
                                        "LeavingReason":"OT"
                                        }]
                "LeavingDetails":       {
                                        "LeavingDate":          "10-08-2015",
                                        "Destination":          "Progresso Academy",
                                        "Reason":               "EL"
                                    },
                "ProficiencyDetails":   [
                                        {
                                        "Proficiency": "C",
                                        "AssessedDate": "2015-09-21"
                                        },
                                        {
                                        "Proficiency": "D",
                                        "AssessedDate": "2016-09-26"
                                        }
                                        ],
                "NationalityDetails":   [
                                        {
                                        "Type": "FRSTN",
                                        "Nationality": "GRC"
                                        }
                                        ],
                "CountryOfBirth":       "GRL"
                }
            

+ Response 200

    + Body
    
            {  
            "LearnerId":        443756,   
            "LearnerCode":      "2010-0001",
            "Status":           true,
            "Details":          "Saved successfully",
            "ExclusionDetails": [{
                                "ExclusionId":  0001
                                }],
            "FSMDetails":       [{
                                "FSMId":        0001
                                },
                                {
                                "FSMId":        0002
                                }],
            "PPI1314Details":   [{
                                "PPIId":    0001
                                }],
            "PupilPremiumDetails":[{
                                    "PupilPremiumRecordId":     001
                                  }],
            "GandTDetails":     [{
                                "GandTId":  0001
                                }],
            "SchoolHistoryDetails": [{
                                    "SchoolHistoryId":0001
                                    },{
                                    "SchoolHistoryId":    0002
                                    }]
            }



## Learner Contacts [/LearnerContacts{?LearnerId}{?status}{?responsibility}{?priority}]

*Addtional fileds have been added to this method to make it more useful*

### Retrieve a Contacts associated to a learner [GET]

+ Parameters
    + LearnerId (optional, int, `123456`) ... unique Id of Learner
    + status (optional, string, `Active`) ... returns Active, Draft or Left learners when used
    + responsibility (optional, boolean, `true`) ... Filter Contacts returned to contacts with Parental Responsibilty
    + priority (optional, int, `1`) ... Filter Contacts returned to contacts with priority of that passed


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "LearnerId": 443756,
                "LearnerCode": "7791",
                "UPN": null,
                "LearnerContactDetails":[
                                        {
                                            "PersonId": 458235,
                                            "ContactId": 949950,
                                            "ForeName": "Colleen",
                                            "SurName": "Sterling",
                                            "Relationship": "PAM",
                                            "WrittenCommunication": "",
                                            "Priority": 1,
                                            "ContactPrioritySource": "",
                                            "EmergencyContactLevel": "Primary",
                                            "NextOfKin": true,
                                            "AddressDisclosure": false,
                                            "AddressTransferred": false,
                                            "ParentalResponsibility": true,
                                            "FeePayer": false,
                                            "ParentalPortal": true,
                                            "HomeAddressLink": true,
                                            "OtherHomeAddressLink": false,
                                            "SendSMS": false,
                                            "Title": "Mrs",
                                            "Gender": "F",
                                            "Email": "CDavitt@advancedfirstline.com",
                                            "PhoneDetails": [
                                                              {
                                                                "Type": "H",
                                                                "Number": "01111567891",
                                                                "SMSFlag": false,
                                                                "PhoneId": 2165134
                                                              }
                                                            ],
                                            "AddressDetails": [
                                                              {
                                                                "Country": "GBR",
                                                                "Type": "H",
                                                                "Flat": "",
                                                                "Number": "23",
                                                                "Street": "Orchard Gardens",
                                                                "Locality": "Derby",
                                                                "Town": "",
                                                                "County": "",
                                                                "PostCode": "DE21 4FL",
                                                                "AddressId": 1322284
                                                              }
                                                              ]
                                        }
                                        ]
            }


### Create Contacts associated to a learner [POST]

+ Mandatory fields
    + LearnerCode (required, string, '015234') ... unique code of the Learner
    + Title (required, string, 'Mr') ... title of the Contact
    + Surname (required, string, 'King') ... surname of the Contact
    + Forename (required, string, 'Jo') ... forename of the Contact
    + Gender (required, string, 'M') ... gender of the Contact
    + Relationship (required, string, 'PAF') ... relationship of the Contact to Learner


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "LearnerCode":          "115246",
                "Title":                "Mr",
                "Surname":              "King",
                "Forename":             "Jo",
                "MiddleName":           "John",
                "Gender":               "M",
                "Email":                "jo.king@home.com",
                "Language":             "Eng",
                "Occupation":           "Builder",
                "Nationality":          "GBR",
                "IsMedicalContact":     true,
                "WorkEmail":            "Ice.King@oneadvanced.com",
                "Employer":             "Advanced",
                "TranslatorReqiured":   false,
                "ExPupil":              false,
                "MedicalType":          "DR",
                "VisaNumber":           "09823452",
                "MemberOfArmedForces":  false,
                "PhoneDetails":         [{
                                            "Type":     "H",
                                            "Number":   "013332552552",
                                            "SmsFlag":  false
                                        },{
                                            "Type":     "M",
                                            "Number":   "07707707707",
                                            "SmsFlag":  true
                                        }],
                "AddressDetails":       [{
                                            "Country":      "GBR",
                                            "Type":         "H",
                                            "Flat":         "3a",
                                            "Number":       "1",
                                            "Street":       "The Street",
                                            "Locality":     "Belper",
                                            "Town":         "Derby",
                                            "County":       "Derbyshire",
                                            "PostCode":     "DD55 36DD"
                                        }],
                "Relationship":             "PAF",
                "WrittenCommunication":    "E",
                "Priority":                 1,
                "PrioritySource":           "O",
                "EmergencyLevel":           "Primary",
                "NextOfKin":                true,
                "AddressDisclosure":        false,
                "AddressTransferred":       false,
                "ParentalResponsibility":   true,
                "FeePayer":                 false,
                "ParentalPortal":           true,
                "HomeAddressLink":          true,
                "OtherHomeAddressLink":     false,
                "SendSMS":                  true
            }
 
 
+ Response 200

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "LearnerId":    123456,
                "LearnerCode":  "015234",
                "ContactId":    456789,
                "PhoneDetails": [
                                  {
                                    "PhoneId": 2446053
                                  }
                                ],
                "AddressDetails":[
                                  {
                                    "AddressId": 1506677
                                  }
                                ]
            }
            

### Update Contacts associated to a learner [PUT]

+ Mandatory fields
    + LearnerCode (required, string, '015234') ... unique code of the Learner
    + ContactId (required, int, 456789) ... unique id of the Contact
    
+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
            
            {
                "LearnerId": 460382,
                "ContactId": 1578478,
                "LearnerCode":          "116335",
                "Title":                "Mr",
                "Surname":              "King",
                "Forename":             "Joe",
                "MiddleName":           "John",
                "Gender":               "M",
                "Email":                "joe.king@home.com",
                "Language":             "Eng",
                "Occupation":           "Builder",
                "Nationality":          "GBR",
                "IsMedicalContact":     true,
                "WorkEmail":            "Ice.King@oneadvanced.com",
                "Employer":             "Advanced",
                "TranslatorReqiured":   false,
                "ExPupil":              false,
                "MedicalType":          "DR",
                "VisaNumber":           "09823452",
                "MemberOfArmedForces":  false,
                "PhoneDetails":         [{
                                            "PhoneId": 3030394,
                                            "Type":     "H",
                                            "Number":   "013352552552",
                                            "SmsFlag":  false
                                        },{
                                            "PhoneId": 3030395,
                                            "Type":     "M",
                                            "Number":   "077077076217",
                                            "SmsFlag":  true
                                        }],
                "AddressDetails":       [{
                                            "AddressId": 2092739,
                                            "Country":      "GBR",
                                            "Type":         "H",
                                            "Flat":         "3a",
                                            "Number":       "1",
                                            "Street":       "The High Street",
                                            "Locality":     "Belper",
                                            "Town":         "Derby",
                                            "County":       "Derbyshire",
                                            "PostCode":     "DD55 36DD"
                                        }]
            }
            

+ Response 200

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "LearnerId":    123456,
                "LearnerCode":  "015234",
                "ContactId":    456789,
                "PhoneDetails": [
                                  {
                                    "PhoneId": 2446053
                                  }
                                ],
                "AddressDetails":[
                                  {
                                    "AddressId": 1506677
                                  }
                                ]
            }

## Learner Medical Conditions [/MedicalConditions]

### Create Medical Conditions for Learners [POST]

Create one to many Learner medical condition categories

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Code":     "MIG",
                "Name":     "Migraine"
            }
            
+ Response 200

    + Body
    
            {
                "Status":        true,
                "Details":       "Saved successfully",
                "ConditionId":   123456
            }
            

## Learner Health Details [/LearnerHealth{?since}]

### Retrieve a learner Health Details [GET]

+ Parameters
    + since (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body 
            
            {
                "LearnerCode":          "2013-00132",
                "LearnerId":             000001,
                "Allergies":            [{
                                            "Allergy": "EGG"
                                        },
                                        {
                                            "Allergy": "MILK"
                                        }],
                "FoodPreferences":      [{
                                            "FoodPreference": "DAIFR"
                                        }],
                "DietaryNotes":         "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                "Disabilities":         [{,
                                            "Disability": "NCOL"
                                        }],
                "DisabilityNotes":      "Lorem ipsum dolor sit amet",
                "MedicalConditions":    [{
                                            "Condition":    "ASTH",
                                            "InfoDate":     "2016-01-18",
                                            "Notes":        "Asthma Attack"
                                        }],
                "MedicalEvents":        [{
                                            "EventType":        "ACC",
                                            "FromDate":         "2016-01-18",
                                            "ToDate":           "2016-01-18",
                                            "IncidentLocation": "Office",
                                            "Notes":            "Lorem ipsum dolor sit amet",
                                            "MedicalEventId":    408569
                                        }]
            }
            

### Create/Update Learner Health [PUT]

Create and update one to many learner heatlh records            
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "LearnerId": 443790,
                "Allergies": [{
                                "Allergy": "EGG"
                              },{
                                "Allergy": "MILK"
                              },{
                                "Allergy": "PNUT"
                              }],
                "FoodPreferences":  [{
                                        "FoodPreference": "DAIFR"
                                      },{
                                        "FoodPreference": "GLFR"
                                    }],
                "DietaryNotes": "Lorem ipsum",
                "Disabilities": [{
                                    "Disability": "NCOL"
                                }],
                "DisabilityNotes": "Lorem ipsum",
                "MedicalConditions": [{
                                        "Condition": "ASTH",
                                        "InfoDate": "2016-01-18",
                                        "Notes": "Lorem ipsum"
                                      },{
                                        "Condition": "TRAV",
                                        "InfoDate": "2016-01-18",
                                        "Notes": "Ipsum lorem"
                                      }],
                "MedicalEvents":    [{
                                        "EventType": "ACC",
                                        "FromDate": "2016-01-18",
                                        "ToDate": "2016-01-18",
                                        "IncidentLocation": "GYM",
                                        "Notes": ""
                                    }]
            }
            

+ Response 200

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "LearnerId": 443790,
                "LearnerCode": "9196",
                "MedicalConditions": [{
                                        "Condition": "ASTH",
                                        "InfoDate": "18-01-2016 00:00:00",
                                        "Notes": null,
                                        "ConditionId": 225793
                                      },{
                                        "Condition": "TRAV",
                                        "InfoDate": "18-01-2016 00:00:00",
                                        "Notes": null,
                                        "ConditionId": 225800
                                      },{
                                        "Condition": "TRAV",
                                        "InfoDate": "18-01-2016 00:00:00",
                                        "Notes": "Ipsum lorem",
                                        "ConditionId": 225800
                                      }],
                "MedicalEvents":[{
                                    "EventType": "ACC",
                                    "FromDate": "18-01-2016 00:00:00",
                                    "ToDate": "18-01-2016 00:00:00",
                                    "IncidentLocation": "GYM",
                                    "Notes": null,
                                    "MedicalEventId": 117617
                                }]
            }
 

## Learner Exclusions [/LearnerExclusions{?StartDate}{?EndDate}]

### Retrieve a learner Exclusion Details [GET]

+ Parameters
    + StartDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    + EndDate (optional, dateTime, `01-04-2014T18:00:00`) ... Return records that have changed since date provided
    

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body 
            
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":       0001,
                "Exclusions":       [{
                                        "ExclusionId":  0001,
                                        "Category":     "FIXD",
                                        "Reason":       "",
                                        "StartDate":    "",
                                        "EndDate":      "",
                                        "StartSession": "",
                                        "EndSession":   "",
                                        "Notes":        "",
                                        "TotalDays":    5,
                                        "TotalSessions":10,
                                        "LAC":          false,
                                        "HeadNotified": "",
                                        "GovMeeting":   "",
                                        "ProvisionStartDate":   "",
                                        "ProvisionDetails":     "",
                                        "Appeal":           true,
                                        "AppealDate":       "",
                                        "AppealCutOff":     "",
                                        "ExclusionHearing": "",
                                        "Outcome":          "",
                                        "ReintregationMeetingDate": "",
                                        "ReintregationNotes":      "",
                                        "ReinstatementDate":        "",
                                        "ReinstatementNotes":       ""
                                    }]
            }
            

### Create Learner Exclusions [POST]

Create Exclusions for one to many learners

+ Mandatory fields
    + LearnerId
    + Exclusion Category
    + Exclusion Reason
    + StartDate
    + If Exclusion Category = FXD or LNCH: EndDate, TotalDays, Total Sessions
    + If Exclusion Category = FXD: StartSession, EndSession

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "LearnerId":    443768,
                "LearnerCode":  "7791",
                "Exclusions":   [{
                                    "Category": "FIXD",
                                    "Reason": "VA",
                                    "StartDate": "2015-10-20",
                                    "EndDate": "2015-10-20",
                                    "StartSession": "AM",
                                    "EndSession": "AM",
                                    "Notes": "Verbal abuse towards a member of staff. Refusing to go to buddy teacher",
                                    "TotalDays": null,
                                    "TotalSessions": 2,
                                    "LAC": true,
                                    "HeadNotified": null,
                                    "GovMeeting": null,
                                    "ProvisionStartDate": null,
                                    "ProvisionDetails": null,
                                    "Appeal": false,
                                    "AppealDate": null,
                                    "AppealCutOff": null,
                                    "ExclusionHearing": null,
                                    "Outcome": "E",
                                    "ReintegrationMeetingDate": null,
                                    "ReintegrationNotes": null,
                                    "ReinstatementDate": null,
                                    "ReinstatementNotes": ""
                                }]
            }

+ Response 200

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "LearnerId": 443768,
                "LearnerCode": "8382",
                "Exclusions":   [
                                "Status": true,
                                "Details": "Saved successfully",
                                "ExclusionId": 65775
                                }]
            }


### Update Learner Exclusions [PUT]

Update Exclusions for one to many learners


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
    
            {
                "LearnerId":    443768,
                "LearnerCode":  "7791",
                "Exclusions":   [{
                                    "ExclusionId":  63445,
                                    "Category":     "FIXD",
                                    "Reason":       "VA",
                                    "StartDate":    "2015-10-20",
                                    "EndDate":      "2015-10-21",
                                    "StartSession": "AM",
                                    "EndSession":   "AM",
                                    "Notes":        "Updated",
                                    "TotalDays":    1,
                                    "TotalSessions":2,
                                    "LAC":          true,
                                    "HeadNotified": null,
                                    "GovMeeting":   null,
                                    "ProvisionStartDate":   null,
                                    "ProvisionDetails":     null,
                                    "Appeal":       false,
                                    "AppealDate":   null,
                                    "AppealCutOff": null,
                                    "ExclusionHearing": null,
                                    "Outcome":      "E",
                                    "ReintegrationMeetingDate": null,
                                    "ReintegrationNotes":       null,
                                    "ReinstatementDate":        null,
                                    "ReinstatementNotes":       ""
                                }]
            }
            
            
+ Response 200

    + Body
    
            {
                "Status": true,
                "Details": "Saved successfully",
                "LearnerId": 443768,
                "LearnerCode": "8382",
                "Exclusions": [{
                                "Status": true,
                                "Details": "Saved successfully",
                                "ExclusionId": 63445
                              }]
            }


## Learner SEN Provisions [/learnerSENProvisions{?status}]

### Retrieve a learner SEN Provision Details [GET]
+ Parameters
    + status (optional, string, `Active`) ... The staus of Learner e.g. Active, Draft, Left

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            [{
            
                "LearnerCode":      "2013-00001",
                "LearnerId":       0001,
                "Provisions":   [{
                                    "ProvisionId":          00001
                                    "ProvisionTypeCode":    "E",
                                    "ProvisionTypeName":    "Education, Health and Care Plan",
                                    "StartDate":            "19/09/2014",
                                    "ReviewDate":           "20/09/2014",
                                    "EndDate":              "20/09/2014"
                                },
                                {
                                    "ProvisionId":          00002
                                    "ProvisionTypeCode":    "P",
                                    "ProvisionTypeName":    "School Action Plus",
                                    "StartDate":            "21/09/2014",
                                    "ReviewDate":           "",
                                    "EndDate":              ""
                                }]
                },
                {
                "LearnerCode":      "2013-00002",
                "LearnerId":       0002,
                "Provisions":   [{
                                    "ProvisionId":          00003
                                    "ProvisionTypeCode":    "P",
                                    "ProvisionTypeName":    "School Action Plus",
                                    "StartDate":            "21/09/2014",
                                    "ReviewDate":           "01/01/2015",
                                    "EndDate":              "30/08/2015"
                                }]
                }
                ]
                

### Create Learner SEN Provisions [POST]

Create SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "LearnerId":       0001,
                "Provisions":   [{
                                    "ProvisionTypeCode":    "A",
                                    "ProvisionTypeName":    "School Action",
                                    "StartDate":            "01/09/2015",
                                    "ReviewDate":           "",
                                    "EndDate":              ""
                                }]
            }
              
+ Response 200

    + Body
    
            {
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "Status":           true,
                "Details":          "Saved successfully",
                "Provisions":   [{
                                    "Status":               true,
                                    "Details":              "Saved successfully",
                                    "ProvisionId":          00001
                                }]
            }

### Update Learner SEN Provisions [PUT]

Update SEN Provisions for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
          
            [{
            
                "LearnerCode":     "2013-00001",
                "LearnerId":       0001,
                "Provisions":   [{
                                    "ProvisionId":          0001
                                    "ProvisionTypeCode":    "",
                                    "ProvisionTypeName":    "",
                                    "StartDate":            "",
                                    "ReviewDate":           "",
                                    "EndDate":              ""
                                }]
            }]
              
+ Response 200

    + Body
    
            {
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "Status":           true,
                "Details":          "",
                "Provisions":   [{
                                    "Status":               true,
                                    "Details":              ""
                                    "ProvisionId":          00001
                                    "ProvisionTypeCode":    "",
                                    "ProvisionTypeName":    "",
                                    "StartDate":            "",
                                    "ReviewDate":           "",
                                    "EndDate":              ""
                                }]
            }


## Learner SEN Major Needs [/LearnerSENMajorNeeds{?status}]

### Retrieve a learner SEN Major Need Details [GET]

+ Parameters
    + status (optional, boolean, `true`) ... Filter learners returned to only those with the status passed

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "MajorNeeds":   [{
                                    "LearnerMajorNeedId":   00001
                                    "MajorNeedCode":        "SLD",
                                    "MajorNeedDescription": "Severe Learning Difficulty ",
                                    "Ranking":              1,
                                    "StartDate":            "01/09/2017",
                                    "EndDate":              "31/08/2018"
                                }]
            }

### Create Learner SEN Major Needs [POST]

Create SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
          
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "MajorNeeds":   [{
                                    "MajorNeedCode":        "SPLD",
                                    "MajorNeedDescription": "Specific Learning Difficulty ",
                                    "Ranking":              1,
                                    "StartDate":            "01/09/2017",
                                    "EndDate":              "31/08/2018"
                                },{
                                    "MajorNeedCode":        "SEMH",
                                    "MajorNeedDescription": "Social, Emotional and Mental Health",
                                    "Ranking":              2,
                                    "StartDate":            "01/09/2017",
                                    "EndDate":              "31/08/2018"
                                }
            }


+ Response 200 (application/json)

    + Body 
            
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "MajorNeeds":   [{
                                    "LearnerMajorNeedId":   00005,
                                    "MajorNeedCode":        "SPLD",
                                    "MajorNeedDescription": "Specific Learning Difficulty ",
                                    "Ranking":              1,
                                },{
                                    "LearnerMajorNeedId":   00006,
                                    "MajorNeedCode":        "SEMH",
                                    "MajorNeedDescription": "Social, Emotional and Mental Health",
                                    "Ranking":              2,
                                ]
            }
            

### Update Learner SEN Major Needs [PUT]

Update SEN Major Needs for one to many learners

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
          
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "MajorNeeds":   [{
                                    "LearnerMajorNeedId":          00005
                                    "MajorNeedCode":        "SLD",
                                    "MajorNeedDescription": "Severe Learning Difficulty ",
                                    "Ranking":              2,
                                    "StartDate":            "01/09/2017",
                                    "EndDate":              "31/08/2018"
                                }]
            }

+ Response 200 (application/json)

    + Body 
            
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "MajorNeeds":   [{
                                    "LearnerMajorNeedId":          00005
                                    "MajorNeedCode":        "SLD",
                                    "MajorNeedDescription": "Severe Learning Difficulty ",
                                    "Ranking":            2
                                }]
            }


## Learner Siblings [/learnerSiblings{?LearnerId}]

+ Parameters
    + LearnerId (optional, int, `00001`) ... Return siblings of a learner

### Return a list of siblings associated to one of more learners [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body 
            
            {
            
                "LearnerCode":      "2013-00001",
                "LearnerId":        0001,
                "Siblings":   [{
                                    "LearnerCode":      "2013-00002",
                                    "LearnerId":        0002
                                },
                                {
                                    "LearnerCode":      "2013-00003",
                                    "LearnerId":        0003
                                
                                }]
            }


### Create Learner Sibling Association [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
          
            {
                "learnerId":        0001,
                "siblings":   [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                
                                }]
            }
            
    

+ Response 200 (application/json)

    + Body 
            
            {
                "learnerId":        0001,
                "siblings":     [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                
                                }]
            
            }


### Update Learner Sibling Association [PUT]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
          
            {
                "learnerId":        0001,
                "siblings":     [{
                                    "learnerId":        0002
                                },
                                {
                                    "learnerId":        0003
                                }]
            }
            

+ Response 200 (application/json)

    + Body 
            
            {
                "learnerId":        0001,
                "siblings":     [{
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0002
                                },
                                {
                                    "status":           true,
                                    "details":          "successful",
                                    "learnerId":        0003
                                }]
            }
           

# Group Documents

## Documents [/Document{?IsEmployee}{?Id}{?DocumentId}{?DateFrom}{?DateTo}]

**If DocumentId is not passed as a parameter then all DocumentId's and Titles will be returned. However if DocumnetId IS passed then the actual Document itself will be returned**

### Retrieve Documents for Learners or Staff [GET]

+ Parameters
    + IsEmployee (required, boolean, `false`) ... Learner or Employee documents
    + Id (required, int, `987465`) ... unique Id of Learner or Employee
    + DateFrom (optional, string, `01-09-2016`) ... Start of date range
    + DateTo (optional, string, `31-08-2017`) ... End of date range
    + DocumentId (optional, int, `654321`) ... unique Id of Document

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (appication/json)

    + Body
    
            {
              "Id":         20156,
              "Document":   "0xFFD8FFE000104A46494600010101006000600000FFDB0043000604050",
              "DocumentURL":"https://ASChool-my.sharepoint.com/personal//OneNote.aspx?id=%2fpersonal%2fiferrier_utcoxfordshire_org_uk%2fDocuments%2fClass%20Notebooks%2fSEND%20Student%20Support&wd=target%28Y12%20Ro&end",
              "Title":      "Spring 2 Report to Parents KS3 - 10-11",
              "Name":       "L20156_2930_993030_Spring 2 Report to Parents KS3 - 10-11_03_05_2011_time_12_24_53.pdf"
              "CreatedDate":"14-03-2017"
            }

# Group Learner Attendance

## Retrieve Atttendance Configuration
Returns the default configuration for attendance

+ BulkPopulationSetting

    + 1 = Enter Attendance Manually for all the students
    + 2 = Enter Absences (blank entries will be saved as Present)
    + 3 = Enter Presents (blank entries will be saved as Absent)

*RollCallAbsenceCode and LessonByLessonAbsenceCode are mandatory only when BulkPopulationSetting = 3. If this is either 1 or 2 then the fields are null*

### Get Attendance Configuration [GET]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
              "BulkPopulateSetting":        3,
              "RollCallAbsenceCode":        "N",
              "LessonbyLessonAbsenceCode":  "N",
              "RegisterNotification":       "true",
              "MinutesToSubmit":             10
            }


## Retrieve Roll Call Times [/RollCallTimes]

### Return Roll Call Times [GET]

+ Request (applicaiton/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                 "RollCallId":  1000,
                 "Code":        "AM,
                 "Name":        "Morning Roll Call",
                 "DefaultTime": "09:00"
            },
            {
                 "RollCallId":  1001,
                 "Code":        "PM,
                 "Name":        "Afternoon Roll Call",
                 "DefaultTime": "12:30"
            }
             

## Retrieve Learner Attendance Codes [/AttendanceCodes]

### Return Learner Attendance Codes [GET]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoni/json)

    + Body
    
            {
                 "CategoryId":      1,
                 "Code:":           "/\"
                 "Name":            "Present",
                 "LessonByLesson":  false,
                 "Present":         true,
                 "StatisticalAbs":  false,
                 "Late":            false,
                 "Authorised":      true,
                 "Medical":         false,
                 "Explained":       false,
                 "ApprovedEducationalActivity": true
            },
            {
                 "CategoryId":      13,
                 "Code:":           "N"
                 "Name":            "No Reason",
                 "LessonByLesson":  true,
                 "Present":         false,
                 "StatisticalAbs":  true,
                 "Late":            false,
                 "Authorised":      false,
                 "Medical":         false,
                 "Explained":       false,
                 "ApprovedEducationalActivity": false
            }
            

## Learner Roll Call Attendance [/LearnerRollCallAttendance{?LearnerId}{?StartDate}{?EndDate}{?Status}{?IncludeMissingRollCall}]

### Retrieve Learner Roll Call Attendance [GET]

    + Either LearnerId or Date Range is mandatory

+ Parameters
    + LearnerId (optional, int, `123465`) ... the unique identifier of the learner
    + StartDate (optional, dateTime, `01-04-2014T18:00:00`) ... attendance recorded from
    + EndDate (optional, dateTime, `01-05-2014T18:00:00`) ... attendance recorded to
    + Status (optional, string, `Active`) ... Status of the learner - Active, Left, Draft
    + IncludeMissingRollCall (optional, boolean, `true`) ... if this is included then all roll call including missing marks will be returned


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200

    + Body
    
            {    
                "LearnerId":        0001,
                "LearnerCode":      "2013-00001",
                "Date":             "18-04-2016",
                "Session":          "AM",
                "AttendanceCode":   "//",
                "AttendanceCodeId": 1,  
                "MinutesLate":      0,
                "Notes":            "",
                "ClassRollDateId":  13456
                },{
                "LearnerId":        0001,
                "LearnerCode":      "2013-00001",
                "Date":             "18-04-2016",
                "Session":          "PM",
                "AttendanceCode":   null,
                "AttendanceCodeId": null,  
                "MinutesLate":      5,
                "Notes":            "Lorem Ipsum",
                "ClassRollDateId":  null
            }


### Create Learner Roll Call Attendance [POST]

Create and amend Attendance for one to many learners

*Amdended to allow addition of future absences*

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
           
            {
                "LearnerCode":          "2013-00001",
                "AttendanceStartDate":  "2016-03-21",
                "RollCallSessionStart": "AM",
                "AttendanceString":     "////IINB"
            },
            {
                "LearnerCode":          "2013-00002",
                "AttendanceStartDate":  "16-06-2014",
                "RollCallSessionStart": "PM",
                "AttendanceString":     "B"
            }
            }

+ Response 200

    + Body
    
            {
                "LearnerCode":          "2013-00001",
                "Status":               true,
                "Details":              "Saved successfully"
            },
            {
                "LearnerCode":          "2013-00002",
                "Status":               true,
                "Details":              "Saved successfully"
            }
        

## Add Learner Roll Call Atendance with Minutes Late and Notes [/learnerAttendanceRollCallLateNotes{?LearnerCode}{?Date}{?RollCallSession}{?AttendanceCode}{?MinutesLate}{?Notes}]
This method differs from the previous one with the addtion of Notes and Minutes Late fields. Only one attendance code at a time can be passed as opposed to a string of codes in the previous method.

*Allows future absences*

+ Parameters
    + LearnerCode (required, string, `2015-00001`) ... the unique code of the learner
    + Date (required, dateTime, `01-04-2014T18:00:00`) ... date of the attendance/absence
    + RollCallSession (required, string, `AM`) ... unique roll call session - 'AM' or 'PM'
    + AttendanceCode (required, string, `L`) ... attendance code for session
    + MinutesLate (optional, string, `5`) ... string of number minutes late
    + Notes (optional, string, `Lorem ipsum`) ... any notes attached to the attendance
    

### Add Learner Roll Call with Notes and Minutes Late [POST]

+ Request

    + Headers
    
            Auhtorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "LearnerId":            0001
                "learnerCode":          "2013-00001",
                "Date":                 "16-06-2014",
                "RollCallSession":      "AM",
                "AttendanceCode":       "L",
                "MinutesLate":          5,
                "Notes":                "Lorem ipsum"

            },
            {
                "LearnerId":            0002
                "learnerCode":          "2013-00002",
                "Date":                 "16-06-2014",
                "RollCallSession":      "AM",
                "AttendanceCode":       "L", 
                "MinutesLate":          10,
                "Notes":                "Lorem ipsum"
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "LearnerCode": "0001",
                "Status": true,
                "Details": "Saved successfully"
            },
            {
                "LearnerCode": "0002",
                "Status": true,
                "Details": "Saved successfully"
            }
            

## Learner Lesson Attendance [/LearnerLessonAttendance{?LearnerId}{?StartDate}{?EndDate}{?GroupCode}{?Status}]

### Retrieve Learner Lesson Attendance [GET]

*We have removed the 4 week date range restriction. Clients are advised to adjust their timeout if using a date range greater than four weeks as the API will continue for 20 mins.*

    + Either LearnerId, GroupCode or Date Range is mandatory

    
+ Parameters
    + LearnerId (optional, int, `123456`) ... the unique identifier of the learner
    + StartDate (optional, dateTime, `01-04-2014T18:00:00`) ... attendance recorded from
    + EndDate (optional, dateTime, `01-05-2014T18:00:00`) ... attendance recorded to
    + GroupCode (optional, string, `9Sc1`) ... unique Code of Group 
    + Status (optional, string, `Active`) ... Status of the learner - Active, Left, Draft


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
                    
+ Response 200

    + Body
    
                           {
                            "EventId":      1234,
                            "GroupCode":  "9Sc1",
                            "Date":         "18-04-2016",
                            "StartTime":    "09:00",
                            "EndTime":      "10:00",
                            "Period":       "1",
                            "PeriodId":     123456,
                            "LearnerId":    0001,
                            "LearnerCode":  "2013-00001",
                            "AttendanceCode":   "//",
                            "AttendanceCodeId": 1,  
                            "MinutesLate":      0,
                            "Notes":            ""
                            },{
                            "EventId":      6541,
                            "GroupCode":   "10Ar3",
                            "Date":         "18-04-2016",
                            "StartTime":    "10:00",
                            "EndTime":      "12:00",
                            "Period":       "2",
                            "PeriodId":     45625,
                            "Date":         "18-04-2016"
                            "LearnerId":    0002,
                            "LearnerCode":  "2013-00002",
                            "AttendanceCode":   "L",
                            "AttendanceCodeId": 3,  
                            "MinutesLate":      5,
                            "Notes":            "Lorem ipsum dolor sit amet."                                
                            }
                            

## Add Learner Lesson Attendance [/LearnerLessonAttendanceByLessonTime]

### Create Learner Lesson Attendance [POST]

Create Learner Lesson Atendance by Time

+ Fields:
    + Source (required, string, `2017/2018`) ... code of Timetable Source
    + DayComposition (required, string, `Lessons`) ... name of the day Composition
    + GroupCode (required, string, `7-AD-X1`) ... unique code of Group
    + LearnerCode (required, string, `2010-1234`) ... code of Learner
    + Date (required, string, `20/02/2018`) ... date of attendance to be recorded
    + StartTime (required, string, `09:00`) ... time of the start of the lesson
    + FinishTime (required, string, `10:00`) ... time of the end of lesson - required if start time present
    + AttendanceCode (required, string, `/`) ... unique Attendance code
    + Notes (optional, string, `Lorem ipsum`) ... free text
    + MinutesLate (optional, int, `5`) ... number of minutes late for lesson

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body
            
            {
                "Source":           "2017/2018"
                "DayComposition":   "Lessons".
                "GroupCode":        "7A-BC1",
                "LearnerCode":      "7791",
                "Date":             "16-03-2016",
                "StartTime":        "09:15",
                "FinishTime":       "10:15",
                "AttendanceCode":   "/",
                "Notes":            "On the ning nang nong"
            }


+ Response 200 (application/json)

    + Body
    
            {
                 "LearnerCode":         "2013-00001",
                 "Status":              "Success",
                 "Details": "Saved successfully"
            }


# Group Photo

Group of Photo-related resources

## Photo Colection [/GetPhoto{?IsLearnerRequest}{?Id}]

### Retrieve a collection of Photos [GET]

Retrieve one to many one to many employee/learner photos  

**PhotoData is byte array**

+ Parameters
    + IsLearnerRequest (required, boolean, `true`) ... true/false marker for Learner or Staff photo
    + Id (optional, int, `1245698`) ... unique LearnerId or EmployeeId
       
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200

    + Body
    
            {
                [
                "EntityIdId":               12345,
                "PhotoData":  "0xFFD8FFE000104A46494600010101006000600000FFDB0043000"
                ],
                ["EntityId":               12334,
                "PhotoData":  "0xFFD8FFE000104A46494600010101006000600000FFDB001684974"
                ]
            }


# Group User Defined Fields

A collection of all UDF-related resources

## UDF Collection [/UDF{?EntityType}{?Code}]

+ Parameters
    + EntityType (optional, string, `Learner`) ... type of UDF Valid values School Staff, Learner, Contact
    + Code (optional, string, `LP`) ... unique Code of UDF        
        

### Retrieve one to many UDFs [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
            
            {
                "FieldDefinitionID": 1111,
                "Code":             "LP",
                "Name":             "LearnerPhoto",
                "Entity":           "Learner",
                "DataType":         "PickValue",
                "MasterData":       "",
                "PickListValues":   [{
                                        "Code": "1",
                                        "Name:  "Value1"
                                        "Order":
                                    },{
                                        "Code": "2",
                                        "Name:  "Value2"
                                    }],
                "FieldLength":      null
                "DefaultValue":     null
                "Mandatory":        "No",
                "ToolTip":          "Permission to view Learner Photo"
            },
            {
                "FieldDefinitionID": 1112,
                "Code":             "AA",
                "Name":             "Any Allergies",
                "Entity":           "School Staff",
                "DataType":         "Boolean",
                "MasterData":       "",
                "PickListValues":   null,
                "FieldLength":      1
                "DefaultValue":     0
                "Mandatory":        "No",
                "ToolTip":          "Has the Staff any allergies?"    
            },
            {
                "FieldDefinitionID": 1113,
                "Code":             "CR",
                "Name":             "ContactRelationship",
                "Entity":           "Contact",
                "DataType":         "Master Data",
                "MasterData":       "Relationship",
                "PickListValues":   null,
                "FieldLength":      1
                "DefaultValue":     0
                "Mandatory":        "Yes",
                "ToolTip":          "What is the relationship of the Contact to the Learner?"    
            }
            

### Create one to many UDFs [POST]

Notes on using DataType:
    If DataType = PickValue then PickListValues cannot be null
    If DataType = MasterData then the type of MasterData must be defined in MasterData field e.g. Learners, Subject, Country
    
+ Fields
    ++ Code (required, string, `LP`) ... unique Code of UDF
    ++ Name (required, string, `Learner Photo`) ... unique Name of UDF
    ++ Entity (required, string, `Learner`) ... valid values are School Staff, Learner, Contact
    ++ DataType (required, string, `MasterData` ... valid values are String, Boolean, Integer, Double, PickValue, MasterData, Date
    ++ Masterdata (required, string, `Gender`) ... valid MasterData names e.g. Learners, Subject, Country
    ++ FieldLength (require, int, `5`) ... NOT required if DataType = PickValue

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Code":             "LP",
                "Name":             "LearnerPhoto",
                "Entity":           "Learner",
                "DataType":         "PickValue",
                "MasterData":       "",
                "PickListValues":   [{
                                        "Code": "1",
                                        "Name:  "Value1"
                                        "Order":
                                    },{
                                        "Code": "2",
                                        "Name:  "Value2"
                                    }],
                "FieldLength":      null
                "DefaultValue":     null
                "Mandatory":        "No",
                "ToolTip":          "Permission to view Learner Photo"
            },
            {
                "Code":             "AA",
                "Name":             "Any Allergies",
                "Entity":           "School Staff",
                "DataType":         "Boolean",
                "MasterData":       "",
                "PickListValues":   null,
                "FieldLength":      1
                "DefaultValue":     0
                "Mandatory":        "No",
                "ToolTip":          "Has the Staff any allergies?"    
            },
            {
                "Code":             "CR",
                "Name":             "ContactRelationship",
                "Entity":           "Contact",
                "DataType":         "Master Data",
                "MasterData":       "Relationship",
                "PickListValues":   null,
                "FieldLength":      1
                "DefaultValue":     0
                "Mandatory":        "Yes",
                "ToolTip":          "The relationship of the Contact to the Learner"    
            }
            

+ Response 200

        
            {
               "Status":           true,
               "Details":          "Saved Successfully",
               "FieldDefinitionID": 1111,
               "Code":             "LP",
               "Name":             "LearnerPhoto"
              },
              {
               "Status":           true,
               "Details":          "Saved Successfully",
               "FieldDefinitionID": 1112,
               "Code":             "AA",
               "Name":             "Any Allergies"
              }
              {
               "Status":           false,
               "Details":          "Display error message",
               "FieldDefinitionID": 1113,
               "Code":             "CR",
               "Name":             "ContactRelationship"
            }
        


### Update one to many UDFs [PUT]

+ Mandatory field:

    + FieldDefinitionId (required, int, `1111`) ... unique Id of UDF

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "FieldDefinitionID": 1111,
                "Code":             "LP",
                "Name":             "LearnerPhoto",
                "Entity":           "Learner",
                "DataType":         "PickValue",
                "MasterData":       "",
                "PickListValues":   [{
                                        "Code": "1",
                                        "Name:  "Allowed"
                                        "Order":
                                    },{
                                        "Code": "2",
                                        "Name:  "Not Allowed"
                                    }],
                "FieldLength":      null
                "DefaultValue":     null
                "Mandatory":        "No",
                "ToolTip":          "Permission to view Learner Photo"
            },
            {
                "FieldDefinitionID": 1112,
                "Code":             "AA",
                "Name":             "Any Asthma",
                "Entity":           "School Staff",
                "DataType":         "Boolean",
                "MasterData":       "",
                "PickListValues":   null,
                "FieldLength":      1
                "DefaultValue":     0
                "Mandatory":        "No",
                "ToolTip":          "Does the Staff have Asthma?"    
            },
            {
                "FieldDefinitionID": 1113,
                "Code":             "CR",
                "Name":             "ContactRelationship",
                "Entity":           "Contact",
                "DataType":         "Master Data",
                "MasterData":       "Relationship",
                "PickListValues":   null,
                "FieldLength":      1
                "DefaultValue":     0
                "Mandatory":        "No",
                "ToolTip":          "The relationship of the Contact to the Learner"    
            }
            
+ Response 200

            {
               "Status":           true,
               "Details":          "Saved Successfully",
               "FieldDefinitionID": 1111,
               "Code":             "LP",
               "Name":             "LearnerPhoto"
              },
              {
               "Status":           true,
               "Details":          "Saved Successfully",
               "FieldDefinitionID": 1112,
               "Code":             "AA",
               "Name":             "Any Allergies"
              }
              {
               "Status":           false,
               "Details":          "Display error message",
               "FieldDefinitionID": 1113,
               "Code":             "CR",
               "Name":             "ContactRelationship"
            }
            

##User Defined Values Collection [/UDFValues{?FieldDefinitionId}{?Entity}{?Id}]

Collection of User Defined Values resources

### Retrieve UDF values for a UDF [GET]

+ Parameters
    + FieldDefinitionId (required, int, `1111`) ... unique Id of UDF
    + Entity (required, string, `Learner`) ... type of UDF - valid values are School staff, Contact, Learner
    + Id (optional, int, `001234`) ... unique Id of Learner/School Staff or Contact in form of array


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200

    + Body
    
            {
                "FieldDefinitionID":1111,
                "Id":               0123456,
                "Name":             "LearnerPhoto",
                "Entity":           "Learner",
                "Value":            "Yes"
            },
            {
                "FieldDefinitionID":1112,
                "Id":               345208,
                "Name":             "Any Allergies",
                "Entity":           "Learner",
                "Value":            "Nuts"
            },
            {
                "FieldDefinitionID": 1113,
                "Id":               965415,
                "Name":             "ContactRelationship",
                "Entity":           "Learner",
                "Value":            "Mother"   
            }
            

### Create/Update UDF values for a UDF [POST]

 Create/update one to many one to many employee/learner/contact UDF values    

+ Mandatory fields
    + FieldDefinitionId (required, int, `1111`) ... unique Id of UDF
    + Id (required, int, `001234`) ... unique Id of Learner, Employee or Contact
    + Entity (required, string, `Learner`) ... type of UDF - valid values are School staff, Contact, Learner
    + Value (required, string, `Yes`) ... the values of the UDF

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "FieldDefinitionID":1111,
                "Id":               0123456,
                "Entity":           "Learner",
                "Value":            "Yes"
            },
            {
                "FieldDefinitionID":1112,
                "Id":               345208,
                "Entity":           "School Staff",
                "Value":            "Nuts"
            },
            {
                "FieldDefinitionID": 1113,
                "Id":               965415,
                "Entity":           "Contact",
                "Value":            "Mother"   
            }
            
+ Response 200

            {
                "Status":           true,
                "Details":          "Saved successfully",
                "FieldDefinitionID": 1111,
                "Id":               0123456,
                "Entity":           "Learner"
            },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "FieldDefinitionID":1112,
                "Id":               345208,
                "Entity":           "School Staff"
            }
            {
                "Status":           false,
                "Details":          "Saved successfully",
                 "FieldDefinitionID": 1113,
                "Id":               965415,
                "Entity":           "Contact"
            }
            

# Group Assessments

Collection of all Assessment related resources

## Assessment Screen Collection [/AssessmentScreens{?AcademicYearId}]

+ Parameters
    + AcademicYearId (required, int, `1234`) ... unique number of Academic Year

### Retrieve a collection of Assessment Screens [GET]

 Retrieve one to many assessment screen details for a school         
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200

    + Body
    
            {
                "AssessmentScreenId":   1234,
                "Name":                 "2015-2016 Year 10",
                "ColumnList":
                    [{
                        "ColumnId":         1234,
                        "ColumnName:"       "AU1",
                        "IsTargetColumn":   false
                    },{
                        "ColumnId":         1235,
                        "ColumnName:"       "AU2",
                        "IsTargetColumn":   false
                    },{
                        "ColumnId":         1330,
                        "ColumnName:"       "End of Year Target"'
                        "IsTargetColumn":   true
                    }]
            },
            {
                "AssessmentScreenId":   1200,
                "Name":                 "2015-2016 Year 9",
                "ColumnList":
                    [{
                        "ColumnId":         1234,
                        "ColumnName:"       "9-KS2",
                        "IsTargetColumn":   false
                    },{
                        "ColumnId":         1235,
                        "ColumnName:"       "SU1",
                        "IsTargetColumn":   false
                    },{
                        "ColumnId":         1330,
                        "ColumnName:"       "End of Year Target"'
                        "IsTargetColumn":   true
                    }]
            }

## Learner Assessment Results Collection [/LearnerAssessmentResult{AcademicYearId}{?AssessmentScreenId}{?LearnerId}{?GroupId}{?Year}]

+  AcademicYearId is mandatory

**And either**

+ AssessmentScreenId or LearnerId

+ Parameters
    + AcademicYearId (required, int, `1234`) ... unique ID of Academic Year
    + AssessmentScreenId (optional, int, `23344`) ... unique Id of the Assessment Screen
    + LearnerId (optional, int, `12340`) ... unique Id of Learner
    + GroupId (optional, int, `122434`) ... unique Id of Group
    + Year (optional, string, `Year 8`) ... name of the Year Group
    

### Retrieve one or more Learner Assessment results [GET]

+ Mandatory fields:

    + Either AssessmentSCreenId or LearnerId is a required field

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "LearnerId":            109234
                "AssessmentScreenList":
                            [{
                                "AssessmentScreenID":   3456
                                "AssessmentScreenName": "2015-2016 Year 10",
                                "GroupCode":            "10-AR1",
                                "EmployeeId":           123456,
                                "TeacherCode":          "GBr",
                                "StudyLevel":           "GCSE",
                                "SubjectLookupId":      98752
                                "Subject":               "AR"
                                "ColumnList":
                                    [{
                                        "AssementScreenColumnId":   1234,
                                        "ColumnName":       "AU1",
                                        "ColumnValue":      "7c",
                                        "VaulePoints":      "36"
                                    },{
                                        "AssementScreenColumnId":   1235,
                                        "ColumnName":       "AU2",
                                        "ColumnValue":      "7b",
                                        "VaulePoints":      "40"
                                    },{
                                        "AssementScreenColumnId":   1236,
                                        "ColumnName":       "AU_Eff",
                                        "ColumnValue":      "Could do better",
                                        "VaulePoints":      null
                                    }]
                            }
            }


## SATs Collection [/LearnerSATsResult/{?LearnerId}{?CourseCode}]

+ Parameters
    + LearnerId (required, int, `123420`) ... unique ID of Learner
    + CourseCode (optional, string, `KS2`) ... the course of the SATs
        

### Retrieve SATs Results for Learners [GET]

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
            
            {
                "LearnerId":    120318,
                "LearnerCode":  "015234",
                "KeyStage":     [
                                {
                                "Stage": "KS1",
                                "StageAssessment": [
                                                   {
                                                    "Locale":       "ENG",
                                                    "Year":         "2006",
                                                    "Subject":      "ENG",
                                                    "Method":       "TA",
                                                    "Component":    "AT2",
                                                    "Description":  "Reading"'
                                                    "ResultStatus": "R",
                                                    "ResultQualifier": "NL",
                                                    "ResultDate":   "11-11-2006",
                                                    "Result":       "3",
                                                    "Sublevel":     "3A",
                                                    "Points":       23
                                                    },
                                                    {
                                                    "Locale":       "ENG",
                                                    "Year":         "2006",
                                                    "Subject":      "ENG",
                                                    "Method":       "TA",
                                                    "Component":    "AT3",
                                                    "ResultStatus": "R",
                                                    "ResultQualifier": "NL",
                                                    "ResultDate":   "11-11-2006",
                                                    "Result":       "3",
                                                    "Sublevel":     "3B",
                                                    "Points":       25
                                                    },
                                                    {
                                                    "Locale":       "ENG",
                                                    "Year":         "2006",
                                                    "Subject":      "MAT",
                                                    "Method":       "TA",
                                                    "Component":    "SUB",
                                                    "ResultStatus": "R",
                                                    "ResultQualifier": "NL",
                                                    "ResultDate":   "11-11-2006",
                                                    "Result":       "2",
                                                    "Sublevel":     "2A",
                                                    "Points":       18
                                                    }
                                                    ]
                                },
                                {
                                "Stage": "KS2",
                                "StageAssessment": [
                                                  {
                                                  "Locale":         "ENG",
                                                  "Year":           "2010",
                                                  "Subject":        "ENG",
                                                  "Method":         "TA",
                                                  "Component":      "SUB",
                                                  "ResultStatus":   "R",
                                                  "ResultQualifier": "NL",
                                                  "ResultDate":   "11-11-2006",
                                                  "Result":       "4",
                                                  "Sublevel":     null,
                                                  "Points":       null
                                                  },
                                                  {
                                                  "Locale":         "ENG",
                                                  "Year":           "2010",
                                                  "Subject":        "MAT",
                                                  "Method":         "TA",
                                                  "Component":      "SUB",
                                                  "ResultStatus":   "R",
                                                  "ResultQualifier": "NL",
                                                  "ResultDate":   "11-11-2006",
                                                  "Result":       "5",
                                                  "Sublevel":     null,
                                                  "Points":       null
                                                  },
                                                 {
                                                  "Locale": "ENG",
                                                  "Year": "2010",
                                                  "Subject": "SCI",
                                                  "Method": "TA",
                                                  "Component": "SUB",
                                                  "ResultStatus": "R",
                                                  "ResultQualifier": "NL",
                                                  "ResultDate":   "11-11-2006",
                                                  "Result":       "6",
                                                  "Sublevel":     "6B",
                                                  "Points":       39
                                                  }
                                                 ]
                                }
                                ]
            }


## CATS Prediction Data [/LearnerAssessmentCATSData/{?LearnerId}{?DateFrom}{?DateTo}]

**Either LearnerID or Date Range is mandatory**

+ Parameters
    + LearnerId (required, int, `123420`) ... unique ID of Learner
    + DateFrom (required, date, `01-09-2015`) ... start of the date range for Date of Test
    + DateTo (required, date, `31-08-2016`) ... end of the date range for Date of Test
    

### Retrieve CATS data for Learners [GET]
    
+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId":                    120318,
                "LearnerCode":                  "015234",
                "DateOfTest":                   "17/09/2013",
                "AgeInMonths":                  "138",
                "CATVersion":                   "CAT3R1",
                "CATLevel":                     "D",
                "VerbalAttempts":               "78",
                "VerbalRawScoreTotal":          "38",
                "VerbalSAS":                    "89",
                "VerbalNPR":                    "24",
                "VerbalStanine":                "4",
                "VerbalSubTest1RawScore":       "10",
                "VerbalSubTest1Stanine":        "2",
                "VerbalSubTest2RawScore":       "12",
                "VerbalSubTest2Stanine":        "4",
                "VerbalSubTest3RawScore":       "16",
                "VerbalSubTest3Stanine":        "4",
                "QuantitativeAttempts":         "58",
                "QuantitativeRawScoreTotal":    "41",
                "QuantitativeSAS":              "101",
                "QuantitativeNPR":              "52",
                "QuantitativeStanine":          "5",
                "QuantitativeSubTest1RawScore": "15",
                "QuantitativeSubTest1Stanine":  "6",
                "QuantitativeSubTest2RawScore": "13",
                "QuantitativeSubTest2Stanine":  "4",
                "QuantitativeSubTest3RawScore": "13",
                "QuantitativeSubTest3Stanine":  "5",
                "NonVerbalAttempts":            "66",
                "NonVerbalRawScoreTotal":       "36",
                "NonVerbalSAS":                 "93",
                "NonVerbalNPR":                 "32",
                "NonVerbalStanine":             "4",
                "NonVerbalSubTest1RawScore":    "17",
                "NonVerbalSubTest1Stanine":     "5",
                "NonVerbalSubTest2RawScore":    "13",
                "NonVerbalSubTest2Stanine":     "4",
                "NonVerbalSubTest3RawScore":    "6",
                "NonVerbalSubTest3Stanine":     "4",
                "MeanSAS":                      "94",
                "VerbalUnclear":                null,
                "QuantitativeUnclear":          null,
                "NonVerbalUnclear":             null,
                "ASBiology":        "A",
                "ASBusinessStudies":"A",
                "ASChemistry":      "A",
                "ASDesignTechnology":   "A",
                "ASDramaTheatreStudies":"A",
                "ASEconomics":      "ECO",
                "ASEnglish":        "B",
                "ASFrench":         "B",
                "ASGeneralStudies": "B",
                "ASGeography":      "B",
                "ASHistory":        "C",
                "ASLaw":            "C",
                "ASMathematics":    "C",
                "ASMedia":          "A",
                "ASMediaFilmTV":    "A",
                "ASPhysics":        "A",
                "ASPsychology":     "D",
                "ASReligiousStudies": "D",
                "ASSociology":      "A",
                "Y12UCASTotal":     "600",
                "Y12UCASAverage":   "120",
                "ABiology":         "B",
                "ABusinessStudies": "B",
                "ADesignTechnology":"A",
                "ADramaTheatreArts":"B",
                "AEnglish":         "C",
                "AFrench":          "C",
                "AGeneralStudies":  "C",
                "AGeography":       "A",
                "AHistory":         "B",
                "ALaw":             "B",
                "AMathematics":     "C",
                "AMediaFilmTV":     "C",
                "APEDance":         "C",
                "APhysics":         "D",
                "APsychology":      "B",
                "AReligiousStudies":"B",
                "ASociology":       "B",
                "Y13UCASTotal":     "350",
                "Y13UCASAverage":   "102",
                "KS2EnglishLevel":   null,
                "KS2MathsLevel":    null
                "KS2ScienceLevel":  null
                "KS3EnglishLevel":  "5C",
                "KS3MathsLevel":    "5A",
                "KS3ScienceLevel":  "5B",
                "KS3Art":           "5B",
                "KS3DT":            "5B",
                "KS3Geography":     "5B",
                "KS3History":       "5B",
                "KS3ICT":           "5B",
                "KS3MFL":           "4A",
                "KS3Music":         "5B",
                "KS3PE":            "5B",
                "GCSEArtDesign":    "C",
                "GCSEBusinessStudies":      "C/D",
                "GCSEDesignTechElectronics":"D",
                "GCSEDesignTechFood":       "C/D",
                "GCSEDesignTechGraphics":   "C/D",
                "GCSEDesignTechResMaterials":   "C/D",
                "GCSEDesignTechSystemsControl": "D",
                "GCSEDesignTechTextiles":   "C",
                "GCSEDrama":                "C",
                "GCSEEnglish":              "C/D",
                "GCSEEnglishLiterature":    "C/D",
                "GCSEFrench":               "C/D",
                "GCSEGeography":            "C/D",
                "GCSEGerman":               "C/D",
                "GCSEHistory":              "C/D",
                "GCSEHomeEconomics":        "D",
                "GCSEInformationTechnology":"C/D",
                "GCSEMathematics":          "C/D",
                "GCSEMediaStudies":         "C",
                "GCSEMusic":                "C",
                "GCSEPhysicalEducation":    "C",
                "GCSEReligiousEducation":   "C/D",
                "GCSEScienceBiology":       "C",
                "GCSEScienceChemistry":     "C",
                "GCSESciencePhysics":       "C",
                "GCSEScienceDoubleAward":   "NULL",
                "GCSEScienceSingleAward":   "NULL",
                "GCSEScienceCore":          "C/D",
                "GCSEScienceAdditional":    "C/D",
                "GCSESociology":            "C/D",
                "GCSESpanish":              "C/D",
                "GCSEStatistics":           "C",
                "GCSEWelsh":                "C",
                "GCSEWelsh2ndlangFullCourse": "C/D",
                "GCSEWelsh2ndlangShortCourse":"D/E",
                "GCSEOfficeTechnology":     "D",
                "Prob5AStarToCGCSE":        "84",
                "Prob5AstarToCGCSEIncEngMaths": "52",
                "Prob5AstarToGGCSE":        "99",
                "NewGCSEPointScore":        null,
                "NewBest8Score":            null,
                "OldGCSEPointScore":        null,
                "OldBest8Score":            null
            }
            

## CAT4 Prediction Data [/LearnerAssessmentCAT4Data/{?LearnerId}{?DateFrom}{?DateTo}]

**Either LearnerID or Date Range is mandatory**

+ Parameters
    + LearnerId (required, int, `123420`) ... unique ID of Learner
    + DateFrom (required, date, `01-09-2015`) ... start of the date range for Date of Test
    + DateTo (required, date, `31-08-2016`) ... end of the date range for Date of Test
    

### CAT4 Predication Data [GET]

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId":                    120318,
                "LearnerCode":                  "015234",
                "DateOfTest":                   "04/07/2015",
                "AgeInMonths":                  "131",
                "CATVersion":                   "CAT4E2",
                "CATLevel":                     "D",
                "VerbalSpatialProfile":         "Moderate verbal bias",
                "VerbalNoAttempted":            "48",
                "VerbalTotalRawScore":          "34",
                "VerbalSubtest1RawScore":       "16",
                "VerbalSubtest2RawScore":       "18",
                "VerbalSAS":                    "121",
                "VerbalNPR":                    "92",
                "VerbalStanine":                "8",
                "VerbalNoUnclear":              null,
                "QuantitativeNoAttempted":      "32",
                "QuantitativeTotalRawScore":    "29",
                "QuantitativeSubtest1RawScore": "17",
                "QuantitativeSubtest2RawScore": "12",
                "QuantitativeSAS":              "119",
                "QuantitativeNPR":              "90",
                "QuantitativeStanine":          "8",
                "QuantitativeNoUnclear":        null,
                "NonVerbalNoAttempted":         "42",
                "NonVerbalTotalRawScore":       "33",
                "NonVerbalSubtest1RawScore":    "14",
                "NonVerbalSubtest2RawScore":    "19",
                "NonVerbalSAS":                 "115",
                "NonVerbalNPR":                 "84",
                "NonVerbalStanine":             "7",
                "NonVerbalNoUnclear":           null,
                "SpatialNoAttempted":           "23",
                "SpatialTotalRawScore":         "20",
                "SpatialSubtest1RawScore":      "12",
                "SpatialSubtest2RawScore":      "8",
                "SpatialSAS":                   "103",
                "SpatialNPR":                   "58",
                "SpatialStanine":               "5",
                "SpatialNoUnclear":             null,
                "MeanSAS":                      "115",
                "KS2EnglishRetrospectiveLevel": null,
                "KS2MathsRetrospectiveLevel":   null,
                "KS2ScienceRetrospectiveLevel": null,
                "GCSEProbOf5AStarToC":          null,
                "GCSEProbOf5AStarToCIncEnglishAndMaths": null,
                "GCSEProbOf5AStarToG":          null,
                "GCSETotalPointsScore":         "572",
                "GCSEBest8pointsScore":         "404",
                "KS2EnglishLevel":                 "3a",
                "KS2EnglishLevelIfChallenged":     "4a",
                "KS2MathsLevel":                   "3b",
                "KS2MathsLevelIfChallenged":       "4b",
                "KS2ScienceLevel":                 "3c",
                "KS2ScienceLevelIfChallenged":     "4c",
                "KS2EnglishNCPointScore":          null,
                "KS2EnglishNCPointScoreIfChallenged":  null,
                "KS2MathsNCPointScore":                null,
                "KS2MathsNCPointScoreIfChallenged":    null,
                "KS2ScienceNCPointScore":              null,
                "KS2ScienceNCPointScoreIfChallenged":  null,
                "KS2EnglishFineLevelScore":            null,
                "KS2EnglishFineLevelScoreIfChallenged":null,
                "KS2MathsFineLevelScore":              null,
                "KS2MathsFineLevelScoreIfChallenged":  null,
                "KS2ScienceFineLevelScore":            null,
                "KS2ScienceFineLevelScoreIfChallenged":null
                "KS3EnglishNCPointScore":              null,
                "KS3EnglishNCPointScoreIfChallenged":  null,
                "KS3MathsNCPointScore":                null,
                "KS3MathsNCPointScoreIfChallenged":    null,
                "KS3ScienceNCPointScore":              null,
                "KS3ScienceNCPointScoreIfChallenged":  null,
                "KS3ArtNCPointScore":                  null,
                "KS3ArtNCPointScoreIfChallenged":      null,
                "KS3DAndTNCPointScore":                null,
                "KS3DAndTNCPointScoreIfChallenged":    null,
                "KS3GeographyNCPointScore":            null,
                "KS3GeographyNCPointScoreIfChallenged":null,
                "KS3HistoryNCPointScore":              null,
                "KS3HistoryNCPointScoreIfChallenged":  null,
                "KS3ICTNCPointScore":                  null,
                "KS3ICTNCPointScoreIfChallenged":      null,
                "KS3MFLNCPointScore":                  null,
                "KS3MFLNCPointScoreIfChallenged":      null,
                "KS3MusicNCPointScore":                null,
                "KS3MusicNCPointScoreIfChallenged":    null,
                "KS3PENCPointScore":                   null,
                "KS3PENCPointScoreIfChallenged":       null,
                "KS3EnglishLevel":                     "7c",
                "KS3EnglishLeveIfChallenged":          "7b",
                "KS3MathsLevel":                       "8",
                "KS3MathsLeveIfChallenged":            "8",
                "KS3ScienceLevel":                     "7b",
                "KS3ScienceLeveIfChallenged":          "7a",
                "KS3ArtLevel":                         "7c",
                "KS3ArtLeveIfChallenged":              "7b",
                "KS3DAndTLevel":                       "7c",
                "KS3DAndTLeveIfChallenged":            "7b",
                "KS3GeographyLevel":                   "7b",
                "KS3GeographyLeveIfChallenged":        "7a",
                "KS3HistoryLevel":                     "7b",
                "KS3HistoryLeveIfChallenged":          "7a",
                "KS3ICTLevel":                         "7b",
                "KS3ICTLeveIfChallenged":              "7a",
                "KS3MFLLevel":                         "7c",
                "KS3MFLLeveIfChallenged":              "7b",
                "KS3MusicLevel":                       "6a",
                "KS3MusicLeveIfChallenged":            "7c",
                "KS3PELevel":                          "6b",
                "KS3PELeveIfChallenged":               "6a",
                "KS3EnglishFineLevelScore":            null,
                "KS3EnglishFineLevelScoreIfChallenged":null,
                "KS3MathsFineLevelScore":              null,
                "KS3MathsFineLevelScoreIfChallenged":  null,
                "KS3ScienceFineLevelScore":            null,
                "KS3ScienceFineLevelScoreIfChallenged":null,
                "KS3ArtFineLevelScore":                null,
                "KS3ArtFineLevelScoreIfChallenged":    null,
                "KS3DAndTFineLevelScore":              null,
                "KS3DAndTFineLevelScoreIfChallenged":  null,
                "KS3GeographyFineLevelScore":          null,
                "KS3GeographyFineLevelScoreIfChallenged": null,
                "KS3HistoryFineLevelScore":            null,
                "KS3HistoryFineLevelScoreIfChallenged":null,
                "KS3ICTFineLevelScore":                null,
                "KS3ICTFineLevelScoreIfChallenged":    null,
                "KS3MFLFineLevelScore":                null,
                "KS3MFLFineLevelScoreIfChallenged":    null,
                "KS3MusicFineLevelScore":              null,
                "KS3MusicFineLevelScoreIfChallenged":  null,
                "KS3PEFineLevelScore":                 null,
                "KS3PEFineLevelScoreIfChallenged":     null
                "KS4ArtAndDesign":                     "A",
                "KS4ArtAndDesignIfChallenged":         "A*",
                "KS4BusinessStudies":                  "A",
                "KS4BusinessStudiesIfChallenged":      "A*",
                "KS4DAndTElectronics":                 "A",
                "KS4DAndTElectronicsIfChallenged":     "A*",
                "KS4DAndTFood":                        "A*/A",
                "KS4DAndTFoodIfChallenged":            "A*",
                "KS4DAndTGraphics":                    "A",
                "KS4DAndTGraphicsIfChallenged":        "A*",
                "KS4DAndTResistant":                   "A",
                "KS4DAndTResistantIfChallenged":       "A*",
                "KS4DAndTSystems":                     "A",
                "KS4DAndTSystemsIfChallenged":         "A*",
                "KS4DAndTTextiles":                    "A*/A",
                "KS4DAndTTextilesIfChallenged":        "A*",
                "KS4Drama":                            "A",
                "KS4DramaIfChallenged":                "A*",
                "KS4English":                          "A",
                "KS4EnglishIfChallenged":              "A*",
                "KS4EnglishLiterature":                "A",
                "KS4EnglishLiteratureIfChallenged":    "A*",
                "KS4French":                           "A",
                "KS4FrenchIfChallenged":               "A*",
                "KS4Geography":                        "A*/A",
                "KS4GeographyIfChallenged":            "A*",
                "KS4German":                           "A",
                "KS4GermanIfChallenged":               "A*",
                "KS4History":                          "A*/A",
                "KS4HistoryIfChallenged":              "A*",
                "KS4HomeEconomics":                    "A",
                "KS4HomeEconomicsIfChallenged":        "A*",
                "KS4InformationTechnology":            "A/B",
                "KS4InformationTechnologyIfChallenged":"A",
                "KS4Mathematics":                      "A*",
                "KS4MathematicsIfChallenged":          "A*",
                "KS4MediaStudies":                     "A",
                "KS4MediaStudiesIfChallenged":         "A*",
                "KS4Music":                            "A",
                "KS4MusicIfChallenged":                "A*",
                "KS4PhysicalEducation":                "A",
                "KS4PhysicalEducationIfChallenged":    "A*",
                "KS4ReligiousEducation":               "A*/A",
                "KS4ReligiousEducationIfChallenged":   "A*",
                "KS4ScienceAdditional":                "A*/A",
                "KS4ScienceAdditionalIfChallenged":    "A*",
                "KS4ScienceBiology":                   "A*/A",
                "KS4ScienceBiologyIfChallenged":       "A*",
                "KS4ScienceChemistry":                 "A*/A",
                "KS4ScienceChemistryIfChallenged":     "A*",
                "KS4ScienceCore":                      "A*/A",
                "KS4ScienceCoreIfChallenged":          "A*",
                "KS4SciencePhysics":                   "A*/A",
                "KS4SciencePhysicsIfChallenged":       "A*",
                "KS4Sociology":                        "A",
                "KS4SociologyIfChallenged":            "A*",
                "KS4Spanish":                          "A",
                "KS4SpanishIfChallenged":              "A*",
                "KS4GCSEStatisticsIfChallenged":       "A*"
                "KS4GCSEStatistics":                   "A",
                "KS5ASArtAndDesign":                   "B/C",
                "KS5ASArtAndDesignIfChallenged":       "B",
                "KS5ASBiology":                        "D/E",
                "KS5ASBiologyIfChallenged":            "D",
                "KS5ASBusinessStudies":                "C",
                "KS5ASBusinessStudiesIfChallenged":    "B",
                "KS5ASChemistry":                      "C/D",
                "KS5ASChemistryIfChallenged":          "C",
                "KS5ASCriticalThinking":               "E",
                "KS5ASCriticalThinkingIfChallenged":   "D",
                "KS5ASDrama":                          "B/C",
                "KS5ASDramaIfChallenged":              "B",
                "KS5ASEnglish":                        "C",
                "KS5ASEnglishIfChallenged":            "B",
                "KS5ASFrench":                         "C",
                "KS5ASFrenchIfChallenged":             "B",
                "KS5ASGeneralStudies":                 "D/E",
                "KS5ASGeneralStudiesIfChallenged":     "D",
                "KS5ASGeography":                      "C/D",
                "KS5ASGeographyIfChallenged":          "C",
                "KS5ASHistory":                        "C",
                "KS5ASHistoryIfChallenged":            "B",
                "KS5ASMaths":                          "C/D",
                "KS5ASMathsIfChallenged":              "C",
                "KS5ASMediaStudies":                   "B/C",
                "KS5ASMediaStudiesIfChallenged":       "B",
                "KS5ASPhsicalEducation":               "C/D",
                "KS5ASPhsicalEducationIfChallenged":   "C",
                "KS5ASPhysics":                        "D/E",
                "KS5ASPhysicsIfChallenged":            "D",
                "KS5ASPsychology":                     "C/D",
                "KS5ASPsychologyIfChallenged":         "C",
                "KS5ASReligiousStudies":               "C",
                "KS5ASReligiousStudiesIfChallenged":   "B",
                "KS5ASSociology":                      "C/D",
                "KS5ASSociologyIfChallenged":          "C",
                "KS5AArtAndDesign":                    "B",
                "KS5AArtAndDesignIfChallenged":        "A",
                "KS5ABiology":                         "C/D",
                "KS5ABiologyIfChallenged":             "C",
                "KS5ABusinessStudies":                 "B/C",
                "KS5ABusinessStudiesIfChallenged":     "B",
                "KS5AChemistry":                       "B/C",
                "KS5AChemistryIfChallenged":           "B",
                "KS5ADrama":                           "B/C",
                "KS5ADramaIfChallenged":               "B",
                "KS5AEnglish":                         "B/C",
                "KS5AEnglishIfChallenged":             "B",
                "KS5AFrench":                          "B/C",
                "KS5AFrenchIfChallenged":              "B",
                "KS5AGeneralStudies":                  "C/D",
                "KS5AGeneralStudiesIfChallenged":      "C",
                "KS5AGeography":                       "C",
                "KS5AGeographyIfChallenged":           "B",
                "KS5AHistory":                         "B/C",
                "KS5AHistoryIfChallenged":             "B",
                "KS5AMaths":                           "B/C",
                "KS5AMathsIfChallenged":               "B",
                "KS5AMediaStudies":                    "B/C",
                "KS5AMediaStudiesIfChallenged":        "B",
                "KS5APhsicalEducation":                "C",
                "KS5APhsicalEducationIfChallenged":    "B",
                "KS5APhysics":                         "C/D",
                "KS5APhysicsIfChallenged":             "C",
                "KS5APsychology":                      "B/C",
                "KS5APsychologyIfChallenged":          "B",
                "KS5AReligiousStudies":                "B/C",
                "KS5AReligiousStudiesIfChallenged":    "B",
                "KS5ASociology":                       "B/C",
                "KS5ASociologyIfChallenged":           "B"     
            }
            

## KS2 FFT Data [/LearnerAssessmentKS2FFTData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner
    

### Retrieve KS2 FFT prediction data [GET]

Retrieve KS2 FFT prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId": 307188,
                "LearnerCode": "962100",
                "PredicationDetails":   [
                                          {
                                            "AssessmentYear": "2010",
                                            "PriorAttainKeyStage": 1,
                                            "PriorAttainRank": "A",
                                            "PriorAttainGroup": "M",
                                            "EstimateBasis": "SE(Socio-Economic)",
                                            "EstimateRank": "5",
                                            "Subject": "English",
                                            "ProbLevel2": 2,
                                            "ProbLevel3": 10,
                                            "ProbLevel4": 77,
                                            "ProbLevel5": 92,
                                            "ProbLevel2Plus": 99,
                                            "ProbLevel3Plus": 99,
                                            "ProbLevel4Plus": 90,
                                            "ProbLevel5Plus": 15,
                                            "EstimateLevel": "4.49 ",
                                            "ExpectedProgressLevel": null,
                                            "BetterExpectedProgressLevel": null,
                                            "ExpectedProgressProb": null,
                                            "BetterExpectedProgressProb": null
                                          },
                                          {
                                            "AssessmentYear": "2014",
                                            "PriorAttainKeyStage": 1,
                                            "PriorAttainRank": "A",
                                            "PriorAttainGroup": "M",
                                            "EstimateBasis": "SE(Socio-Economic)",
                                            "EstimateRank": "50 (Type B)",
                                            "Subject": "Reading",
                                            "ProbLevel2": 1,
                                            "ProbLevel3": 1,
                                            "ProbLevel4": 8,
                                            "ProbLevel5": 90,
                                            "ProbLevel2Plus": 99,
                                            "ProbLevel3Plus": 99,
                                            "ProbLevel4Plus": 99,
                                            "ProbLevel5Plus": 92,
                                            "EstimateLevel": "5B   ",
                                            "ExpectedProgressLevel": 5,
                                            "BetterExpectedProgressLevel": 6,
                                            "ExpectedProgressProb": 92,
                                            "BetterExpectedProgressProb": 2
                                          }
                                        ]
            }
                

## KS3 FFT Data [/LearnerAssessmentKS3FFTData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner
    

### Retrieve KS3 FFT prediction data [GET]

Retrieve KS3 FFT prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
 
            {
                "LearnerId": 195837,
                "LearnerCode": "011209",
                "PredicationDetails":   [
                                        {
                                        "AssessmentYear": "2014",
                                        "PriorAttainKeyStage": 2,
                                        "PriorAttainRank": null,
                                        "PriorAttainGroup": "U",
                                        "EstimateBasis": "PA(Prior Attainment)",
                                        "EstimateRank": "10",
                                        "Subject": "English",
                                        "ProbLevel2": 1,
                                        "ProbLevel3": 1,
                                        "ProbLevel4": 1,
                                        "ProbLevel5": 5,
                                        "ProbLevel6": 53,
                                        "ProbLevel7": 42,
                                        "ProbLevel2Plus": 99,
                                        "ProbLevel3Plus": 99,
                                        "ProbLevel4Plus": 99,
                                        "ProbLevel5Plus": 99,
                                        "ProbLevel6Plus": 95,
                                        "ProbLevel7Plus": 42,
                                        "EstimateLevel": "6A   ",
                                        "ExpectedProgressLevel": null,
                                        "ExpectedProgressProb": null
                                        },
                                        {
                                        "AssessmentYear": "2014",
                                        "PriorAttainKeyStage": 2,
                                        "PriorAttainRank": null,
                                        "PriorAttainGroup": "U",
                                        "EstimateBasis": "PA(Prior Attainment)",
                                        "EstimateRank": "10",
                                        "Subject": "Mathematics",
                                        "ProbLevel2": 1,
                                        "ProbLevel3": 1,
                                        "ProbLevel4": 1,
                                        "ProbLevel5": 4,
                                        "ProbLevel6": 38,
                                        "ProbLevel7": 57,
                                        "ProbLevel2Plus": 99,
                                        "ProbLevel3Plus": 99,
                                        "ProbLevel4Plus": 99,
                                        "ProbLevel5Plus": 99,
                                        "ProbLevel6Plus": 96,
                                        "ProbLevel7Plus": 57,
                                        "EstimateLevel": "6A   ",
                                        "ExpectedProgressLevel": null,
                                        "ExpectedProgressProb": null
                                        }
                                        ]
            }
                                                                      

## KS4 FFT Data [/LearnerAssessmentKS4FFTData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner
    

### Retrieve KS4 FFT prediction data [GET]

Retrieve KS4 FFT prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
            "LearnerId": 195335,
            "LearnerCode": "008492",
            "PredicationDetails": [
                                  {
                                    "AssessmentYear": "2014",
                                    "QualificationType": "GCSE Full Course",
                                    "PriorAttainKeyStage": 3,
                                    "PriorAttainRank": null,
                                    "PriorAttainGroup": "U",
                                    "EstimateBasis": null,
                                    "EstimateRank": "10",
                                    "Subject": "Science",
                                    "GProb": 1,
                                    "FProb": 1,
                                    "EProb": 1,
                                    "DProb": 1,
                                    "CProb": 4,
                                    "BProb": 20,
                                    "AProb": 41,
                                    "AStarProb": 34,
                                    "GPlusProb": 99,
                                    "FPlusProb": 99,
                                    "EPlusProb": 99,
                                    "DPlusProb": 99,
                                    "CPlusProb": 99,
                                    "BPlusProb": 95,
                                    "APlusProb": 75,
                                    "PassProb": 99,
                                    "GMProb": "A",
                                    "HGMProb": 26,
                                    "GAProb": "A",
                                    "ExpectedProgressLevel": null,
                                    "BetterExpectedProgressLevel": null,
                                    "ExpectedProgressProb": null,
                                    "BetterExpectedProgressProb": null
                                  },
                                  {
                                    "AssessmentYear": "2014",
                                    "QualificationType": "GCSE Full Course",
                                    "PriorAttainKeyStage": 3,
                                    "PriorAttainRank": null,
                                    "PriorAttainGroup": "U",
                                    "EstimateBasis": null,
                                    "EstimateRank": "10",
                                    "Subject": "Maths",
                                    "GProb": 1,
                                    "FProb": 1,
                                    "EProb": 1,
                                    "DProb": 1,
                                    "CProb": 5,
                                    "BProb": 24,
                                    "AProb": 44,
                                    "AStarProb": 26,
                                    "GPlusProb": 99,
                                    "FPlusProb": 99,
                                    "EPlusProb": 99,
                                    "DPlusProb": 99,
                                    "CPlusProb": 99,
                                    "BPlusProb": 94,
                                    "APlusProb": 70,
                                    "PassProb": 99,
                                    "GMProb": "A",
                                    "HGMProb": 48,
                                    "GAProb": "B",
                                    "ExpectedProgressLevel": null,
                                    "BetterExpectedProgressLevel": null,
                                    "ExpectedProgressProb": null,
                                    "BetterExpectedProgressProb": null
                                  }
                                  ]
            }
            

## KS5 FFT Data [/LearnerAssessmentKS5FFTData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner
    

### Retrieve KS5 FFT prediction data [GET]

Retrieve KS5 FFT prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId": 205103,
                "LearnerCode": "20232",
                "PredicationDetails": [
                                      {
                                        "AssessmentYear": "2014",
                                        "QualificationType": "GCE A level",
                                        "PriorAttainKeyStage": 4,
                                        "PriorAttainRank": null,
                                        "PriorAttainGroup": null,
                                        "EstimateBasis": "PA(Prior Attainment)",
                                        "EstimateRank": null,
                                        "Subject": "Mathematics",
                                        "EProb": 7,
                                        "DProb": 16,
                                        "CProb": 26,
                                        "BProb": 31,
                                        "AProb": 17,
                                        "AStarProb": 3,
                                        "EPlusProb": 99,
                                        "DPlusProb": 93,
                                        "CPlusProb": 77,
                                        "BPlusProb": 0,
                                        "APlusProb": 20,
                                        "PassProb": 99,
                                        "GMProb": "B",
                                        "HGMProb": 20,
                                        "GAProb": "A"
                                      }
                                    ]
            }
                        

## KS1 FFT Aspire Prediction Data [/LearnerAssessmentKS1FFTAspireData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner
    

### Retrieve KS1 FFT Aspire prediction data [GET]

Retrieve KS1 FFT Aspire prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId": 507424,
                "LearnerCode": "2012-200",
                "PredicationDetails": [
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Mathematics",
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 45,
                                        "GradeChanceA": 35,
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Reading",
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 45,
                                        "GradeChanceA": 35,
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Writing",
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 45,
                                        "GradeChanceA": 35,
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Science",
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 45,
                                        "GradeChanceA": 35,
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      }
                                    ]
            }
            

## KS2 FFT Aspire Prediction Data [/LearnerAssessmentKS2FFTAspireData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner
    

### Retrieve KS2 FFT Aspire prediction data [GET]

Retrieve KS2 FFT Aspire prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId": 507424,
                "LearnerCode": "2012-200",
                "PredicationDetails": [
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Mathematics",
                                        "GradeChanceB": 15,
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 25,
                                        "GradeChanceA": 22,
                                        "GradeChanceM": 18,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 45,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Reading",
                                        "GradeChanceB": 15,
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 25,
                                        "GradeChanceA": 22,
                                        "GradeChanceM": 18,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 45,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Writing",
                                        "GradeChanceB": 15,
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 25,
                                        "GradeChanceA": 22,
                                        "GradeChanceM": 18,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 45,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Science",
                                        "GradeChanceB": 15,
                                        "GradeChanceW": 20,
                                        "GradeChanceN": 25,
                                        "GradeChanceA": 22,
                                        "GradeChanceM": 18,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "N",
                                        "AboveBenchmarkChance": 35,
                                        "BelowBenchmarkChance": 20,
                                        "TargetGrade": "N",
                                        "TargetChance": 45,
                                        "TargetChanceSchool": 45,
                                        "TargetReviewed": false
                                      }
                                    ]
            }
            

## KS4 A-G FFT Aspire Prediction Data [/LearnerAssessmentKS4CharFFTAspireData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner
    

### Retrieve KS4 A*-G  FFT Aspire prediction data [GET]

Retrieve KS4 A*-G FFT Aspire prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId": 507424,
                "LearnerCode": "2012-200",
                "PredicationDetails": [
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Art and Design",
                                        "GradeChanceG": 1,
                                        "GradeChanceF": 4,
                                        "GradeChanceE": 9,
                                        "GradeChanceD": 18,
                                        "GradeChanceC": 21,
                                        "GradeChanceB": 20,
                                        "GradeChanceA": 12,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 47,
                                        "BelowBenchmarkChance": 32,
                                        "TargetGrade": "6",
                                        "TargetChance": 47,
                                        "TargetChanceSchool": 47,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Biology",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 1,
                                        "GradeChanceE": 4,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 20,
                                        "GradeChanceB": 25,
                                        "GradeChanceA": 22,
                                        "GradeChanceAStar": 11,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 37,
                                        "BelowBenchmarkChance": 38,
                                        "TargetGrade": "6",
                                        "TargetChance": 62,
                                        "TargetChanceSchool": 33,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Business Studies",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 4,
                                        "GradeChanceE": 8,
                                        "GradeChanceD": 14,
                                        "GradeChanceC": 22,
                                        "GradeChanceB": 26,
                                        "GradeChanceA": 16,
                                        "GradeChanceAStar": 8,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 26,
                                        "BelowBenchmarkChance": 48,
                                        "TargetGrade": "6",
                                        "TargetChance": 52,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Chemistry",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 1,
                                        "GradeChanceE": 5,
                                        "GradeChanceD": 12,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 24,
                                        "GradeChanceA": 22,
                                        "GradeChanceAStar": 12,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 39,
                                        "BelowBenchmarkChance": 37,
                                        "TargetGrade": "6",
                                        "TargetChance": 63,
                                        "TargetChanceSchool": 29,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Design and Technology",
                                        "GradeChanceG": 1,
                                        "GradeChanceF": 5,
                                        "GradeChanceE": 11,
                                        "GradeChanceD": 16,
                                        "GradeChanceC": 21,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 14,
                                        "GradeChanceAStar": 7,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 46,
                                        "BelowBenchmarkChance": 33,
                                        "TargetGrade": "6",
                                        "TargetChance": 46,
                                        "TargetChanceSchool": 33,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "English Language",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 1,
                                        "GradeChanceE": 4,
                                        "GradeChanceD": 19,
                                        "GradeChanceC": 26,
                                        "GradeChanceB": 29,
                                        "GradeChanceA": 14,
                                        "GradeChanceAStar": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 24,
                                        "TargetGrade": "5",
                                        "TargetChance": 76,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "English Literature",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 2,
                                        "GradeChanceE": 7,
                                        "GradeChanceD": 17,
                                        "GradeChanceC": 24,
                                        "GradeChanceB": 28,
                                        "GradeChanceA": 14,
                                        "GradeChanceAStar": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 26,
                                        "TargetGrade": "5",
                                        "TargetChance": 74,
                                        "TargetChanceSchool": 45,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "French",
                                        "GradeChanceG": 1,
                                        "GradeChanceF": 7,
                                        "GradeChanceE": 21,
                                        "GradeChanceD": 21,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 14,
                                        "GradeChanceA": 10,
                                        "GradeChanceAStar": 5,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "4+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 29,
                                        "TargetGrade": "6",
                                        "TargetChance": 31,
                                        "TargetChanceSchool": 8,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Geography",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 3,
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 14,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 18,
                                        "GradeChanceAStar": 10,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 25,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "History",
                                        "GradeChanceG": 1,
                                        "GradeChanceF": 5,
                                        "GradeChanceE": 9,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 18,
                                        "GradeChanceAStar": 10,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 32,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "ICT",
                                        "GradeChanceG": 1,
                                        "GradeChanceF": 5,
                                        "GradeChanceE": 7,
                                        "GradeChanceD": 12,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 24,
                                        "GradeChanceA": 19,
                                        "GradeChanceAStar": 10,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 33,
                                        "BelowBenchmarkChance": 43,
                                        "TargetGrade": "6",
                                        "TargetChance": 57,
                                        "TargetChanceSchool": 23,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Mathematics",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 0,
                                        "GradeChanceE": 1,
                                        "GradeChanceD": 8,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 28,
                                        "GradeChanceA": 22,
                                        "GradeChanceAStar": 16,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6+",
                                        "AboveBenchmarkChance": 45,
                                        "BelowBenchmarkChance": 27,
                                        "TargetGrade": "6",
                                        "TargetChance": 73,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Music",
                                        "GradeChanceG": 1,
                                        "GradeChanceF": 4,
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 19,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 52,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "PE",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 2,
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 14,
                                        "GradeChanceC": 20,
                                        "GradeChanceB": 26,
                                        "GradeChanceA": 17,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 28,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 36,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Physics",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 0,
                                        "GradeChanceE": 4,
                                        "GradeChanceD": 11,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 24,
                                        "GradeChanceA": 24,
                                        "GradeChanceAStar": 13,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 43,
                                        "BelowBenchmarkChance": 33,
                                        "TargetGrade": "6",
                                        "TargetChance": 67,
                                        "TargetChanceSchool": 41,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Religious Studies",
                                        "GradeChanceG": 1,
                                        "GradeChanceF": 5,
                                        "GradeChanceE": 9,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 21,
                                        "GradeChanceA": 18,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 47,
                                        "TargetGrade": "6",
                                        "TargetChance": 53,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Science Additional",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 2,
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 18,
                                        "GradeChanceC": 23,
                                        "GradeChanceB": 25,
                                        "GradeChanceA": 13,
                                        "GradeChanceAStar": 7,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 47,
                                        "BelowBenchmarkChance": 30,
                                        "TargetGrade": "6",
                                        "TargetChance": 47,
                                        "TargetChanceSchool": 19,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Science Core",
                                        "GradeChanceG": 0,
                                        "GradeChanceF": 1,
                                        "GradeChanceE": 7,
                                        "GradeChanceD": 20,
                                        "GradeChanceC": 26,
                                        "GradeChanceB": 27,
                                        "GradeChanceA": 12,
                                        "GradeChanceAStar": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 46,
                                        "BelowBenchmarkChance": 28,
                                        "TargetGrade": "6",
                                        "TargetChance": 46,
                                        "TargetChanceSchool": 22,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Spanish",
                                        "GradeChanceG": 2,
                                        "GradeChanceF": 7,
                                        "GradeChanceE": 18,
                                        "GradeChanceD": 18,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 15,
                                        "GradeChanceA": 11,
                                        "GradeChanceAStar": 7,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-5",
                                        "AboveBenchmarkChance": 37,
                                        "BelowBenchmarkChance": 45,
                                        "TargetGrade": "6",
                                        "TargetChance": 37,
                                        "TargetChanceSchool": 25,
                                        "TargetReviewed": false
                                      }
                                    ]
            }


## KS4 1-9 FFT Aspire Prediction Data [/LearnerAssessmentKS4NumFFTAspireData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner


### Retrieve KS4 1-9  FFT Aspire prediction data [GET]

Retrieve KS4 1-9 FFT Aspire prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body
    
            {
                "LearnerId": 507424,
                "LearnerCode": "2012-200",
                "PredicationDetails": [
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Art and Design",
                                        "GradeChance1": 1,
                                        "GradeChance2": 4,
                                        "GradeChance3": 9,
                                        "GradeChance4": 18,
                                        "GradeChance5": 21,
                                        "GradeChance6": 20,
                                        "GradeChance7": 12,
                                        "GradeChance8": 9,
                                        "GradeChance9": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 47,
                                        "BelowBenchmarkChance": 32,
                                        "TargetGrade": "6",
                                        "TargetChance": 47,
                                        "TargetChanceSchool": 47,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Biology",
                                        "GradeChance1": 0,
                                        "GradeChance2": 1,
                                        "GradeChance3": 4,
                                        "GradeChance4": 13,
                                        "GradeChance5": 20,
                                        "GradeChance6": 25,
                                        "GradeChance7": 22,
                                        "GradeChance8": 11,
                                        "GradeChance9": 4,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 37,
                                        "BelowBenchmarkChance": 38,
                                        "TargetGrade": "6",
                                        "TargetChance": 62,
                                        "TargetChanceSchool": 33,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Business Studies",
                                        "GradeChance1": 0,
                                        "GradeChance2": 4,
                                        "GradeChance3": 8,
                                        "GradeChance4": 14,
                                        "GradeChance5": 22,
                                        "GradeChance6": 26,
                                        "GradeChance7": 16,
                                        "GradeChance8": 8,
                                        "GradeChance9": 2,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 26,
                                        "BelowBenchmarkChance": 48,
                                        "TargetGrade": "6",
                                        "TargetChance": 52,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Chemistry",
                                        "GradeChance1": 0,
                                        "GradeChance2": 1,
                                        "GradeChance3": 5,
                                        "GradeChance4": 12,
                                        "GradeChance5": 19,
                                        "GradeChance6": 24,
                                        "GradeChance7": 22,
                                        "GradeChance8": 12,
                                        "GradeChance9": 5,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 39,
                                        "BelowBenchmarkChance": 37,
                                        "TargetGrade": "6",
                                        "TargetChance": 63,
                                        "TargetChanceSchool": 29,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Design and Technology",
                                        "GradeChance1": 1,
                                        "GradeChance2": 5,
                                        "GradeChance3": 11,
                                        "GradeChance4": 16,
                                        "GradeChance5": 21,
                                        "GradeChance6": 22,
                                        "GradeChance7": 14,
                                        "GradeChance8": 7,
                                        "GradeChance9": 3,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 46,
                                        "BelowBenchmarkChance": 33,
                                        "TargetGrade": "6",
                                        "TargetChance": 46,
                                        "TargetChanceSchool": 33,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "English Language",
                                        "GradeChance1": 0,
                                        "GradeChance2": 1,
                                        "GradeChance3": 4,
                                        "GradeChance4": 19,
                                        "GradeChance5": 26,
                                        "GradeChance6": 29,
                                        "GradeChance7": 14,
                                        "GradeChance8": 6,
                                        "GradeChance9": 1,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 24,
                                        "TargetGrade": "5",
                                        "TargetChance": 76,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "English Literature",
                                        "GradeChance1": 0,
                                        "GradeChance2": 2,
                                        "GradeChance3": 7,
                                        "GradeChance4": 17,
                                        "GradeChance5": 24,
                                        "GradeChance6": 28,
                                        "GradeChance7": 14,
                                        "GradeChance8": 6,
                                        "GradeChance9": 2,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 26,
                                        "TargetGrade": "5",
                                        "TargetChance": 74,
                                        "TargetChanceSchool": 45,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "French",
                                        "GradeChance1": 1,
                                        "GradeChance2": 7,
                                        "GradeChance3": 21,
                                        "GradeChance4": 22,
                                        "GradeChance5": 19,
                                        "GradeChance6": 14,
                                        "GradeChance7": 10,
                                        "GradeChance8": 5,
                                        "GradeChance9": 2,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "4+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 29,
                                        "TargetGrade": "6",
                                        "TargetChance": 31,
                                        "TargetChanceSchool": 8,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Geography",
                                        "GradeChance1": 0,
                                        "GradeChance2": 3,
                                        "GradeChance3": 10,
                                        "GradeChance4": 14,
                                        "GradeChance5": 19,
                                        "GradeChance6": 22,
                                        "GradeChance7": 18,
                                        "GradeChance8": 10,
                                        "GradeChance9": 4,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 25,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "History",
                                        "GradeChance1": 1,
                                        "GradeChance2": 5,
                                        "GradeChance3": 9,
                                        "GradeChance4": 13,
                                        "GradeChance5": 18,
                                        "GradeChance6": 22,
                                        "GradeChance7": 18,
                                        "GradeChance8": 10,
                                        "GradeChance9": 4,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 32,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "ICT",
                                        "GradeChance1": 1,
                                        "GradeChance2": 5,
                                        "GradeChance3": 7,
                                        "GradeChance4": 12,
                                        "GradeChance5": 18,
                                        "GradeChance6": 24,
                                        "GradeChance7": 19,
                                        "GradeChance8": 10,
                                        "GradeChance9": 4,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 33,
                                        "BelowBenchmarkChance": 43,
                                        "TargetGrade": "6",
                                        "TargetChance": 57,
                                        "TargetChanceSchool": 23,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Mathematics",
                                        "GradeChance1": 0,
                                        "GradeChance2": 0,
                                        "GradeChance3": 1,
                                        "GradeChance4": 8,
                                        "GradeChance5": 18,
                                        "GradeChance6": 28,
                                        "GradeChance7": 22,
                                        "GradeChance8": 16,
                                        "GradeChance9": 7,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6+",
                                        "AboveBenchmarkChance": 45,
                                        "BelowBenchmarkChance": 27,
                                        "TargetGrade": "6",
                                        "TargetChance": 73,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Music",
                                        "GradeChance1": 1,
                                        "GradeChance2": 4,
                                        "GradeChance3": 10,
                                        "GradeChance4": 13,
                                        "GradeChance5": 18,
                                        "GradeChance6": 22,
                                        "GradeChance7": 19,
                                        "GradeChance8": 9,
                                        "GradeChance9": 4,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 52,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "PE",
                                        "GradeChance1": 0,
                                        "GradeChance2": 2,
                                        "GradeChance3": 10,
                                        "GradeChance4": 14,
                                        "GradeChance5": 20,
                                        "GradeChance6": 26,
                                        "GradeChance7": 17,
                                        "GradeChance8": 9,
                                        "GradeChance9": 2,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 28,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 36,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Physics",
                                        "GradeChance1": 0,
                                        "GradeChance2": 0,
                                        "GradeChance3": 4,
                                        "GradeChance4": 11,
                                        "GradeChance5": 18,
                                        "GradeChance6": 24,
                                        "GradeChance7": 24,
                                        "GradeChance8": 13,
                                        "GradeChance9": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 43,
                                        "BelowBenchmarkChance": 33,
                                        "TargetGrade": "6",
                                        "TargetChance": 67,
                                        "TargetChanceSchool": 41,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Religious Studies",
                                        "GradeChance1": 1,
                                        "GradeChance2": 5,
                                        "GradeChance3": 9,
                                        "GradeChance4": 13,
                                        "GradeChance5": 19,
                                        "GradeChance6": 21,
                                        "GradeChance7": 18,
                                        "GradeChance8": 9,
                                        "GradeChance9": 5,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 47,
                                        "TargetGrade": "6",
                                        "TargetChance": 53,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Science Additional",
                                        "GradeChance1": 0,
                                        "GradeChance2": 2,
                                        "GradeChance3": 10,
                                        "GradeChance4": 18,
                                        "GradeChance5": 23,
                                        "GradeChance6": 25,
                                        "GradeChance7": 13,
                                        "GradeChance8": 7,
                                        "GradeChance9": 2,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 47,
                                        "BelowBenchmarkChance": 30,
                                        "TargetGrade": "6",
                                        "TargetChance": 47,
                                        "TargetChanceSchool": 19,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Science Core",
                                        "GradeChance1": 0,
                                        "GradeChance2": 1,
                                        "GradeChance3": 7,
                                        "GradeChance4": 20,
                                        "GradeChance5": 26,
                                        "GradeChance6": 27,
                                        "GradeChance7": 12,
                                        "GradeChance8": 6,
                                        "GradeChance9": 1,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 46,
                                        "BelowBenchmarkChance": 28,
                                        "TargetGrade": "6",
                                        "TargetChance": 46,
                                        "TargetChanceSchool": 22,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Spanish",
                                        "GradeChance1": 2,
                                        "GradeChance2": 7,
                                        "GradeChance3": 18,
                                        "GradeChance4": 18,
                                        "GradeChance5": 18,
                                        "GradeChance6": 15,
                                        "GradeChance7": 11,
                                        "GradeChance8": 7,
                                        "GradeChance9": 4,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-5",
                                        "AboveBenchmarkChance": 37,
                                        "BelowBenchmarkChance": 45,
                                        "TargetGrade": "6",
                                        "TargetChance": 37,
                                        "TargetChanceSchool": 25,
                                        "TargetReviewed": false
                                      }
                                    ]
            }
            

## KS5 FFT Aspire Prediction Data [/LearnerAssessmentKS5FFTAspireData/{?LearnerId}]

+ Parameters
    + LearnerId (required, int, `35464`) ... unique id of Learner


### Retrieve KS5 FFT Aspire prediction data [GET]

Retrieve KS5 FFT Aspire prediction data for a learner

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body     
    
            {
                "LearnerId": 507424,
                "LearnerCode": "2012-200",
                "PredicationDetails": [
                                      {
                                        "LevelOfChallenge": 20,
                                        "Subject": "Art and Design",
                                        "GradeChanceE": 9,
                                        "GradeChanceD": 18,
                                        "GradeChanceC": 21,
                                        "GradeChanceB": 20,
                                        "GradeChanceA": 12,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 47,
                                        "BelowBenchmarkChance": 32,
                                        "TargetGrade": "6",
                                        "TargetChance": 47,
                                        "TargetChanceSchool": 47,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Biology",
                                        "GradeChanceE": 4,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 20,
                                        "GradeChanceB": 25,
                                        "GradeChanceA": 22,
                                        "GradeChanceAStar": 11,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 37,
                                        "BelowBenchmarkChance": 38,
                                        "TargetGrade": "6",
                                        "TargetChance": 62,
                                        "TargetChanceSchool": 33,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Business Studies",
                                        "GradeChanceE": 8,
                                        "GradeChanceD": 14,
                                        "GradeChanceC": 22,
                                        "GradeChanceB": 26,
                                        "GradeChanceA": 16,
                                        "GradeChanceAStar": 8,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 26,
                                        "BelowBenchmarkChance": 48,
                                        "TargetGrade": "6",
                                        "TargetChance": 52,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Chemistry",
                                        "GradeChanceE": 5,
                                        "GradeChanceD": 12,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 24,
                                        "GradeChanceA": 22,
                                        "GradeChanceAStar": 12,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 39,
                                        "BelowBenchmarkChance": 37,
                                        "TargetGrade": "6",
                                        "TargetChance": 63,
                                        "TargetChanceSchool": 29,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Design and Technology",
                                        "GradeChanceE": 11,
                                        "GradeChanceD": 16,
                                        "GradeChanceC": 21,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 14,
                                        "GradeChanceAStar": 7,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 46,
                                        "BelowBenchmarkChance": 33,
                                        "TargetGrade": "6",
                                        "TargetChance": 46,
                                        "TargetChanceSchool": 33,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "English Language",
                                        "GradeChanceE": 4,
                                        "GradeChanceD": 19,
                                        "GradeChanceC": 26,
                                        "GradeChanceB": 29,
                                        "GradeChanceA": 14,
                                        "GradeChanceAStar": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 24,
                                        "TargetGrade": "5",
                                        "TargetChance": 76,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "English Literature",
                                        "GradeChanceE": 7,
                                        "GradeChanceD": 17,
                                        "GradeChanceC": 24,
                                        "GradeChanceB": 28,
                                        "GradeChanceA": 14,
                                        "GradeChanceAStar": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 26,
                                        "TargetGrade": "5",
                                        "TargetChance": 74,
                                        "TargetChanceSchool": 45,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "French",
                                        "GradeChanceE": 21,
                                        "GradeChanceD": 21,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 14,
                                        "GradeChanceA": 10,
                                        "GradeChanceAStar": 5,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "4+",
                                        "AboveBenchmarkChance": 50,
                                        "BelowBenchmarkChance": 29,
                                        "TargetGrade": "6",
                                        "TargetChance": 31,
                                        "TargetChanceSchool": 8,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Geography",
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 14,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 18,
                                        "GradeChanceAStar": 10,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 25,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "History",
                                        "GradeChanceE": 9,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 18,
                                        "GradeChanceAStar": 10,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 32,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "ICT",
                                        "GradeChanceE": 7,
                                        "GradeChanceD": 12,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 24,
                                        "GradeChanceA": 19,
                                        "GradeChanceAStar": 10,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 33,
                                        "BelowBenchmarkChance": 43,
                                        "TargetGrade": "6",
                                        "TargetChance": 57,
                                        "TargetChanceSchool": 23,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Mathematics",
                                        "GradeChanceE": 1,
                                        "GradeChanceD": 8,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 28,
                                        "GradeChanceA": 22,
                                        "GradeChanceAStar": 16,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6+",
                                        "AboveBenchmarkChance": 45,
                                        "BelowBenchmarkChance": 27,
                                        "TargetGrade": "6",
                                        "TargetChance": 73,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Music",
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 22,
                                        "GradeChanceA": 19,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 52,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "PE",
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 14,
                                        "GradeChanceC": 20,
                                        "GradeChanceB": 26,
                                        "GradeChanceA": 17,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-6",
                                        "AboveBenchmarkChance": 28,
                                        "BelowBenchmarkChance": 46,
                                        "TargetGrade": "6",
                                        "TargetChance": 54,
                                        "TargetChanceSchool": 36,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Physics",
                                        "GradeChanceE": 4,
                                        "GradeChanceD": 11,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 24,
                                        "GradeChanceA": 24,
                                        "GradeChanceAStar": 13,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 43,
                                        "BelowBenchmarkChance": 33,
                                        "TargetGrade": "6",
                                        "TargetChance": 67,
                                        "TargetChanceSchool": 41,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Religious Studies",
                                        "GradeChanceE": 9,
                                        "GradeChanceD": 13,
                                        "GradeChanceC": 19,
                                        "GradeChanceB": 21,
                                        "GradeChanceA": 18,
                                        "GradeChanceAStar": 9,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "6",
                                        "AboveBenchmarkChance": 32,
                                        "BelowBenchmarkChance": 47,
                                        "TargetGrade": "6",
                                        "TargetChance": 53,
                                        "TargetChanceSchool": 0,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Science Additional",
                                        "GradeChanceE": 10,
                                        "GradeChanceD": 18,
                                        "GradeChanceC": 23,
                                        "GradeChanceB": 25,
                                        "GradeChanceA": 13,
                                        "GradeChanceAStar": 7,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 47,
                                        "BelowBenchmarkChance": 30,
                                        "TargetGrade": "6",
                                        "TargetChance": 47,
                                        "TargetChanceSchool": 19,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Science Core",
                                        "GradeChanceE": 7,
                                        "GradeChanceD": 20,
                                        "GradeChanceC": 26,
                                        "GradeChanceB": 27,
                                        "GradeChanceA": 12,
                                        "GradeChanceAStar": 6,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "5+",
                                        "AboveBenchmarkChance": 46,
                                        "BelowBenchmarkChance": 28,
                                        "TargetGrade": "6",
                                        "TargetChance": 46,
                                        "TargetChanceSchool": 22,
                                        "TargetReviewed": false
                                      },
                                      {
                                        "LevelOfChallenge": 50,
                                        "Subject": "Spanish",
                                        "GradeChanceE": 18,
                                        "GradeChanceD": 18,
                                        "GradeChanceC": 18,
                                        "GradeChanceB": 15,
                                        "GradeChanceA": 11,
                                        "GradeChanceAStar": 7,
                                        "EPGrade": "",
                                        "EPChance": "",
                                        "BenchmarkGrade": "-5",
                                        "AboveBenchmarkChance": 37,
                                        "BelowBenchmarkChance": 45,
                                        "TargetGrade": "6",
                                        "TargetChance": 37,
                                        "TargetChanceSchool": 25,
                                        "TargetReviewed": false
                                      }
                                    ]
            }

# Group Exams

Group of all Exam-related resources

## Exam Candidates [/ondiandidate]

### Create Exam Candidates [POST]

Create one to many exam candidates

+ Fields
    + AcademicYearId (required, int, `5412`) ... Id of Academic Year
    + CentreNumber (required, int, `23456`) ... unique Examination Centre Number of the School
    + LearnerCode (required, string, `2014-3456`) ... unique Code of Learner
    + Number (required, int, `1000`) ... unique number of Candidate within the Academic Year
    + UCI (required, string, `221550175610F`) ... unique Candidate Identifier
    + Status (required, string, `P`) ... choice of P = Private, C = Internal, X = Non Statistical
    + RestrictedSeat (optional, boolean, `false`) ... choice of true or false
    + ApplyFee (optional, boolean, `false`) ... choice of true or false
    + OtherDetails (optional, string, `Lorem ipsum`) ... free text notes field

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "AcademicYearId":   3892,
                "CentreNumber":     23456,
                "LearnerCode":      "2012-0403",
                "Number":           "1000",
                "UCI":              "221550175610F",
                "Status":           "C",
                "RestrictedSeat":   false,
                "ApplyFee":         false,
                "OtherDetails":     "lorem ipsum"
            }

+ Response 200

    + Body
    
            {
                "Status":        true,
                "Details":       "Saved successfully",
                "CandidateId":   123456
            }



## Exams Results [/LearnerExamOptionResult/{?AcYearId}{?Year}{?LearnerId}{?Status}]


**Either AcYearId, Year or LeanerId is mandatory**

+ Parameters
    + AcYearId (required, int, `1234`) ... unique Id of Academic Year
    + Year (required, string, `2015`) ... Year of the Exam
    + LearnerId (required, int, `123420`) ... unique ID of Learner
    + Status (optional, string,`C`) ... statuc of the candidate C = Internal, P = Private, X = Non-Statistical
        

### Retrieve Exam Results [GET]

Retrieve one to many exam results for a learner
        
+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (applicatoin/json)

    + Body    
        
            {
                "LearnerId":    120318,
                "LearnerCode":  "015234",
                "Status":       "C",
                "ULN":          123489792,
                "UCI":          "423498757459892784P",
                "CandidateNumber":  5004,
                "ExamResults":  [{
                                    "Board":                "70",
                                    "Series":               "6G",
                                    "Year":                 "2015",
                                    "OptionCode":           "ENL03",
                                    "Option":               "ENGLISH LANGUAGE UNIT 3",
                                    "SyllabusCode":         "4700",
                                    "Syllabus":             "ENGLISH AND ENGLISH LANGUAGE",
                                    "ResultType":           "U",
                                    "First":                "081",
                                    "Second":               "C",
                                    "MaxMark":              100,
                                    "ExamQualification":    null,
                                    "ExamLevel":            "Not applicable",
                                    "ExamQualUnit":         "GCSE",
                                    "ExamLevelUnit":        "Not applicable",
                                    "ExamUnit":             "U",
                                    "QCAClassification":    "RB1",
                                    "QCANumber":            null,
                                    "FeeDefined":           false,
                                    "Fee":                  10.95
                                },{
                                    "Board":                "70",
                                    "Series":               "6G",
                                    "Year":                 "2015",
                                    "OptionCode":           "9717",
                                    "Option":               "ENGLISH LITERATURE",
                                    "SyllabusCode":         "9715",
                                    "Syllabus":             "ENGLISH LITERATURE",
                                    "ResCode":              "B",
                                    "ResultType":           "B",
                                    "First":                "0153",
                                    "Second":               "B",
                                    "MaxMark":              200,
                                    "ExamQualification":    "GCSE",
                                    "ExamLevel":            null,
                                    "ExamQualUnit":         null,
                                    "ExamLevelUnit":        null,
                                    "ExamUnit":             "C",
                                    "QCAClassification":    "RB1",
                                    "QCANumber":            "60095064",
                                    "FeeDefined":           false,
                                    "Fee":                  0.00
                                }],
                },{
                "LearnerId":    23456,
                "LearnerCode":  "015654",
                "Status":       "P",
                "ULN":          1234897892,
                "UCI":          "4234987574594564H",
                "CandidateNumber":  1234,
                "ExamResults":  [{
                                    "Board":                "70",
                                    "Series":               "6G",
                                    "Year":                 "2015",
                                    "OptionCode":           "ENL03",
                                    "Option":               "ENGLISH LANGUAGE UNIT 3",
                                    "SyllabusCode":         "4700",
                                    "Syllabus":             "ENGLISH AND ENGLISH LANGUAGE",
                                    "ResultType":           "U",
                                    "First":                "0126",
                                    "Second":               "B",
                                    "MaxMark":              150,
                                    "ExamQualification":    null,
                                    "ExamLevel":            "Not applicable",
                                    "ExamQualUnit":         "GCSE",
                                    "ExamLevelUnit":        "Not applicable",
                                    "ExamUnit":             "U",
                                    "QCAClassification":    "RB1",
                                    "QCANumber":            null,
                                    "FeeDefined":           false,
                                    "Fee":                  10.95
                                },{
                                    "Board":                "70",
                                    "Series":               "6G",
                                    "Year":                 "2015",
                                    "OptionCode":           "9717",
                                    "Option":               "ENGLISH LITERATURE",
                                    "SyllabusCode":         "9715",
                                    "Syllabus":             "ENGLISH LITERATURE",
                                    "ResCode":              "B",
                                    "ResultType":           "B",
                                    "First":                "0153",
                                    "Second":               "B",
                                    "MaxMark":              200,
                                    "ExamQualification":    "GCSE",
                                    "ExamLevel":            null,
                                    "ExamQualUnit":         null,
                                    "ExamLevelUnit":        null,
                                    "ExamUnit":             "C",
                                    "QCAClassification":    "RB1",
                                    "QCANumber":            "60095064",
                                    "FeeDefined":           false,
                                    "Fee":                  0.00 
                                }]
                }
               




### Create Exam Results [POST]

Create one to many exam result entries for a learner

**Either FirstGrade or SecondGrade is mandatory**

    + LearnerCode (required, string, '123456') ... code of Learner
    + CandidateNumber (required, string, '5004') ... unique candidate number of Learner
    + AcademicYearId (required, int, 1234) ... unique Id of the Academic Year in which the Examwas taken
    + Board (required, string, '70') ... unique Id of Exam board
    + Series (required, string, '6G') ... unique code for the exam series
    + Year (required, string, '2015') ... year in which the exam was taken
    + OptionCode (required, string, 'ENL03') ... code of the Option taken
    + SyllabusCode (required, string, '4700') ... code of the Syllabus in which the Option belongs
    + ResultType (required, string, 'U') ... type of result
    + FirstGrade (optional, string, '081') ... first result grade
    + SecondGrade (optional, string, 'C') ... second result grade

+ Request 

    + Header
    
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "LearnerCode":      "123456",
                "CandidateNumber":  "5004",
                "AcademicYearId":   1234,
                "ExamResults":  [{
                                    "Board":                "70",
                                    "Series":               "6G",
                                    "Year":                 "2015",
                                    "OptionCode":           "ENL03",
                                    "SyllabusCode":         "4700",
                                    "ResultType":           "U",
                                    "First":                "081",
                                    "Second":               "C"
                                },{
                                    "Board":                "70",
                                    "Series":               "6G",
                                    "Year":                 "2015",
                                    "OptionCode":           "9717",
                                    "SyllabusCode":         "9715",
                                    "ResultType":           "1",
                                    "First":                "0153",
                                    "Second":               "B"
                                }]
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "LearnerCode":              "123456",
                "ExamCandidateOptionId":    4321
            },{
                "Status":                   true,
                "Details":                  "Saved successfully",
                "LearnerCode":              "123456",
                "ExamCandidateOptionId":    4322 
            }


## Assign Options to Candidates [/AssignOptionsToCandidate]

All fields are mandatory

### Assign Options To Candidates [POST]


+ Request 

    + Header
    
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {  
                "LearnerCode":      "115258",
                "CandidateNumber":  "5298",
                "AcademicYearId":   3220,
                "ExamResults":  [{
                                    "Board":                "10",
                                    "Series":               "6G",
                                    "Year":                 "2017",
                                    "OptionCode":           "1MA0H",
                                    "SyllabusCode":         "1MA0",
                                    "ResultType":           "1"
                                }]
            }
            
+ Response 200

            {
                "Status": true,
                "Details": "Saved successfully",
                "LearnerCode": "2011-0551",
                "ExamCandidateOptionId": 5529565
            }


# Group Groups

Group of all Group-related resources

## Groups Collection [/Groups{?GroupStartDate}{?GroupEndDate}{?Type}{?Since}{?EmployeeId}{?LearnerId}]
*New parameters of EmployeeId and LearnerId have been added*

### Retrieve a collection of Groups [GET]

+ Parameters
    + GroupStartDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a start date on or after date
    + GroupEndDate (optional, dateTime, `01-04-2014T18:00:00`) ... Groups with a end date on or before date
    + Type (optional, string, `TeachingGroup`) ... Type of Group: TeachingGroup, ReigstrationGroup, AdhocGroup, AcademicHouseGroup
    + Since (optional, dateTime, `01-04-2014T18:00:00`) ... Groups modified since date provided
    + EmployeeId (optional, int, `534678`) ... unique Id of Employee
    + LearnerId (optional, int, `123098`) ... unique Id of Learner

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "GroupCode":    "A1",
                "Course":       "Vertical Groups",
                "DateFrom":     "30-08-2015 00:00:00",
                "DateTo":       "27-08-2016 00:00:00",
                "EmployeeId":   [
                                  {
                                    "StaffCode": "DO",
                                    "EmployeeId": "104006"
                                  }
                                ],
                "GroupId":      "1044575",
                "GroupName":    "Anvil 1",
                "Size":         "3",
                "SubjectCode":  "",
                "SubjectName":  "",
                "Type":         "AcademicHouseGroup",
                "Year":         "M"
                                },{
                "GroupCode":    "10EN4b",
                "Course":       "Key Stage 4",
                "DateFrom":         "30-08-2015 00:00:00",
                "DateTo":       "27-08-2016 00:00:00",
                "employeeId":   [
                                  {
                                    "StaffCode": "VG",
                                    "EmployeeId": "104041"
                                  }
                                ],
                "GroupId":      "1044313",
                "GroupName":    "10EN4b",
                "Size":         "2",
                "SubjectCode":  "ENLIT",
                "SubjectName":  "English Literature",
                "Type":         "TeachingGroup",
                "Year":         "10"
                                },{
                "GroupCode":    "SIX",
                "Course":       "",
                "DateFrom":     "30-08-2015 00:00:00",
                "DateTo":       "31-08-2016 00:00:00",
                "employeeId":   [
                                  {
                                    "StaffCode": "KF",
                                    "EmployeeId": "103973"
                                  }
                                ],
                "GroupId":      "1044597",
                "GroupName":    "6th Form",
                "Size":         "9",
                "SubjectCode":  "",
                "SubjectName":  "",
                "Type":         "RegistrationGroup",
                "Year":         ""
                                },{
                "GroupCode":    "Ski Trip",
                "Course":       "",
                "DateFrom":     "01-04-2016 00:00:00",
                "DateTo":       "27-05-2016 00:00:00",
                "employeeId":   [
                                  {
                                    "StaffCode": "EF",
                                    "EmployeeId": "103995"
                                  }
                                ],
                "GroupId":      "1074942",
                "GroupName":    "Ski Trip",
                "Size":         "30",
                "SubjectCode":  "",
                "SubjectName":  "",
                "Type":         "AdhocGroup",
                "Year":         ""
              }
              

## Create/Update Group [/groups]

### Create Group [POST]

Create one or many groups
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
            {
                "GroupCode":    "9A",
                "course":       "KS4",
                "dateFrom":     "01-09-2015 00:00:00",
                "dateTo":       "30-08-2016 00:00:00",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "Name":         "9A",
                "subjectCode":  "",
                "subjectName":  "",
                "type":         "RegistrationGroup",
                "Year":         "10"
            },
            {
                "groupCode":    "10SC/1",
                "course":       "Key Stage 4",
                "dateFrom":     "01-09-2015 00:00:00",
                "dateTo":       "30-08-2016 00:00:00",
                "employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   "00001"}
                                ],
                "Name":         "10 Science 1",
                "subjectCode":  "SC",
                "subjectName":  "Science",
                "type":         "TeachingGroup",
                "Year":         "10"
            }


+ Response 200

    + Body
    
            {
                "Details":      "Saved successfully",
                "Status":       "True",
                "groupId":      000001,
                "groupCode":    "9B"
             },
            {
                "Details":      "Saved successfully",
                "Status":       "True",
                "groupId":      000002,
                "groupCode":    "10SC/1"
            }


### Update Group [PUT]
Update one or many groups

+ Mandatory fields
    + GroupId
    + GroupCode
    + Type
    + DateFrom
    + DateTo
    + SubjectCode (only for TeachingGroup)
            
+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

    + Body
    
             [{
                "GroupId":      000001,
                "GroupCode":    "9B",
                "Course":       "Key Stage 4",
                "DateFrom":     "",
                "DateTo":       "",
                "Employee":   [{
                                    "StaffCode":    "JDo",
                                    "EmployeeId":   00001},
                                {
                                    "EmployeeId":   54321,
                                    "StaffCode":    "JDo"
                                }],
                "Name":         "9A",
                "SubjectCode":  "",
                "SubjectName":  "",
                "Type":         "RegistrationGroup",
                "Year":         "9"
            }]


+ Response 200

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved Successfully"
                "GroupId":      000001,
                "GroupCode":    "9B"
             }


## Group Association [/GroupAssociation/{?GroupId}{?GroupStartDate}{?GroupEndDate}{?IncludePast}]

**Please note: StartDate and EndDate in the response are the dates the Learner joined and left the group**
* Learner Forename and Surname have been added to the response - 06/04/2018

+ Parameters
    + GroupId (optional, number, `12345`) ... unique identifier of a Learner Group
    + GroupStartDate (optional, dateTime, `01-04-2014`) ... optional filter to retrieve all groups with a start date after specified date
    + GroupEndDate (required, dateTime, `01-04-2014`) ... required if GroupStartDate exist to retrieve all groups with an end date before specified date
    + IncludePast (optional, boolean, `true`) ... reutrns past learners in the group as well as current if true
    

### Retrieve Learner Group Association [GET]


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]


+ Response 200 (application/json)

    + Body
    
            {
                "GroupId": 1208864,
                "Code": "Ext-StuOth",
                "GroupType": "AcademicHouseGroup",
                "Learners": [
                    {
                        "LearnerId": 245218,
                        "LearnerCode": "2009-0017",
                        "Forename": "Sanelisiwe",
                        "Surname": "Nazi-Angileh",
                        "LearnerGroupLearnerId": 14719301,
                        "StartDate": "2017-03-09",
                        "EndDate": null
                    },
                    {
                        "LearnerId": 246638,
                        "LearnerCode": "2013-0076",
                        "Forename": "Randal",
                        "Surname": "Bodziarczyk",
                        "LearnerGroupLearnerId": 14650361,
                        "StartDate": "2017-02-20",
                        "EndDate": null
                    },
                    {
                        "LearnerId": 245253,
                        "LearnerCode": "109056",
                        "Forename": "Wafah",
                        "Surname": "Dadisman",
                        "LearnerGroupLearnerId": 14650360,
                        "StartDate": "2017-02-20",
                        "EndDate": null
                    }
            },{
                        "GroupId": 1226419,
                        "Code": "U6-JD",
                        "GroupType": "RegistrationGroup",
                        "Learners": [
                            {
                                "LearnerId": 245507,
                                "LearnerCode": "110015",
                                "Forename": "Nahomy",
                                "Surname": "Osburn",
                                "LearnerGroupLearnerId": 14918706,
                                "StartDate": "2017-09-07",
                                "EndDate": "2018-07-31"
                            },
                            {
                                "LearnerId": 245994,
                                "LearnerCode": "111624",
                                "Forename": "Sherhona",
                                "Surname": "Dobritoiu",
                                "LearnerGroupLearnerId": 14707593,
                                "StartDate": "2017-08-01",
                                "EndDate": "2018-07-31"
                            }
            }
            

## Create/Update Group Association [/groupAssociation]

### Create Group Association [POST]
Create Group Association for one to many Learners and Groups

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                    "Code":     "10AR1",
                    "GroupType":"TeachingGroup",
                    "Learners": [{
                                        "LearnerCode":                1,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  "30-08-2015"
                                },
                                {
                                        "LearnerId":                2,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  "30-08-2015"

                                }]
            },
            {
                    "Code":     "10A",
                    "GroupType":"RegistrationGroup",
                    "Learners": [{
                                        "LearnerId":                1,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  "30-08-2015"
                                },
                                {
                                        "LearnerId":                2,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  "30-08-2015"

                                }]

            },
            {
                    "Code":     "Ski Trip",
                    "GroupType":"AdHocGroup",
                    "Learners": [{
                                        "LearnerId":                1,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  "30-08-2015"
                                },
                                {
                                        "LearnerId":                2,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  "30-08-2015"

                                }]

            },
            {
                    "Code":     "Dove",
                    "GroupType":"AcademicHouseGroup",
                    "Learners": [{
                                        "LearnerId":                1,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  null
                                },
                                {
                                        "LearnerId":                2,
                                        "StartDate":                "01-09-2014",
                                        "EndDate":                  null

                                }]

            }


+ Response 200 (application/json)

    + Body
    
            {
                    "GroupId":      1,
                    "Status":       true,
                    "Details":      "Saved successfully",
                    "Learners":   [{
                                        "Status":       true,
                                        "Details":      "Saved successfully",
                                        "LearnerId":                1,
                                        "LearnerGroupLearnerId":    1

                                },
                                {
                                        "Status":       true,
                                        "Details":      "Saved successfully",
                                        "LearnerId":                2,
                                        "LearnerGroupLearnerId":    2


                                }]
            },
            {
                    "GroupId":      2,
                    "Status":       true,
                    "Details":      "Saved successfully",                  
                    "Learners":   [{
                                        "Status":       true,
                                        "Details":      "Saved successfully",
                                        "LearnerId":                1,
                                        "LearnerGroupLearnerId":    3

                                },
                                {
                                        "Status":       true,
                                        "Details":      "Saved successfully",                                
                                        "LearnerId":                2,
                                        "LearnerGroupLearnerId":    4

                                }]            
        
             }

### Update Group Association [PUT]
Update Group Association for one to many Learners and Groups

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                    "groupId":   1,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1,
                                        "startDate":                "10-09-2014",
                                        "endDate":                  "30-08-2015"
                                }]
            },
            {
                    "groupId":   2,
                    "learners":   [{
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                },
                                {
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4,
                                        "startDate":                "01-09-2014",
                                        "endDate":                  "30-08-2015"
                                }]
            }


+ Response 200 (application/json)

    + Body
    
            {
                    "groupId":      1,
                    "status":       true,
                    "details":      "Saved successfully",
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    1

                                }]
            },
            {
                    "groupId":      2,
                    "status":       "success",
                    "details":      "Action Successful",see                   
                    "learners":   [{
                                        "status":       true,
                                        "details":      "Saved successfully",
                                        "learnerId":                1,
                                        "learnerGroupLearnerId":    3

                                },
                                {
                                        "status":       true,
                                        "details":      "Saved successfully",                                
                                        "learnerId":                2,
                                        "learnerGroupLearnerId":    4

                                }]            
        
             }


# Group  Academic Data
Group of all Academic Resources

## School [/School]

### Retrieve School Details [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
              "SchoolId":           20156,
              "EstablishmentName":  "A School Name",
              "Street":             "Street Lane",
              "Locality":           "Denby",
              "Town":               "Streettown",
              "County":             "Derbyshire",
              "Postcode":           "KT3 5HL",
              "LAName":             "Derbyshire",
              "LANumber":           "830",
              "DfENumber":          "2045",
              "Status":             "Open",
              "EstablishmentType":  "Independant",
              "OpenDate":           "01/09/2000",
              "HeadPreferredJobTitle":  "Principal",
              "HeadTitle":          "Mr",
              "HeadFirstName":      "John",
              "HeadLastName":       "Depp",
              "TelephoneSTDCode":   "01335",
              "TelephoneNumber":    "123456",
              "WebsiteAddress":     "http://www.vischool.sch.uk",
              "EmailAddress":       "info@vischool.com"
            }
    
    

## AcademicYear [/academicYear/{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Year

### Retrieve AcademicYear [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "AcademicYearId":   1
                "Name":             "Academic Year 2014/2015",
                "StartDate":        "01-09-2014",
                "EndDate":          "31-08-2015"
                
             },
            {
                "AcademicYearId":   2
                "Name":             "Academic Year 2013/2014",
                "StartDate":        "01/09/2013",
                "EndDate":          "31/08/2014"
                
            }


### Create Academic Year [POST]

**If a school already exists then this method should be used to create future Academic Years**

Create one to many current or future academic years

+ Mandatory fields

    + Name (mandatory, string, 'Academic Year 2016/2017') ... name of the Academic Year
    + StartDate (mandatory, DateTime, '01/09/2016') ... start date of the Academic Year
    + EndDate (mandatory, DateTime, '31/08/2017') ... end date of the Academic Year

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "Name":             "Academic Year 2015/20146",
                "StartDate":        "01/09/2015",
                "EndDate":          "31/08/2016"                 
             },
            {
                "Name":             "Academic Year 2016/2017",
                "StartDate":        "01/09/2016",
                "EndDate":          "31/08/2017"             
            }

            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1114,
                "Name":             "Academic Year 2015/2016",
                "StartDate":        "01/09/2015",
                "EndDate":          "31/08/2016"    
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1115,
                "Name":             "Academic Year 2016/2017",
                "StartDate":        "01/09/2016",
                "EndDate":          "31/08/2017"     
            }
            

## Academic Terms [/AcademicTerms/{?id}{?AcYearId}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Term
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve AcadmicTerms [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1,
                "academicTermId":   1,
                "name":             "Autumn",
                "startDate":        "01/09/2014",
                "endDate":          "19/12/2014"
                
             },
            {
                "academicYearId":   1,
                "academicTermId":   2,
                "name":             "Spring",
                "startDate":        "05/01/2015",
                "endDate":          "10/04/2015"
                
            }


### Create Academic Term [POST]

Create one to many academic terms

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "AcademicYearId":   1,
                "Name":             "Autumn",
                "StartDate":        "01/09/2014",
                "EndDate":          "19/12/2014"
                
             },
            {
                "AcademicYearId":   1,
                "Name":             "Spring",
                "StartDate":        "05/01/2015",
                "EndDate":          "10/04/2015"
                
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1,
                "AcademicTermId":   1,
                "Name":             "Autumn",
                "StartDate":        "01/09/2014",
                "EndDate":          "19/12/2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "AcademicTermId":   2
                "Name":             "Spring",
                "StartDate":        "05/01/2015",
                "EndDate":          "10/04/2015"
                
            }

## Term Breaks [/termBreaks/{?AcYearId}{?id}]

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Term Break
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Term Breaks [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "academicYearId":   1,
                "TermBreakId":      1,
                "name":             "Spring Half Term",
                "startDate":        "2014-04-25",
                "endDate":          "2014-06-01"
                
             },
            {
                "academicYearId":   1,
                "TermBreakId":      2,
                "name":             "Autumn Half Term",
                "startDate":        "2013-10-26",
                "endDate":          "2013-11-01"
                
            }


## Create/Update Term Breaks [/TermBreaks]

### Create Term Breaks [POST]

Create one to many terms breaks

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "AcademicYearId":   1,
                "Name":            "Spring Half Term",
                "StartDate":        "2014-05-25",
                "EndDate":          "2014-06-01"
                
             },
            {
                "AcademicYearId":   1,
                "Name":             "Autumn Half Term",
                "StartDate":        "2013-10-26",
                "EndDate":          "2013-11-02"
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      1
                "Name":             "Spring Half Term",
                "StartDate":        "25/05/2014",
                "EndDate":          "01/06/2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      2
                "Name":             "Autumn Half Term",
                "StartDate":        "26/10/2013",
                "EndDate":          "02/11/2013"
                
            }


### Update Term Breaks [PUT]

Update one to many terms breaks

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "AcademicYearId":   1,
                "TermBreakId":      1,
                "Name":             "Spring Half Term",
                "StartDate":        "2014-05-25",
                "EndDate":          "2014-06-01"
                
             },
            {
                "AcademicYearId":   1,
                "TermBreakId":      2,
                "Name":             "Autumn Half Term",
                "StartDate":        "2013-10-26",
                "EndDate":          "2013-11-02"
                
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      1
                "Name":             "Spring Half Term",
                "StartDate":        "25-05-2014",
                "EndDate":          "01-06-2014"
                
             },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1
                "TermBreakId":      2
                "Name":             "Autumn Half Term",
                "StartDate":        "26-10-2013",
                "EndDate":          "02-11-2013"
            }


## Week Structure [/weekStructure/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve WeekStructure [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "AcYearId":             1
                "Name":                 "Sunday",
                "WorkingNonWorking":    "NWD"
             },
            {
                "AcYearId":             1
                "Name":                 "Monday",
                "WorkingNonWorking":    "FWD"
                
            },
            {
                "AcYearId":             1
                "Name":                 "Tuesday",
                "WorkingNonWorking":    " Half Working Day - AM"
                
            },
            {
                "AcYearId":             1
                "Name":                 "Wednesday",
                "WorkingNonWorking":    "Half Working Day - PM"
                
            }


## Academic Calendar Events [/academicCalendarEvents/{?AcademicYearId}{?id}]

Optional parameters are:

- AcademicYearId - Academic Year Id
- Id - Calendar Event Id

+ Parameters
    + id (optional, number, `12345`) ... The unique identifier of the Academic Calendar Event
    + AcademicYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Calendar Events [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
            
            {
                "AcademicYearId":             1
                "name":                 "Inset Day",
                "category":             "IN",
                "startDate":            "2014-09-02",
                "endDate":              "2014-09-02",
                "fullHalfDay":          "FD"
                "calendarEventId":      0001
            },
            {
                "AcademicYearId":             1
                "name":                 "Teacher Training",
                "category":             "#",
                "startDate":            "2014-09-03",
                "endDate":              "2014-09-03",
                "fullHalfDay":          "HDA"
                "calendarEventId":      0002
            }


## Create/Update Academic Calendar Events [/academicCalendarEvents]

### Create Academic Calendar Events [POST]
Create one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            

    + Body
    
            {
                "AcYearId":             1,
                "Name":                 "Half day pm",
                "Category":             "IN",
                "StartDate":            "2016-10-03",
                "EndDate":              "2016-10-03",
                "FullHalfDay":          "HDP"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "O~",
                "StartDate":            "2016-09-05",
                "EndDate":              "2016-09-05",
                "FullHalfDay":          "FD"
            }
    
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "Name":                 "Inset Day",
                "StartDate":            "02-09-2014",
                "WndDate":              "02-09-2014",
                "CalendarEventId":      0003
            },
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "Name":                 "Inset Day",
                "StartDate":            "20-09-2014",
                "EndDate":              "20-09-2014",
                "CalendarEventId":      0004
            }

### Update Academic Calendar Events [PUT]
Update one to many Academic Calendar Events

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
    + Body

            {
                "AcYearId":             1
                "name":                 "Inset Day",
                "category":             "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "fullHalfDay":          "Full Day"
            },
            {
                "AcYearId":             1
                "name":                 "Teacher Training",
                "category":             "Only staff should attend",
                "startDate":            03-09-2014,
                "endDate":              03-09-2014,
                "fullHalfDay":          "Half Day AM"
            }
            
+ Response 200 (application/json)

    + Body
        
            {
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            },
            {
                "name":                 "Inset Day",
                "startDate":            02-09-2014,
                "endDate":              02-09-2014,
                "calendarEventId":      0003
            }

## Courses [/courses/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve Courses  [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "AcYearId":          1,
                "CourseCode":       "KS3",
                "CourseName":       "Key Stage 3",
                "CourseId":         0001
            },
            {
                "AcYearId":         1,
                "CourseCode":       "KS4",
                "CourseName":       "Key Stage 4",
                "CourseId":         0002

            }


## CourseYears [/courseYear/{?AcYearId}]

+ Parameters
    + AcYearId (optional, number, `12345`) ... The unique identifier of an Academic Year

### Retrieve CourseYears Association [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
              {
                    "AcademicYearId": 2251,
                    "CourseCode": "KS3",
                    "CourseName": "Key Stage 3",
                    "CourseId": 2575,
                    "YearCode": "7",
                    "YearName": "Year 7",
                    "YearId": 2429,
                    "CourseYearId": 11937
                  },
                  {
                    "AcademicYearId": 2252,
                    "CourseCode": "KS3",
                    "CourseName": "Key Stage 3",
                    "CourseId": 2575,
                    "YearCode": "7",
                    "YearName": "Year 7",
                    "YearId": 2429,
                    "CourseYearId": 11938
                  },
                  {
                    "AcademicYearId": 2245,
                    "CourseCode": "KS3",
                    "CourseName": "Key Stage 3",
                    "CourseId": 2575,
                    "YearCode": "7",
                    "YearName": "Year 7",
                    "YearId": 2429,
                    "CourseYearId": 11939
                }


### Create CourseYears [POST]

Create association of one to many Course to Years

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "AcademicYearId": 3668,
                "CourseCode": "R",
                "YearCode": "R"
            },
            {
                "AcademicYearId": 3669,
                "CourseCode": "R",
                "YearCode": "R"
            },
            {
                "AcademicYearId": 3670,
                "CourseCode": "R",
                "YearCode": "R"
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1,
                "CourseId":         0001,
                "YearTypeId":       0001,
                "CourseYearId":     0001
            },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "AcademicYearId":   1,
                "CourseId":         0002,
                "YearTypeId":       0004,
                "CourseYearId":     0003
            }
            

## CourseSubject [/CourseSubject]

Create association of one to many Course to Subjects

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                    "Course":   "KS3",
                    "Subjects": [
                                   "Bs","By","Ch","Cm","Ct"
                                ]
            },{
                    "Course":   "KS4",
                    "Subjects": [
                                   "Bs","By","Ch","Cm","Ct"
                                ]
            }
            
+ Response 200 (application.json)

    + Body
    
            {
                "CourseSubjectId":  2446053,
                "Status":           true,
                "Course":           "KS3", 
                "Subject":          "AD",
                "Details":          "Saved successfully"
            },{
                "CourseSubjectId":  2446054,
                "Status":           true,
                "Course":           "KS3", 
                "Subject":          "BI",
                "Details":          "Saved successfully"
            }, {
                "CourseSubjectId":  2446055,
                "Status":           true,
                "Course":           "KS3", 
                "Subject":          "CH",
                "Details":          "Saved successfully"
            }, {
                "CourseSubjectId":  2446056,
                "Status":           true,
                "Course":           "KS3", 
                "Subject":          "CS",
                "Details":          "Saved successfully"
            }, {
                "CourseSubjectId":  2446057,
                "Status":           true,
                "Course":           "KS3", 
                "Subject":          "EN",
                "Details":          "Saved successfully"
            },{
                "CourseSubjectId":  2446058,
                "Status":           true,
                "Course":           "KS4", 
                "Subject":          "AD-GCSE",
                "Details":          "Saved successfully"
            },{
                "CourseSubjectId":  2446059,
                "Status":           true,
                "Course":           "KS4", 
                "Subject":          "BI-GCSE",
                "Details":          "Saved successfully"
            },  {
                "CourseSubjectId":  2446060,
                "Status":           true,
                "Course":           "KS4", 
                "Subject":          "CH-GCSE",
                "Details":          "Saved successfully"
            },  {
                "CourseSubjectId":  2446061,
                "Status":           true,
                "Course":           "KS4", 
                "Subject":          "CS-GCSE",
                "Details":          "Saved successfully"
            },  {
                "CourseSubjectId":  2446062,
                "Status":           true,
                "Course":           "KS4", 
                "Subject":          "EN-GCSE",
                "Details":          "Saved successfully"
            }  
            

## Departments [/Departments]

### Retrieve a list of Departments

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
            
+ Response 200 (application.json)

    + Body
    
            {
                "DepartmentId": 4947,
                "DepartmentCode": "AD",
                "DepartmentName": "Art & Design",
                "EmployeeId": 68422,
                "HeadOfDepartment": "GD",
                "Subjects": [
                              {
                                "SubjectId": 170189,
                                "SubjectCode": "PG-A2"
                              },
                              {
                                "SubjectId": 170190,
                                "SubjectCode": "PG-AS"
                              },
                              {
                                "SubjectId": 170191,
                                "SubjectCode": "PG-GCSE"
                              },
                              {
                                "SubjectId": 169778,
                                "SubjectCode": "AD-GCSE"
                              },
                              {
                                "SubjectId": 169772,
                                "SubjectCode": "AD-AS"
                              },
                              {
                                "SubjectId": 169770,
                                "SubjectCode": "AD-A2"
                              },
                              {
                                "SubjectId": 169769,
                                "SubjectCode": "AD"
                              },
                              {
                                "SubjectId": 178581,
                                "SubjectCode": "ADA-GCSE"
                              }
                            ]
              }
              

### Create Departments [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "DepartmentCode":       "ICT",
                "DepartmentName":       "ICT", 
                "HeadOfDepartment":     null,
                "Subjects":          [{
                                        "SubjectCode":  "AIT"
                                    },{
                                        "SubjectCode":  "DTE"
                                    },{
                                        "SubjectCode":  "ICT"
                                    }
                                     ]                                    
            }
            
+ Response 200 (application/json)

            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "DepartmentId":         0001,
                "DepartmentCode":       "ICT"
            }


## Subjects [/Subjects]

### Retrieve a list of school subjects [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "LookupId":         1525,
                "Code":             "ENG",
                "Name":             "English,
                "Description":      "English"
            },
            {
                "LookupId":         1526,
                "Code":             "FRE",
                "Name":             "French,
                "Description":      "French"
            }


### Create School Subjects [POST]

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Code":     "AAA",
                "Name":     "Athletics",
                "Type":     "Core",
                "MappedTo": "PE"
            },
            {
                "Code":     "CoS",
                "Name":     "Computer Science",
                "Type":     "Core",
                "MappedTo": "ICT"
            }

+ Response 200

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "SubjectId":    123456
            }


# Group Pay Scales

Collection of all Pay Scale related methods

## Pay Scales [/PayScales/{?EffectiveFrom}{?EffectiveTo}]

+ Parameters
    + EffectiveFrom (optional, date, `05-09-2016`) ... the beginning of the date range - this is mandatory if EffectiveTo is used
    + EffectiveTo (optional, date, `31-12-2016`) ... the end of the date range - this is mandatory if EffectiveFrom is used
    

### Retrieve Pay Scales [GET]

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "PayScaleId":1460,
                "Code":"OT",
                "Name":"My Scale",
                "PayRangeSpinePoints":  [{
                                        "PayScaleSpinePointId":304292,
                                        "RegionalSpine":"LI",
                                        "EffectiveFrom":"2016-09-01",
                                        "EffectiveTo":"2017-09-29",
                                        "Point":"10",
                                        "Amount":46000.00
                                        }]
            },{
                "PayScaleId":1461,
                "Code":"OT",
                "Name":"My staffs",
                "PayRangeSpinePints":   [{
                                        "PayScaleSpinePointId":304294,
                                        "EffectiveFrom":"2017-06-01",
                                        "EffectiveTo":"2017-09-29",
                                        "Point":"11",
                                        "Amount":41000.00
                                        },{
                                        "PayScaleSpinePointId":304293,
                                        "EffectiveFrom":"2016-08-01",
                                        "EffectiveTo":"2017-05-30",
                                        "Point":"10",
                                        "Amount":36000.00
                                        }]
            }
            

### Create Pay Scales [POST]

All fields are mandatory except RegionalSpine

Code will always be OT

+ Request

    + Headers
            
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Name":             "My Teachers",
                "EffectiveFrom":    "01-09-2016",
                "EffectiveTo":      "31-09-2017",
                "Point":            "9",
                "Amount":           "35000"
            },{
                "Name":             "My Teachers",
                "EffectiveFrom":    "01-09-2016",
                "EffectiveTo":      "31-09-2017",
                "Point":            "10",
                "Amount":           "40000"
            },{
                "Name":             "My Teachers",
                "EffectiveFrom":    "01-09-2016",
                "EffectiveTo":      "31-09-2017",
                "Point":            "11",
                "Amount":           "45000""
            }
            
+ Response 200 (application/json)

            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "PayScaleId":           0001,
                "PayScaleSpinePointId": 0001
            },{
                "Status":               true,
                "Details":              "Saved successfully", 
                "PayScaleId":           0001,
                "PayScaleSpinePointId": 0002
            },{
                "Status":               true,
                "Details":              "Saved successfully", 
                "PayScaleId":           0001,
                "PayScaleSpinePointId": 0003
            }
            

### Update Pay Scales [PUT]

+ Request

    + Headers
            
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "PayscaleId":       12346,
                "Name":             "Leadership",
                "EffectiveFrom":    "01-09-2016",
                "EffectiveTo":      "31-09-2017",
                "PayScalePointId":  5345,
                "Point":            "L1",
                "Amount":           "25000"
            },{
                "PayscaleId":       12346,
                "Name":             "Leadership",
                "EffectiveFrom":    "01-09-2016",
                "EffectiveTo":      "31-09-2017",
                "PayScalePointId":  5346,
                "Point":            "L2",
                "Amount":           "27000"
            },{
                "PayscaleId":       12346,
                "Name":             "Leadership",
                "EffectiveFrom":    "01-09-2016",
                "EffectiveTo":      "31-09-2017",                
                "PayScalePointId":  5347,
                "Point":            "L3",
                "Amount":           "29000"
            }
            
+ Response 200 (application/json)

            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "PayScaleId":           12346,
                "PayScaleSpinePointId": 5345
            },{
                "Status":               true,
                "Details":              "Saved successfully", 
                "PayScaleId":           12346,
                "PayScaleSpinePointId": 5346
            },{
                "Status":               true,
                "Details":              "Saved successfully", 
                "PayScaleId":           12346,
                "PayScaleSpinePointId": 5347
            }
            
    

# Group Timtetable

Group of all Timetable Resources

## Default Timetable Settings [/DefaultTTSource?]

### Retrieve the default Timetable Source and Day Composition

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "DefaultTimeTableSourceID": 2462,
                "DefaultTimetableSource": "2017/2018",
                "DefaultDayCompositionID": 4407,
                "DefaultDayComposition": "School Day"
            }

## Timetable Sources [/TTSources?]


### Retrieve Timetable Sources Association [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "TimetableSourceId": 2132,
                "Code": "BehSource",
                "Name": "BehDetSource",
                "StartDate": "2015-08-30",
                "EndDate": "2016-08-27",
                "TimetableIterations": 52,
                "splitCoverEvents": false,
                "splitMultiplePeriods": false,
                "ActiveSource": "N"
                },
                {
                "TimetableSourceId": 2133,
                "Code": "Current",
                "Name": "Timetable 2015/2016",
                "StartDate": "2015-08-30",
                "EndDate": "2016-08-27",
                "TimetableIterations": 52,
                "splitCoverEvents": false,
                "splitMultiplePeriods": false,
                "ActiveSource": "Y"
            }

## Create/Update Timetable Sources [/TTSources/]

### Create Timetable Sources [POST]

Create one to many Timetable Sources

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "Code":                     "2015/2016",
                "Name":                     "TT 2015/2016",
                "StartDate":                "2015/09/01",
                "TimetableIterations":      52,
                "SplitCoverEvents" :        false,
                "SplitMultiplePeriods":     false
            }


+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "TimetableSourceId":        1,
                "Code":                     "2015/2016"
            }


### Update Timetable Sources [PUT]

Update one to many Timetable Sources

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            {
                "TimetableSourceId":        1,
                "Code":                     "2015/2016",
                "Name":                     "Updated",
                "StartDate":                "2015/09/01",
                "EndDate":                  "2016/08/31",
                "TimetableIterations":      52,
                "SplitCoverEvents" :        false,
                "SplitMultiplePeriods":     false
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "TimetableSourceId":        1,
                "Code":                     "2015/2016"
            }

## Day Structure [/DayStructures/{?SourceId}]

+ Parameters
    + SourceId (optional, number, `1234`) ... unique identifier of an Academic Year

### Retrieve Day Structures [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)
            
    + Body
    
            {
                "DayStructureId":   1064,
                "DayCode":          "Mon1",
                "DayName":          "Monday1",
                "DayOrder":         1
            }


### Create Day Structure [POST]

Create one to many days for a school timetable

+ Fields
    + Source (required, string, `TT2016/17`) ... code of Timetable Source
    + DayCode (required, string, 'Mon1') ... code of Day
    + DayName (required, string, `Monday1`) ... name of Day
    + DayOrder (required, int, '1') ... position of the day in the week i.e. 1,2,3,4

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
                "Source":           "TT2016/17",
                "DayCode":          "Mon1",
                "DayName":          "Monday1",
                "DayOrder":         1
            },
            {
                "Source":           "TT2016/17",
                "DayCode":          "Tue1",
                "DayName":          "Tuesday",
                "DayOrder":         2
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "DaySTructureId":   6543
            },
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "DayStructureId":   6544
            }



## Date Mappings [/DateMappings/{?SourceId}]

+ Parameters
    + SourceId (required, number, `2731`) ... unique identifier of a timetable source

### Retrieve Date Mappings [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "DateMappingId":    1064,
                "DayStructureId":   2154,
                "IterationNumber":  1,
                "Date":        "30-08-2015"
            },
            {
                "DateMappingId":    1064,
                "DayStructureId":   2155,
                "IterationNumber":  2,
                "Date":        "13-09-2015"
            },
            {
                "DateMappingId":    1064,
                "DayStructureId":   2156,
                "IterationNumber":  3,
                "Date":        "27-09-2015"
            }
            

### Create Date Mappings [POST]

+ Fields
    + Source (required, string, 'TT2016/17') ... code of the Timetable Source
    + IterationNumber (required, int, '2154') ... number of the Iteration
    + Date (required, string, `04/09/2017`) ... name of Day
    
+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Source":           "TT2016/17",
                "IterationNumber":  1,
                "Date":             "04/09/2017",
                "DayCode":          "Mon1"
            },
            {
                "Source":           "TT2016/17",
                "IterationNumber":  2,
                "Date":             "18/09/2017",
                "DayCode":          "Mon1"
            },
            {
                "Source":           "TT2016/17",
                "IterationNumber":  3,
                "Date":            "02/10/2017",
                "DayCode":          "Mon1"        
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "DateMappingId":            2154
            },
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "DateMappingId":            2155
            },
            {   "Status":                   true,
                "Details":                  "Saved successfully",
                "DateMappingId":            2156
            }
    

## Day Compositions  [/dayCompositions/{?TTSourceId}]

+ Parameters
    + TTSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Day Compositions [GET]

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                    "Day Comp 2014/2015"
             },
            {
                "TimetableSourceId":        1,
                "DayCompositionId":         2,
                "Name":                    "Day Comp 2014/2015 For KS5"
             }


### Create Day Compositions [POST]

Create one to many Day Compositions

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            {           
                "TimetableSourceId":        1,
                "Name":                     "DC 2014/2015"
            }


+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                     "DC 2014/2015"
            }

### Update Day Compositions [PUT]

Update one to many Day Compositions

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            {           
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                     "DC 2014/2015 Updated"
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "TimetableSourceId":        1,
                "DayCompositionId":         1,
                "Name":                     "DC 2014/2015 Updated"
            }


## Day Compositions Periods [/dayCompositionsPeriods/{?TTSourceId}]

** Please note the lowercase 'd' in this call **

+ Parameters
    + TTSourceId (optional, number, `12345`) ... The unique identifier of a Timetable Source

### Retrieve Day Composition Periods [GET]

Response codes used are:

- 200: Returns with data
- 204: No data available

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        

+ Response 200 (application/json)

    + Body
    
            {
                "DayCompositionId": 3706,
                "TTSourceId": 2133,
                "PeriodId": 83077,
                "PeriodCode": "P2",
                "PeriodName": "Period2",
                "StartTime": "09:00",
                "EndTime": "10:00",
                "WeekDay": "Monday"
                },
                {
                "DayCompositionId": 3706,
                "TTSourceId": 2133,
                "PeriodId": 83080,
                "PeriodCode": "P1",
                "PeriodName": "Period1",
                "StartTime": "08:40",
                "EndTime": "09:00",
                "WeekDay": "Monday"
            },
            {
                "DayCompositionId": 3706,
                "TTSourceId": 2133,
                "PeriodId": 83082,
                "PeriodCode": "P4",
                "PeriodName": "Period4",
                "StartTime": "11:20",
                "EndTime": "12:20",
                "WeekDay": "Monday"
            }


### Create Day Compositions Periods [POST]

Create one to many Day Composition Periods

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "WeekDay":                  "Monday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            },
            {
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "WeekDay":                  "Tuesday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 1
            },
            {
                "Status":                    true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 2
            }


### Update Day Compositions Periods [PUT]

Update one to many Day Composition Periods

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "PeriodId":                 1,
                "WeekDay":                  "Monday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            },
            {
                "DayCompositionId":         1,
                "TimetableSourceId":        1,
                "PeriodId":                 2,
                "WeekDay":                  "Tuesday",
                "PeriodCode":               "P1",
                "PeriodName":               "Period 1",
                "StartTime":                "08:30",
                "EndTime":                  "09:50"
            }

+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 1,
                "WeekDay":                  "Monday",
                "PeriodCode":               "P1"
            },
            {
                "Status":                   true,
                "Details":                  "Saved successfully",  
                "DayCompositionId":         1,
                "PeriodId":                 2,
                "WeekDay":                  "Tuesday",
                "PeriodCode":               "P1"
            }

## Week Ranges [/WeekRanges/{?SourceId}]

+ Parameters
    + SourceId (required, number, `1235`) ... unique Id of timetable source

### Retrieve Week Ranges [GET]
    
+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "WeekRangeId":    1581,
                "Name":             "Full Year",
                "IterationNumber":  1
                "StartDate":        "30-08-2015"
            }
            

### Create Week Range [POST]

+ Fields
    + Source (required, string, `TT2016/17`) ... code of Timetable Source
    + Name (required, string, '1-22') ... name of the Week Range
    + Iterations (required, int, '1,2,3,4,5,6,7,8,9,10') ... array of iterations
    
+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
                "Source":           "TT2016/17",
                "Name":             "1-4",
                "Iterations":       [
                                        1,2,3,4
                                    ]
            },{
                "Source":           "TT2016/17",
                "Name":             "1-11",
                "Iterations":       [
                                        1,2,3,4,5,6,7,8,9,10,11
                                    ]
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "WeekRangeId":            6543
            },
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "WeekRangeId":            6544
            }


## Timetable Events  [/ttEvents/{?SourceId}{?EmployeeId}{?LearnerId}{?StartDate}{?EndDate}{?DayCompositionId}]

### Retrieve Timetable Events [GET]

*This no longer returns event for Learners who have left the group*

- Mandatory fields
    - SourceId is a mandatory field
    - LearnerId if ILM events are to be returned

And either

    - LearnerId
    - EmployeeID
    - StartDate and EndDate

+ Parameters
    + SourceId (required, number, `2133`) ... unique Id of  the timetable source
    + EmployeeId (optional, number, `1023454`) ... unique Id of employee
    + LearnerId (optional, number, `123456`) ... unique Id of Learner
    + StartDate (optional, date, `2015-12-01`) ... Start of date range
    + EndDate (optional, date, `2015-12-08`) ... End of date range
    + DayCompositionId (optional, number, `1234`) ... filter for event for a single day


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {            
                "EventId":          124512732,
                "Date":             "2015-12-01",
                "DayComposition":   "Lessons",
                "PeriodId":         123456,
                "StartTime":        "09:00",
                "FinishTime":       "10:00",
                "Day":              "Tuesday1",
                "EventType":        "Timetable",
                "Duration":         60,
                "NCAEventType":     "",
                "Employees":        [
                                      {
                                        "EventTeacherAssociationId":    48523,
                                        "EmployeeId": 104034,
                                        "EmployeeCode": "KBr"
                                      }
                                    ],
                "Groups":           [
                                      {
                                        "EventLearnerGroupAssociationId":   15684,
                                        "GroupId": 1044341,
                                        "GroupCode": "11En1",
                                        "Type": "TeachingGroup"
                                      }
                                    ],
                "Subjects":         [
                                      {
                                        "EventSubjectAssociationId":        87131,
                                        "Subject": "EN"
                                      }
                                    ],
                "Rooms":            [
                                      {
                                        "EventRoomAssociationId":           184615,
                                        "Room": "CE06"
                                      }
                                    ],
                "WeekRangeId":      45488LEarners
            }
            

### Create Timetable Events [POST]

**Pre-requisites**
* Timetable Source, Day Structure, Date Mappings, Day Compositoin and Week Ranges have already been created
* If EventCategory = NCA, then EventType must be populated and Subject is not required
* If EventCategory = Timetable then Subject is required

+ Fields
    + Source (required, string, `TT2016/17`) ... code of Timetable Source
    + DayComposition (required, string, `Lessons`) ... name of Day Composition
    + EffectiveDate (required, string, `28\06\2017`) ... start date of Iterations
    + EventCategory (required, string, `NCA`) ... Category of Event. Valid values Timetable or NCA
    + EventType (required, string, `PPA`) ... Type of NCA Event
    + Iterations (required, int, `1,2,3,4,5`) ... number of the Iterations the event is required for
    + Day (required, string, `MonA`) ... code of the day the event is required for
    + StartTime (required, string, `09:00`) ... start time of the event
    + EndTime (required, string, `10:00`) ... end time of the event
    + Employees (required, string, `Abc,CDe`) ... code of staff assigned to the event
    + Subjects (optional, string, `ART,AR/TX`) ... code of subjects assigned to the event. Mandatory whre EventCategory = Timetable 
    + Rooms (optional, string, `6ART,AWE05`) ... code of rooms assigned to the event
    + Groups (optional, string, `10.1ART,10.2ART`) ... code of groups assigned to the event


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
            
            {
                "Source":           "TT2016/17",
                "DayComposition":   "Lessons",
                "EventCategory":    "Timetable",
                "EventType":        null,
                "EffectiveDate":    "19/06/2017",
                "Iterations":       [
                                    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
                                    ],
                "Day":              "MonA",
                "StartTime":        "09:00",
                "EndTime":          "10:00",
                "Employees":        [
                                        "ABc","CDe"
                                    ],
                "Subjects":          [
                                        "ART","AR/TX"
                                    ],
                "Rooms":            [
                                        "6ART","AWE05"
                                    ],
                "TeachingGroups":           [
                                        "10.1ART","10.2ART"
                                    ]
            },
            {
                "Source":           "TT2016/17",
                "DayComposition":   "Lessons",
                "EventCategory":    "NCA",
                "EventType":        "PPA",
                "EffectiveDate":    "19/06/2017",
                "Iterations":       [
                                    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
                                    ],
                "Day":              "MonA",
                "StartTime":        "09:00",
                "EndTime":          "10:00",
                "Employees":        [
                                        "ABc","CDe"
                                    ],
                "Subjects":          [
                                        "ART","AR/TX"
                                    ],
                "Rooms":            [
                                        "6ART","AWE05"
                                    ],
                "RegistrationGroups":   [
                                            "10.1ART","10.2ART"
                                        ]
            }
            
            
+ Response 200

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "EventStructureId":         6543,
                "EventId":                  [123456, 123457,123458,123459]
            },
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "EventStructureId":         4567,
                "EventId":                  [987654, 987655,987656,987657]
            }
            

### Update Timetable Events [PUT]

+ Fields
    + EventId (required, int, `12345`) ... unique Event Id

All below fields are required if anyone is present
    + Source
    + DayComposition
    + Iteration
    + Day
    + StartTime
    + EndTime


+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body
    
            {
                "Source":               "TT2016/17",
                "EventId":              6521,
                "DayComposition":       "AllDay",
                "EventType":            "AdHoc",
                "Iteration":            1,
                "Day":                  "MonA",
                "StartTime":            "09:00",
                "EndTime":              "10:00"
                "Employees":            [
                                        {
                                            "EventTeacherAssociationId":    1234,
                                            "EmployeeCode":                 "ABc"
                                        }
                                        ],
                "Subjects":             [
                                        {
                                            "EventSubjectAssociationId":    8463,
                                            "Subject":                      "ART"
                                        }
                                        ],
                "Rooms":                [
                                        {
                                            "EventRoomAssociationId":       7561,
                                            "Room":                         "6ART"
                                        }
                                        ],
                "TeachingGroups":       [
                                        {
                                            "EventLearnerGroupAssociationId":   4567,
                                            "GroupCode":                        "10.1ART"
                                        }
                                        ],
                "RegistrationGroups":   [
                                        {
                                            "EventLearnerGroupAssociationId":   5216,
                                            "GroupCode":                        "10A"
                                        }
                                        ]
            }
            

+ Response 200

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "EventId":              6521
            }
        

## Staff Timetable [/EmployeeTTEvents{?SourceId}{?EmployeeId}{?DateFrom}{?DateTo}]

Retrieve the timetable of Employees including covered events
There is a new field of 'IsCovered'. When this is true it means the Staff is covering this event for the specific day.

### Retrieve Staff Timetable [GET]

+ Parameters
    + SourceId (required, int, `1234`) ... unique Id of Timetable Source
    + EmployeeId (required, int, `123420`) ... unique ID of Employee
    + DateFrom (required, date, `01-09-2015`) ... start of the date range
    + DateTo (required, date, `31-08-2016`) ... end of the date range

+ Request 

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                    "EventId": 157495759,
                    "Date": "2018-02-20",
                    "PeriodId": 107862,
                    "StartTime": "08:30",
                    "FinishTime": "08:50",
                    "Day": "TuesdayA",
                    "EventType": "Timetable",
                    "Duration": 20,
                    "NCAEventType": null,
                     "Groups":   [
                                    {
                                        "EventLearnerGroupAssociationId": 152470414,
                                        "GroupId": 1225798,
                                        "GroupCode": "11O-REG",
                                        "Type": "TeachingGroup"
                                    }
                                ],
                    "Subjects": [
                                    {
                                        "EventSubjectAssociationId": 154211698,
                                        "Subject": "REG"
                                    }
                                ],
                    "Rooms":    [
                                    {
                                        "EventRoomAssociationId": 115036828,
                                        "Room": "EN5"
                                    }
                                ],
                    "WeekRangeId": 6852,
                    "IsCovered": True
                },
                {
                    "EventId": 157526347,
                    "Date": "2018-02-20",
                    "PeriodId": 107870,
                    "StartTime": "13:10",
                    "FinishTime": "14:50",
                    "Day": "TuesdayA",
                    "EventType": "NonContactActivities",
                    "Duration": 100,
                    "NCAEventType": "OFFSITE",
                    "Employees":[
                                    {
                                        "EventTeacherAssociationId": 162844195,
                                        "EmployeeId": 126049,
                                        "EmployeeCode": "WiGr"
                                    }
                                ],
                    "Groups": null,
                    "Subjects": null,
                    "Rooms": null,
                    "WeekRangeId": 6852,
                    "IsCovered": false
                },
                {
                    "EventId": 157538008,
                    "Date": "2018-02-20",
                    "PeriodId": 107864,
                    "StartTime": "09:40",
                    "FinishTime": "10:30",
                    "Day": "TuesdayA",
                    "EventType": "Adhoc",
                    "Duration": 50,
                    "NCAEventType": null,
                    "Employees": [
                        {
                            "EventTeacherAssociationId": 162857764,
                            "EmployeeId": 126049,
                            "EmployeeCode": "WiGr"
                        }
                    ],
                    "Groups": null,
                    "Subjects": [
                        {
                            "EventSubjectAssociationId": 154242301,
                            "Subject": "AEN"
                        }
                    ],
                    "Rooms": null,
                    "WeekRangeId": null,
                    "IsCovered": false
                }


# Group Physical

Collection of all Physical Resources

## Room Categories [/RoomCategories]

### Retrieve Room Categories [GET]

Retrieve all room categories

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "RoomCategoryId": 30975,
                "RoomCategoryCode": "ICT",
                "RoomCategoryName": "ICT Suite",
                "Description": "ICT Suite"
            },
            {
                "RoomCategoryId": 30976,
                "RoomCategoryCode": "Hall",
                "RoomCategoryName": "Hall",
                "Description": "Hall"
            },
            {
                "RoomCategoryId": 48164,
                "RoomCategoryCode": "Lab",
                "RoomCategoryName": "Science Lab",
                "Description": null
            },
            {
                "RoomCategoryId": 48165,
                "RoomCategoryCode": "Tech",
                "RoomCategoryName": "Technology Room",
                "Description": null
            }

### Create Room categories [POST]
Create one to many room categories

+ Fields
    + RoomCategoryCode (required, string, 'HALL') ... unique code of the RoomCategory
    + RoomCategoryName (required, string, 'Hall') ... name of the RoomCategory

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "RoomCategoryCode":       "ART",
                "RoomCategoryName":       "Art Block", 
                "Description":            "Art Block"                                   
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "RoomCategoryId":       0456,
                "RoomCategoryCode":     "ART"
            }

### Update Room Categories [PUT]

Update one to many room categories

+ Fields
    + RoomCategoryID (required, int, '00001') ... unique code of the RoomCategory

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "RoomCategoryId":         0001,
                "RoomCategoryCode":       "HALL",
                "RoomCategoryName":       "Hall", 
                "Description":            "Used for Assesmblies and Exams"                                   
            }
            
+ Response 200

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "RoomCategoryId":       0001,
                "RoomCategoryCode":     "HALL"
            }

## Room Types [/RoomTypes]

### Retrieve Room Types [GET]

Retrieve all room types

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {          
                "TypeId":       0001,
                "TypeCode":     "AD",
                "TypeName":     "Art and Design",
                "Description":  "Art and Design Centre"
            },{
                "TypeId":       0002,
                "TypeCode":     "ICT",
                "TypeName":     "ICT",
                "Description":  "ICT Suite"
            }
            

### Create Room Types [POST]

Create one to many room types

+ Fields
    + TypeName (required, string, 'Art and Design') ... Room type name
    + TypeCode (required, string, 'AD') ... Room type code

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {   
                "TypeCode":     "AD",
                "TypeName":     "Art and Design",
                "Description":  "Art and Design Centre"
            },{
                "TypeCode":     "ICT",
                "TypeName":     "ICT",
                "Description":  "ICT Suite"
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "TypeId":               0001,
                "TypeCode":             "AD"
            },{
                "Status":               true,
                "Details":              "Saved successfully", 
                "TypeId":               0002,
                "TypeCode":             "ICT"
            }
            

### Update Room Types [PUT]
Update one to many room types

+ Fields
    + TypeId (required, int, '0001') ... unique id of room type
    
+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {   
                "TypeId":       0001'
                "TypeCode":     "AD",
                "TypeName":     "AD",
                "Description":  "Art and Design Suite"
            },{
                "TypeId":       0002
                "TypeCode":     "ICT",
                "TypeName":     "ICT",
                "Description":  "Information Technolgy Suite"
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "TypeId":               0001,
                "TypeCode":             "AD"
            },{
                "Status":               true,
                "Details":              "Saved successfully", 
                "TypeId":               0002,
                "TypeCode":             "ICT"
            }

## Rooms  [/rooms/{?RoomId}]

+ Parameters
    + RoomId (optional, number, `12345`) ... The unique identifier of a room

### Retrieve Rooms [GET]

Retrieve one to many rooms

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {
                "RoomId": 74441,
                "RoomCode": "ScIT",
                "RoomName": "ScienceIT",
                "Site": "Main Site",
                "Roomcategory": null,
                "AssociatedEquipments": [
                                          {
                                            "EquipmentId": 1144,
                                            "EquipmentCode": "SmBoard",
                                            "EquipmentName": "Smart Board"
                                          }
                                        ],
                "TypeAndCapacity": [
                                          {
                                            "RoomType": "OTH",
                                            "Capacity": 0
                                          }
                                        ]
            },
            {
                "RoomId": 74447,
                "RoomCode": "SciMez",
                "RoomName": "Sci mez",
                "Site": "Main Site",
                "Roomcategory": null,
                "AssociatedEquipments": null,
                "TypeAndCapacity":  [
                                        {
                                        "RoomType": "OTH",
                                        "Capacity": 10
                                        }
                                    ]
            }

### Create Rooms [POST]

Create one to many Rooms. If the associated equipment does not exist it will create this too.

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "RoomCode":            "API8",
                "RoomName":            "API8",
                "Site":                "Main",
                "RoomCategory":        null,
                "TypeAndCapacity":     [{
                                        "RoomType":  "ICT",
                                        "Capacity":  "30"
                                        },{
                                        "RoomType":  "EXM",
                                        "Capacity":  "25"
                                        }],     
                "AssociatedEquipments": [{
                                        "EquipmentCode":  "OHP",
                                        "EquipmentName":  "Overhead Projector"
                                        }]
            }
        
+ Response 200 (application/json)

    + Body
    
            {
                "Details": "Saved successfully",
                "Status": true,
                "RoomId": 83913,
                "RoomCode": "API8"
            }


## Sites  [/site/{?SiteId}]

+ Parameters

    + SiteId (optional, number, `12345`) ... The unique identifier of a site

### Retrieve Sites [GET]

Retrieve one or more Sites

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
        
+ Response 200 (application/json)

    + Body
    
            {          
                "SiteId":       1,
                "SiteCode":     "Main site",
                "SiteName":     "The Main Site of School"
            }

### Create Site [POST]

Create one to many Sites

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "SiteCode":     "Main site",
                "SiteName":     "The Main Site of School"           
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully", 
                "SiteId":       1
            }

            
### Update Site [PUT]

Update one to many Sites

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                "SiteId":       1,
                "SiteCode":     "Main site 1",
                "SiteName":     "The Main Site of School"           
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully", 
                "SiteId":               1
            }

            
# Group Behaviour

Collection of Behaviour methods

## Assign Staff Behaviour Position [/StaffPosition]

Assign a memeber of staff a potion for Behaviour Management

*Value:*
*Code*  *Description*
1       Whole School
2       Course
3       Year
4       Academic House
5       Department
6       Subject

+ Request

    + Headers
    
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
                    "StaffCode":    "SCaAt",
                    "Position":     "TCHR",
                    "MappedFor":    2,
                    "Value":        "KS3"
            },{
                    "StaffCode":    "MSe",
                    "Position":     "TCHR",
                    "MappedFor":    3,
                    "Value":        "10"
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":       true,
                "Details":      "Saved successfully",
                "EmployeeId":   123456,
                "StaffCode":    "ABc",
                "StaffPositionMappingId":   1000
                
            },{
                "Status":       true,
                "Details":      "Saved successfully",
                "EmployeeId":   123457,
                "StaffCode":    "DEf",
                "StaffPositionMappingId":   1001
                
            }



## Behaviour Events Collection [/BMEvents/{?LearnerId}{?FromDate}{?ToDate}{?Behaviour}]

### Get Behaviour Events [GET]

+ Parameters
    + LearnerId (optional, int, `123420`) ... unique ID of Learner
    + FromDate (optional, date, `05-09-2016`) ... the beginning of the date range
    + ToDate (optional, date, `31-12-2016`) ... the end of the date range
    + Behaviour (optional, string, `Positive`) ... Positive, Negative or Neutral BM Events

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
                "BehaviourEntryId": 13798177,
                "LearnerId": 245277,
                "LearnerCode": "2009-0080",
                "RegGroup": "U6-RWE",
                "Behaviour": "Negative",
                "IncidentDate": "2017-02-07",
                "Subject": "BE",
                "Location": "CLS",
                "Published": "Yes",
                "Creator": "DhDr",
                "CreateorId": 458264,
                "Editor": null,
                "EditorId": 8535,
                "Assignee": "DiRo",
                "AssigneeId": 59898,
                "Status": "Completed",
                "Details": [
                              {
                                "Category": "CL",
                                "Type": "CLatt",
                                "Severity": "S2",
                                "point": 0
                              },
                              {
                                "Category": "CL",
                                "Type": "CLBEH",
                                "Severity": "S2",
                                "point": 2
                              }
                            ],
                "Comments": [
                              {
                                "BehaviourEntryCommentId": 5648278,
                                "Confidential": true,
                                "Comment": "Asked to go to the toilet and went to the one furthest away just to waste time."
                                "StaffCode":    "NS",
                                "EmployeeId":   123456
                              },
                              {
                                "BehaviourEntryCommentId": 5648279,
                                "Confidential": false,
                                "Comment": "Spat gum out on floor"
                                "StaffCode":    "NS",
                                "EmployeeId":   123456
                              },
                              {
                                "BehaviourEntryCommentId": 5648280,
                                "Confidential": false,
                                "Comment": "Was rude to memeber of Staff"
                                "StaffCode":    "NS",
                                "EmployeeId":   123456
                              }
                            ],
                "Actions":  [
                              "HTO",
                              "ISO"
                            ]
            }           

### Create Behaviour Events [POST]

Updated to include detentions

*If Scheduled = false, then tType must be OOB*

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            {
                "LearnerId":    443790,
                "Behaviour":    "Negative",
                "IncidentDate": "2017-02-03",
                "Subject":      "AD",
                "Location":     "CLS",
                "Published":    "No",
                "Creator":      "AB",
                "Assignee":     "ASJ",
                "Status":       "Created",
                "Types":            [
                                        "01NCW", "02CG"                                    ],
                "Comments":         [
                                    {
                                        "Confidential": true,
                                        "Comment":      "Asked to go to the toilet and went to the one furthest away just to waste time.",
                                        "StaffCode":    "AB"
                                    },
                                    {
                                        "Confidential": false,
                                        "Comment":      "Spat gum out on floor",
                                        "StaffCode":    "CS"
                                    }
                                    ],
                "Actions":          [
                                        "03DB","10LP"
                                    ],
                "DetentionDetails": {
                                        "Source":           "2017/2018",
                                        "DayComposition":   "Detentions",
                                        "Scheduled":        false,
                                        "Type":             "OOD",
                                        "Date":             "11/01/2018",
                                        "TimeFrom":         "12:45",
                                        "TimeTo":           "13:00"
                                    }
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "BehaviourEntryId": 13798182,
                "LearnerId": 245922,
                "Status": true,
                "Details": "Saved successfully"
            }


### Update Behaviour Events [PUT]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body

            {
                "BehaviourEntryId": 13798177,
                "LearnerId":    443790,
                "Behaviour":    "Negative",
                "IncidentDate": "2017-02-03",
                "Subject":      "AD",
                "Location":     "CLS",
                "Published":    "No",
                "Creator":      "AB",
                "Assignee":     "ASJ",
                "Status":       "Created",
                "Types":            [
                                        "01NCW", "02CG"                                    ],
                "Comments":         [
                                    {
                                        "Confidential": false,
                                        "Comment":      "Failed to attend Isolation",
                                        "StaffCode":    "ABc"
                                    },
                                    {
                                        "BehaviourEntryCommentId": 5648281,
                                        "Confidential": false,
                                        "Comment":      "Spat gum out on floor and was abusive to staff",
                                        "StaffCode":    "CS"
                                    }
                                    ],
                "Actions":          [
                                        "03DB","10LP"
                                    ]
            }
            
+ Response 200

    + Body
    
            {
                "BehaviourEntryId": 13798182,
                "LearnerId": 245922,
                "Status": true,
                "Details": "Saved successfully"
            }

## Behaviour Confirguation [/BMConfiguration]

### Get Behaviour configuration [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "DefaultBehaviour":     "Positive",
                "DefaultComments":      "GeneralComments"
                "CommentBoxSettings":   "Rtf"
            }


## BM On Behalf Of [/BMStaffOnBehalf]
Used to populate the 'On behalf of' field with Staff Code and Name

### Return a list of Staff who the Event can be taken on behalf of [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
                "SchoolOrClusterEmployeeId": 86078,
                "EmployeeId": 86531,
                "StaffCode": "ZoTh",
                "StaffName": "Aayliah Kurokawa",
                "Position": "TCR",
                "IsTeaching": true
            }

## BM Assign To [/BMAssignTo{?BehaviourEntryId}{?LearnerId}{?SubjectId}]
Used to populate the 'Assign To' field with Staff Code and Name

+ Parameters:
    + BehaviourEntryId (optional, int, `1001`) ... Id of the behaviour entry
    + LearnerID (optional, int, `374658`) ... array of LearnerId's
    + SubjectId (optional, int, `3456`) ... Lookup Id of Subject

### Return a list of Staff who the Event can be assigned to [GET]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
                "SchoolOrClusterEmployeeId": 68446,
                "EmployeeId": 68944,
                "StaffCode": "NR",
                "StaffName": "Jadha IBRAHEIM",
                "Position": "TCHR",
                "IsTeaching": true
            }

## Detention Events [/DetentionEvent{?IncidentDate}]
Retruns a list of the available detention slots for a given date

+ Parameters
    + IncidentDate (required, string, `18/01/2018`) ... date of the Incident

### Retrieve a lst of 10 Detetion Slots [GET]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
+ Response 200 (application/json)

    + Body
    
            {
                "EventId":          157540664,
                "Scheduled":        true,
                "Type":             "LT",
                "DetentionDate":    "2018-04-16",
                "StartTime":        "12:30",
                "FinishTime":       "12:50",
                "Day":              "MondayA",
                "Source":           "2017/2018",
                "DayComposition":   "Behaviour",
                "Staff":            [
                                        {
                                            "StaffCode": "ViDu",
                                            "Forename": "Anthonia Onyinoyi",
                                            "Surname": "Bunte"
                                        }
                                    ],
                "Room":             [
                                        {
                                            "Code": "SS",
                                            "Name": "Student Services"
                                        }
                                    ]
            },
            {
                "EventId":          157540671,
                "Scheduled":        true,
                "Type":             "LT",
                "DetentionDate":    "2018-04-16",
                "StartTime":        "12:50",
                "FinishTime":       "13:10",
                "Day":              "MondayA",
                "Source":           "2017/2018",
                "DayComposition":   "Behaviour",
                "Staff":            [
                                        {
                                            "StaffCode": "ViDu",
                                            "Forename": "Anthonia Onyinoyi",
                                            "Surname": "Bunte"
                                        }
                                    ],
                "Room":             [
                                        {
                                            "Code": "SS",
                                            "Name": "Student Services"
                                        }
                                    ]
            }


## Behaviour Structure Collection [/BMStructure]

### Get Behaviour Structure [GET]

Retrieves the current behaviour structure

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

+ Response 200 (application/json)

    + Body
    
            {
            "Categories":   [{
                                "CategoryId":     00001,
                                "Code":           "CAT1",
                                "Description":    "Category 1"
                            },{
                                "CategoryId":     00002,
                                "Code":           "CAT2",
                                "Description":    "Category 2"
                            },{
                                "CategoryId":     00003,
                                "Code":           "CAT3",
                                "Description":    "Category 3"
                            },{
                                "CategoryId":     00004,
                                "Code":           "CAT4",
                                "Description":    "Category 4"
                            }],
            "Types":        [{
                                "TypeId":          0001,
                                "Code":            "01Conf",
                                "Description":     "Confrontational",
                                "Points":          "2",
                                "Behaviour":       "Negative",
                                "Category":        "CAT1",
                                "Severity":        "High"
                            },{
                                "TypeId":          0002,
                                "Code":            "02CLWK",
                                "Description":     "Classwork",
                                "Points":          "3",
                                "Behaviour":       "Positive",
                                "Category":        "CAT1",
                                "Severity":        "Low"
                            }],
            "Severities":   [{
                                "SeverityId":       0001,
                                "Code":             "S1",
                                "Description":      "Low"
                            },{
                                "SeverityId":       0002,
                                "Code":             "S2",
                                "Description":      "Medium"
                            },{
                                "SeverityId":       0003,
                                "Code":             "S3",
                                "Description":      "High"        
                            }]
            "Actions":      [{
                                "ActionId":         0001,
                                "Code":             "01DET",
                                "Description":      "Think Tank",
                                "Behaviour":        "Negative",
                                "BehaviourType":    "Confrontational"
                            },{
                                "ActionId":         0002,
                                "Code":             "02REW",
                                "Description":      "Reward Point",
                                "Behaviour":        "Positive",
                                "BehaviourType":    "Classwork"
                            }]
            "Rules":        [{
                                "RuleId":           0001,
                                "RuleName":         "Reward",
                                "Status":           "Active",
                                "RuleCriteria":     "Behaviour",
                                "Behaviour":        "Positive",
                                "BehaviourType":    "Classwork",
                                "BehaviourCategory":"",
                                "BehaviourSeverity":"",
                                "Occurred":         "2",
                                "TimePeriod":       "Week",
                                "IsRecursive":      "",
                                "Consequences":     "Reward Point",
                                "Points":           "2",
                                "AddLearnerChar":   "Y"
                            [{
                                "CharacteristicId": 0001,
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 3",
                                "AndOr":            "Or"
                            },{
                                "CharacteristicId": 0002,
                                "Characteristic":   "Course",
                                "Operator":         "Equal",
                                "Value":            "Key Stage 4",
                                "AndOr":            ""
                            }]
                            }],
            "DetentionTypes":[{
                                "DetentionTypeId":  0001,
                                "Code":             "TT",
                                "Description":      "Think Tank"
                            },{
                                "DetentionTypeId":  0002,
                                "Code":             "OOD",
                                "Description":      "One off Detention"
                            }],
            "Locations":     [{
                                "LocationId":       0001,
                                "Code":             "CLS",
                                "Description":      "Classroom"
                            },{
                                "LocationId":       0002,
                                "Code":             "SBS",
                                "Description":      "School Bus"      
                            }]
            }

### Create Behaviour Structure [POST]

Creates a new Behaviour Management Structure

+ Fields
    + Code (required, string, '01Conf') ... Unique code for the type of behaviour
    + Description (required, string, 'Abusive/Threating Language') ... Description of the type of behaviour
    + Points (required, number, '0') ... Number of points, defaults to zero


+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
            "Categories":   [{
                            "Code":           "CAT1",
                            "Description":    "Category 1"
                            },{
                            "Code":           "CAT2",
                            "Description":    "Category 2"
                            },{
                            "Code":           "CAT3",
                            "Description":    "Category 3"
                            },{
                            "Code":           "CAT4",
                            "Description":    "Category 4"
                            }],
            "Types":        [{
                            "Code":            "01Conf,
                            "Description":     "Confrontational",
                            "Points":          2,
                            "Behaviour":       "Negative",
                            "Category":        "CAT1",
                            "Severity":        "High"
                            },{
                            "Code":            "02CLWK,
                            "Description":     "Classwork",
                            "Points":          3,
                            "Behaviour":       "Positive",
                            "Category":        "CAT1",
                            "Severity":        "Low"
                            }],
            "Severities":   [{
                            "Code":             "S1",
                            "Description":      "Low"
                            },{
                            "Code":             "S2",
                            "Description":      "Medium"
                            },{
                            "Code":             "S3",
                            "Description":      "High"        
                            }],
            "Actions":      [{
                            "Code":             "01DET",
                            "Description":      "Think Tank",
                            "Behaviour":        "Negative",
                            "BehaviourType":    [{ 
                                                    "01Conf",
                                                    "02CLWK"
                                                }],
                            },{
                            "Code":             "02REW",
                            "Description":      "Reward Point",
                            "Behaviour":        "Positive",
                            "BehaviourType":    [{
                                                "02CLWK"
                                                }]
                            }],
            "Rules":        [{
                            "RuleName":         "Reward",
                            "Status":           "Active",
                            "RuleCriteria":     "Behaviour",
                            "Behaviour":        "Positive",
                            "BehaviourType":    "02CLWK",
                            "BehaviourCategory":"CAT2",
                            "BehaviourSeverity":"S2",
                            "Occurred":         2,
                            "TimePeriod":       "Week",
                            "IsRecursive":      false,
                            "Consequences":     "02REW",
                            "Points":           2,
                            "Characteristics":
                                [{
                                    "Characteristic":   "Course",
                                    "Operator":         "Equal",
                                    "Sequence":         1,
                                    "Value":            "Key Stage 3",
                                    "AndOr":            "Or"
                                },{
                                    "Characteristic":   "Course",
                                    "Operator":         "Equal",
                                    "Sequence":         2
                                    "Value":            "Key Stage 4",
                                    "AndOr":            ""
                                }]
                            }],
            "DetentionTypes":   [{
                                "Code":             "TT",
                                "Description":      "Think Tank"
                                },{
                                "Code":             "OOD",
                                "Description":      "One off Detention"
                                }],
            "Locations":        [{
                                "Code":             "CLS",
                                "Description":      "Classroom"
                                },{
                                "Code":             "SBS",
                                "Description":      "School Bus"      
                                }]
            }
            
+ Response 200 (application/json)

    + Body
    
            {
            "Status":       true,
            "Details":      "Saved successfully"
            "Categories":   [{
                            "CategoryId":   0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "CategoryId":   0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "CategoryId":   0003,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "CategoryId":   0004,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Types":        [{
                            "TypeId":       0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "TypeId":       0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Severities":   [{
                            "SeverityId":   0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "SeverityId":   0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "SeverityId":   0003,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Actions":      [{
                            "ActionId":     0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            },{
                            "ActionId":     0002,
                            "Status":       true,
                            "Details":      "Saved successfully"
                            }],
            "Rules":        [{
                            "RuleId":       0001,
                            "Status":       true,
                            "Details":      "Saved successfully"
                                [{
                                "CharacteristicId":         0001
                                },{
                                "CharacteristicId":         0002
                                }]
                            }],
            "DetentionTypes":[{
                            "DetentionTypeId":  0001,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            },{
                            "DetentionTypeId":  0002,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            }],
            "Locations":     [{
                            "LocationId":       0001,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            },{
                            "LocationId":       0002,
                            "Status":           true,
                            "Details":          "Saved successfully"
                            }]
            }
            

### Update Behaviour Structure [PUT]

Updates an Behaviour Management Structure

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]

    + Body
    
            {
            "Categories":   [{
                            "CategoryId":       0001,
                            "Code":             "ABL",
                            "Description":      "Abusive Language"
                        },{
                            "CategoryId":       0002,
                            "Code":             "BUL",
                            "Description":      "Bullying"
                        }],
            "Types":        [{
                            "TypeId":           0001,  
                            "Code":             "Conf",
                            "Description":      "Confrontational",
                            "Points":           "2",
                            "Behaviour":        "Negative",
                            "Category":         "BUL",
                            "Severity":         "High"
                        }],
            "Severities":   [{
                            "SeverityId":       0001,
                            "Code":             "S1",
                            "Description":      "1"
                        },{
                            "SeverityId":       0002,
                            "Code":             "S2",
                            "Description":      "2"
                        },{
                            "SeverityId":       0003,
                            "Code":             "S3",
                            "Description":      "3"        
                        }],
            "Actions":      [{}],
            "Rules":        [{}],
            "DetentionType":[{}],
            "Location":     [{}]
            }

+ Response 200

    + Body
    
            {
            "Categories":   [{
                            "CategoryId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "CategoryId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }],
            "Types":        [{
                            "TypeId":         0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        }]
            "Severities":   [{
                            "SeverityId":     0001,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0002,
                            "Status":         true,
                            "Details":        "Saved Successfully"
                        },{
                            "SeverityId":     0003,
                            "Status":         true,
                            "Details":        "Saved Successfully"    
                        }],
            "Actions":      [{}],
            "Rules":        [{}],
            "DetentionType":[{}],
            "Location":     [{}]
            }
            

# Group Post 16
A collection of Post 16 Learning Aim methods

## Enable Subject Classification Codes [/EnableSubjectCodes]

### Enable Subject Classification Codes [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
               "SubjectCalssificationCode": [
                                                "0016","0021","2330","FK5S"
                                            ]
            }  

+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "SubjectClassificationCodeStatusId":              123456,            
            }

## Map Subject Classification Codes [/MapSubjectDiscountCodes]

### Map Subject Classification Codes [POST]

+ Request

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
               "Subject":                   "AD",
               "SubjectClassificationCode": ["3510","2613"]
            },{
               "Subject":                   "CO",
               "SubjectClassificationCode": ["2610","5436"]
            },{
               "Subject":                   "HB-A2",
               "SubjectClassificationCode": ["4010"]
            }
            
+ Response 200 (appication/json)

    + Body
    
            {
                "Status":                           true,
                "Details":                          "Saved successfully",
                "SubjectCode":                      "AD", 
                "SubjectClassifiactionCodeDetailId":456125  
            },+ Body
    
            {
                "Status":                           true,
                "Details":                          "Saved successfully",
                "SubjectCode":                       "CO", 
                "SubjectClassifiactionCodeDetailId":456127  
            },+ Body
    
            {
                "Status":                           true,
                "Details":                          "Saved successfully",
                "SubjectCode":                      "HB-A2", 
                "SubjectClassifiactionCodeDetailId":456127  
            }
            

## Post 16 Learning Aims [/LearningAims]

### Create Learning Aims for a Learner [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
                "LearnerCode":          "012342",               
                "LearningAimDetails":   [
                                            {
                                                "Subject":          "AD",
                                                "StartDate":        "08/08/2017",
                                                "PlannedEndDate":   "31/07/2018",
                                                "ActualEndDate":    null,
                                                "SubjectClassCode":    "2350",
                                                "Status":           1,
                                                "CoreAimIndicator": true,
                                                "QNCode":           "60149450",
                                                "UKPRN":            10029085,
                                                "Traineeship":      false
                                            },
                                            {
                                                "Subject":          "BI",
                                                "StartDate":        "08/08/2016",
                                                "PlannedEndDate":   "31/07/2017",
                                                "ActualEndDate":    "25/01/2017",
                                                "SubjectClassCode":    "1010",
                                                "Status":           3,
                                                "CoreAimIndicator": false,
                                                "QNCode":           "50022362",
                                                "UKPRN":            10027380,
                                                "Traineeship":      false
                                            }
                                        ]
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":                   true,
                "Details":                  "Saved successfully",
                "Post16LearnerAimOutcomeID":123456,            
            }


## Post 16 Employment Details [/Post16Employment]

### Create Post 16 employment details for a learner [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
                "LearnerCode":          "012342",
                "Post16EmploymentDetails":     [
                                            {
                                                "StartDate":   "01/09/2016",
                                                "EndDate":   "21/08/2018",
                                                "Notes":            "Lorem ipsum"
                                            }
                                        ]
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":                               true,
                "Details":                              "Saved successfully",
                "LearnerFullTimeEmploymentDetailsID":   123456,            
            }
            

## Post 16 Planned Hours [/Post16PlannedHour]

### Assign Planned Hours to a QN code [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
                "AcademicYear":     "2017/2018",
                "QNCode":           "10034341",
                "SubjClassCode":    "2210",
                "PlannedHours":     162
            },
            {
                "AcademicYear":     "2017/2018",
                "QNCode":           "10034353",
                "SubjClassCode":    "2210",
                "PlannedHours":     162
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "QNCode":               "10034341",
                "LearnerAimsQanDataId": 10003824
            },
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "QNCode":               "10034353",
                "LearnerAimsQanDataId": 10010293
            }

## Post 16 Pastoral Hours [/Post16PastoralHours]

### Assign Pastoral Hours to a Learner [POST]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer [CURRENT_TOKEN]
            
    + Body

            {
                "AcademicYear":         "2017/2018",
                "LearnerCode":          "2011-4561",
                "PlannedPastoralHours": 20
            },
            {
                "AcademicYear":         "2017/2018",
                "LearnerCode":          "2125165",
                "PlannedPastoralHours": 15
            }
            
+ Response 200 (appicaltion/json)

    + Body
    
            {
                "Status":           true,
                "Details":          "Saved successfully",
                "LearnerCode":      "2011-4561"
            },
            {
                "Status":               true,
                "Details":              "Saved successfully",
                "LearnerCode":          "2125165"
            }